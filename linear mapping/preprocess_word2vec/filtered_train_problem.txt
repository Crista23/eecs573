bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
this erratum may cause a machinecheck error ia32_mci_statusmcacod0150h on the fetch of an instruction that crosses a 4 kbyte address boundary it applies only if 1 the 4kbyte linear region on which the instruction begins is originally translated using a 4kbyte page with the wb memory type 2 the paging structures are later modified so that linear region is translated using a large page 2mbyte 4mbyte or 1gbyte with the uc memory type and 3 the instruction fetch occurs after the pagingstructure modification but before software invalidates any tlb entries for the linear region
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm device notavailable exception
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executing when an enhanced intel speedstep technology transitions an intel turbo boost technology transitions or a thermal monitor events occurs the mf may be taken before pending interrupts are serviced
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
if xbegin is executed immediately after an execution of mov to ss or pop ss a transactional abort occurs and the logical processor restarts execution from the fallback instruction address if execution of the instruction at that address causes a debug exception bits 30 of the dr6 register may contain an incorrect value
if cpuideax07h ecx0ebxbmi1 bit 3 is 1 then opcode bytes f3 0f bc should be interpreted as tzcnt otherwise they will be interpreted as rep bsf due to this erratum opcode bytes f3 0f bc may execute as tzcnt even if cpuideax07h ecx0ebxbmi1 bit 3 is 0
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
the smsw instruction is illegal within an sgx software guard extensions enclave and an attempt to execute it within an enclave should result in a ud invalidopcode exception due to this erratum the instruction executes normally within an enclave and does not cause a ud
performing wrmsr to ia32_bios_updt_trig msr 79h on a logical processor while another logical processor is executing an smx safer mode extensions sentersexit operation getsecsenter or getsecsexit instruction may cause the processor to hang
when intel pt intel processor trace is enabled and a direct unconditional branch clears ia32_rtit_statusfilteren msr 571h bit 0 due to this erratum the resulting tippgd target ip packet packet generation disable may not have an ip payload with the target ip
execution of a 64 bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalidopcode exception if either the ts or em flag bits in cr0 are set a nm devicenotavailable exception will be raised instead of ud exception
the sticky count overflow bit is the most significant bit bit 52 of the corrected error count field bits5238 in ia32_mci_status msrs once set the sticky count overflow bit may not be cleared by a wrmsr instruction when this occurs that bit can only be cleared by poweron reset
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
if the wrmsr instruction writes to the ia32_bios_updt_trig msr 79h immediately after an execution of mov ss or pop ss that generated a debug exception the processor may fail to deliver the debug exception or if it does the dr6 register contents may not correctly reflect the causes of the debug exception
under complex conditions associated with the use of internal graphics the processor may exceed the max_lat csr values pci configuration space offset 03fh bits70
some intel processor trace packets should be issued only between tippge target ip packetpacket generation enable and tippgd target ip packetpacket generation disable packets due to this erratum when a tippge packet is generated it may be preceded by a psb packet stream boundary that incorrectly includes fup flow update packet and modeexec packets
if an intel pt intel processor trace topa table of physical addresses is not placed in wb writeback memory or is written by software executing within an intel tsx intel transactional synchronization extension transactional region the system may become unstable
if vm entry clears intel pt intel processor trace ia32_rtit_ctltraceen msr 570h bit 0 while packeten is 1 then a fup flow update packet will precede the tippgd target ip packet packet generation disable vm entry can clear traceen if the vmentry msrload area includes an entry for the ia32_rtit_ctl msr
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of offcore outstanding transactions each cycle due to this erratum the counts may be higher or lower than expected
the intel sgx software guard extensions encluegetkey instruction ignores the miscmask field in keyrequest structure when computing a provisioning key a provisioning seal key or a seal key
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
the intel sgx software guard extensions encluereport instruction may cause a gp general protection fault if any bit is set in targetinfo structures miscselect field
a vmx transition may result in a shutdown without generating a machinecheck event if a nonexistent msr is included in the associated msrload area when such a shutdown occurs a machine check error will be logged with ia32_mci_statusmcacod bits 150 of 406h but the processor does not issue the special shutdown cycle a hardware reset must be used to restart the processor
a transition from 64bit mode to compatibility or legacy modes may result in cause a subsequent x87 fpu state save to zeroing bits 6332 of the fdp x87 fpu data pointer offset and the fip x87 fpu instruction pointer offset
some intel pt intel processor trace ovf overflow packets may not be followed by a fup flow update packet or tippge target ip packet packet generation enable
the enclsecreate instruction uses an secs sgx enclave control structure referenced by the srcpage pointer in the pageinfo structure which is referenced by the rbx register due to this erratum the instruction causes a gp general protection fault if the secs attributes indicate that the enclave should operate in 64 bit mode and the enclave base linear address in the secs is not canonical
the iommu unit for processor graphics prefetches context or extendedcontext entries to improve performance due to the erratum the iommu unit may report spurious dma remapping faults if prefetching encounters a context or extended context entry which is not marked present
voltage glitch of up to 200mv on the vref signal lasting for about 1ms may be observed when entering system s3 state this violates the jedec ddr specifications
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
when using intel sgx software guard extensions the enclseinit instruction will incorrectly cause a gp general protection fault if the miscselect field of the sigstruct structure is not zero
if an intel pt intel processor trace internal buffer overflow occurs immediately before software executes a taken branch or event that enters an intel pt tracestop region the ovf overflow packet may be lost
when software loads a microcode update by writing to msr ia32_bios_updt_trig 79h on multiple logical processors in parallel a logical processor may due to this erratum count the wrmsr instruction as multiple instructionretired events
depending on the current intel mpx memory protection extensions configuration execution of certain branch instructions near call near ret near jmp and jcc instructions without a bnd prefix f2h initialize the mpx bound registers due to this erratum execution of such a branch instruction on a usermode page may not use the mpx configuration register appropriate to the current privilege level bndcfgu for cpl 3 or bndcfgs otherwise for determining whether to initialize the bound registers it may thus initialize the bound registers when it should not or fail to initialize them when it should
if intel pt intel processor trace is enabled wrmsr will not cause a general protection exception gp on an attempt to write a noncanonical value to any of the following msrs   msr_lastbranch_031_from_ip680h69fh  msr_lastbranch__031_to_ip6c0h6dfh  msr_lastbranch_from_ip1dbh  msr_lastbranch_to_ip1dch   msr_lastint_from_ip1ddh   msr_lastint_to_ip1dehinsteadthesamebehaviorwilloccurasifacanonical value had been written specifically the wrmsr will be dropped and the msr value will not be changed
after a c6 state exit the execution rate of avx instructions may be reduced
under complex microarchitectural conditions an intel pt processor trace ovf overflow packet may be issued after the first byte of a multibyte cyc cycle count packet instead of any remaining bytes of the cyc
the performance monitoring events longest_lat_cachereference event 2eh umask 4fh and longest_lat_cachemiss event 2eh umask 41h count requests that reference or miss in the last level cache however due to this erratum the count may be incorrect
when executing within an intel sgx software guard extensions enclave a gp generalprotection exception may be delivered instead of a db debug exception when an instruction breakpoint is detected this occurs when the instruction to be executed spans two pages the second of which has an entry in the epcm enclave page cache map that is not valid
execution of vaesenclast with vexl 1 should signal a ud invalid opcode exception however due to the erratum a nm device not available exception may be signaled
in vmx nonroot operation intel sgx software guard extensions enclave accesses to the apicaccess page may cause apicaccess vm exits instead of page faults
in pae paging mode the cr3115 are used to locate the pagedirectorypointer table due to this erratum those bits of cr3 are not compared to ia32_rtit_cr3_match msr 572h when ia32_rtit_ctlcr3filter msr 570h bit 7 is set
execution of the fsave fnsave fstenv or fnstenv instructions in realaddress mode or virtual8086 mode may save an incorrect value for the x87 fdp fpu data pointer this erratum does not apply if the last noncontrol x87 instruction had an unmasked exception
the peci platform environmental control interface 31 specifications operating frequency range is 02 mhz to 2 mhz due to this erratum peci may be unreliable when operated above 1 mhz
intel virtualization technology for directed io specification specifies setting the fpd fault processing disable field in the context or extendedcontext entry of iommu to mask recording of qualified dma remapping faults for dma requests processed through that context entry due to this erratum the iommu unit for processor graphics device may record dma remapping faults from processor graphics device bus 0 device 2 function 0 even when the fpd field is set to 1
intel pt intel processor trace cyc cycle count threshold is configured through cycthresh field in bits 2219 of ia32_rtit_ctl msr 570h a value of 13 is advertised as supported by cpuid leaf 14h sublead 1h due to this erratum if cycthresh is set to 13 then the cyc threshold will be 0 cycles instead of 4096 213 1 cycles
hdc hardware duty cycling will not put the physical package into the forced idle state while any logical processor is in vmx nonroot operation and the activate vmx preemption timer vmexecution control is 1
integrated audio codec may lose power when lpsp lowpower single pipe mode is enabled for an edp embedded displayport or dphdmi ports platforms with intel sst intel smart sound technology enabled are not affected
the processor may incorrectly configure transmitter buffer characteristics if the associated edp panel requests vesa equalization preset 3 5 6 or 8
bts branch trace store and btm branch trace message send branch records to the debug store management area and system bus respectively the branch predicted bit bit 4 of eighth byte in btsbtm records should report whether the most recent branch was predicted correctly due to this erratum the branch predicted bit may be incorrect
the performance monitoring event machine_clearsmemory_ordering event c3h umask 02h counts the number of machine clears caused by memory ordering conflicts however due to this erratum this event may undercount for vgathervpgather instructions of four or more elements
ia32_perf_global_statusctr_frz msr 38eh bit 59 is set when either 1 ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h bit 12 is set and a pmi is triggered or 2 software sets bit 59 of ia32_perf_global_status_set msr 391h when set ctr_frz should stop all core performance monitoring counters from counting however due to this erratum ia32_pmc47 msr c5c8h may not stop counting ia32_pmc47 are only available when a processor core is not shared by two logical processors
the performance monitoring events inst_retired event c0h any umask value and br_inst_retired event c4h any umask value count instructions retired and branches retired respectively however due to this erratum these events may overcount in certain conditions when   executing vmaskmov instructions with at least one masked vector element   executing rep movs or rep stos with fast strings enabled ia32_misc_enables msr 1a0h bit 0 set   an mpx br exception occurred on bndldxbndstx instructions and the br_inst_retired event c4h umask is 00h or 04h is used
the performance monitoring events offcore_response events b7h and bbh should count offcore responses matching the requestresponse configuration specified in msr_offcore_rsp_0 and msr_offcore_rsp_1 1a6h and 1a7h respectively for coreoriginated requests however due to this erratum dmnd_rfo bit 1 dmnd_ifetch bit 2 and other bit 15 request types may overcount
if intel pt processor trace is enabled a gp general protection fault caused by the instruction fetch immediately following execution of an rsm instruction may push an incorrect value for rflags onto the stack
if a page fault results from attempting to access a page in the sgx intel software guard extensions epc enclave page cache that is in the blocked state the processor does not set bit 15 of the error code and thus fails to indicate that the page fault was sgxinduced
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save as instruction pointer the address of the xbegin instruction instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
these processors may incorrectly report support for intel turbo boost technology via cpuid06heax bit 1
performance monitoring counters configured to count only os or only usr events by setting exactly one of bits 16 or 17 in ia32_perfevtselx msrs 186h18dh may not count for a brief period during the transition to a new cpl
under complex microarchitectural conditions executing a 256 avx bit instruction may result in unpredictable system behavior
when the display is turned on after being shutoff to save power or when the display is exiting psr panel self refresh mode the system may hang
if the vmentry controls load ia32_bndcfgs field bit 16 is 1 vmentry should fail when the value of the guest ia32_bndcfgs field in the vmcs is not canonical that is when bits 6347 are not identical due to this erratum vmentry does not fail if bits 6348 are identical but differ from bit 47 in this case vmentry loads the ia32_bndcfgs msr with a value in which bits 6348 are identical to the value of bit 47 in the vmcs field
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
according to hwp hardware pstates specification the guaranteed_performance field bits158 in the ia32_hwp_capabilities msr 771h should be updated as a result of changes in the configuration of tdp rapl running average power limit and other platform tuning options that may have dynamic effects on the actual guaranteed performance support level due to this erratum the processor will update the guaranteed_performance field only as a result of configurable tdp dynamic changes
after a fault due to a failed pebs processor event based sampling or bts branch trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
due to this erratum if ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h bit 12 is set to 1 when intel pt processor trace triggers a topa table of physical addresses pmi perfmon interrupt performance monitoring counters are not frozen as expected
according to hwp hardware pstates specification the reset value of the maximum_performance field bits 158 in ia32_hwp_request msr 774h should be set to the value of ia32_hwp_capabilities msr 771h highest_performance field bits70 after reset due to this erratum the reset value of maximum_performance is always set to 0xff
according to hwp hardware pstates specification the guaranteed_performance field bits158 in the ia32_hwp_capabilities msr 771h and the guaranteed_performance_change bit 0 bit in ia32_hwp_status msr 777h should not be changed more than once per second nor should the thermal interrupt associated with the change to these fields be signaled more than once per second due to this erratum the processor may change these fields and generate the associated interrupt more than once per second
the memory atretirement performance monitoring events listed below may produce incorrect results when a performance counter is configured in osonly or usronly modes bits 17 or 16 in ia32_perfevtselx msr counters with both os and usr bits set are not affected by this erratum  the list of affected memory atretirement events is as follows mem_inst_retiredstlb_miss_loads event d0h umask 11h mem_inst_retiredstlb_miss_stores event d0h umask 12h mem_inst_retiredlock_loads event d0h umask 21h mem_inst_retiredsplit_loads event d0h umask 41h mem_inst_retiredsplit_stores event d0h umask 42h mem_load_retiredl2_hit event d1h umask 02h mem_load_retiredl3_hit event d1h umask 04h mem_load_retiredl4_hit event d1h umask 80h mem_load_retiredl1_miss event d1h umask 08h mem_load_retiredl2_miss event d1h umask 10h mem_load_retiredl3_miss event d1h umask 20h mem_load_retiredfb_hit event d1h umask 40h
due to this erratum the conditions for hwp hardware pstates to generate a thermal interrupt on a logical processor may generate thermal interrupts on both logical processors of that core
when both msi message signaled interrupts and legacy intx are enabled by the camera device intx is asserted rather than issuing the msi in violation of the pci local bus specification
an x87 store instruction which causes a pe precision exception to be pended and updates an ept extended page tables ad bit may lead to unexpected behavior
use of vmaskmov instructions to store data that splits over two pages when the instruction resides on the first page may cause a hang if ept extended page tables is in use and the store to the second page requires setting the ad bits in the ept entry
when resuming from package c10 peci may fail to function properly
a pcie link should retrain when retrain link bit 5 in the link control register bus 0 device 1 functions 012 offset 0xb0 is set due to this erratum if the link is in the l1 state it may ignore the retrain request
after pcie 80 gts link equalization on a root port bus 0 device 1 function 0 1 2 has completed the expansion rom base address register offset 38h may be incorrect
the pcie base specification requires dll data link layer link activity reporting when 8 gts link speed is supported due to this erratum link activity reporting is not supported
bndldx and bndstx instructions access the bounds directory and table to load or store bounds these accesses should signal gp general protection exception when the address is not canonical ie bits 48 to 63 are not the sign extension of bit 47 due to this erratum gp may not be generated by the processor when a non canonical address is used by bndldx or bndstx for their bound directory memory access
under certain conditions ring_perf_limit_reasons msr 6b1h may incorrectly assert the other status bit bit 8 as well as the other log bit bit 24
due to this erratum the maximum ring frequency limit is incorrectly configured to be 100mhz higher than intended
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility an extension of pebs however due to this erratum these events may count incorrectly for vgathervpgather instructions
after a warm reset an edram corrected error may not be logged correctly until the associated machine check register is initialized this erratum may affect ia32_mc8_status or ia32_mc10_status
under complex system conditions sagv system agent enhanced intel speedstep may result in unpredictable system behavior
under a complex microarchitectural conditions the processor may hang with an internal timeout error mcacod 0400h logged into ia32_mci_status
attempts to write illegal values to msr_misc_pwr_mgmt msr 0x1aa result in gp general protection fault and should not change the msr value due to this erratum some bits in the msr may be updated on writing an illegal value
intel software guard extensions intel sgx define new accesscontrol requirements on memory accesses a violation of any of these requirements causes a page fault pf that sets bit 15 sgx in the pagefault error code due to this erratum these violations instead cause generalprotection exceptions gp
due to this erratum bits115 in ia32_rtit_cr3_match msr 572h are reserved an msr write that attempts to set that field to a nonzero value will result in a gp fault
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
on a vmresume or vmlaunch with both traceen0 and cr3filter7 in ia32_rtit_ctl msr 0570h set to 1 both before the vm entry and after the new value of cr3 is not compared with ia32_rtit_cr3_match msr 0572h
back to back access to the vga register ports io addresses 0x3c2 0x3ce 0x3cf will experience higher than expected latency
under complex microarchitectural conditions short loops of less than 64 instructions that use ah bh ch or dh registers as well as their corresponding wider register eg rax eax or ax for ah may cause unpredictable system behavior this can only happen when both logical processors on the same physical processor are active
cpuid leaf 2 eax02h tlb information inaccurately reports that the shared 2nd level tlb is 6way set associative value c3h although it is 12way set associative other information reported by cpuid leaf 2 is accurate
processor graphics may not properly restore internal configuration after warm reset when package c8 is disabled
when using 2400 mhz ddr4 udimms from different vendors within the same channel a higher rate of correctable errors may occur or the system may hang
when on a single memory channel with 2133 mhz ddr4 sodimms mixing different vendors or mixing single rank and dual rank dimms may lead to a higher rate of correctable error to system hangs
due to incorrect configuration of ddr4 odt by bios it is possible for a multirank system to violate section 427 of the ddr4 jedec spec revision jesed794a
during high display bandwidth scenarios with edram is enabled the display engine may generate display artifacts
a complex set of architectural and microarchitectural conditions may lead to a processor hang with an internal timeout error mcacod 0400h logged into ia32_mci_status when both logical processors in a core are active this erratum will not occur unless there is no store on one of the logical processors for more than 10 seconds
when intel trace hubs odla ondie logic analyzer is configured to trace to memory under complex microarchitectural conditions the trace may lose a timestamp
during poweron when the soc is used in device mode instead of host mode the usb d line may have a 2 sec glitch to 33 v
due to this erratum the rgb666 format support on the soc has restrictions on the horizontal resolution for single link mipi dsi display serial interface the horizontal resolution must be evenly divisible by 4 for dual link mipi dsi onehalf the horizontal resolution plus the overlapping pixels must be evenly divisible by 4
jedec standard jesd2093 requires a maximum power ramp duration tinit0 of 20ms due to this erratum the soc may not comply with the tinit0 specification
due to this erratum hdmi highdefinition multimedia interface and dvi digital visual interface ports may send data out at an incorrect rate that is different than the one requested when using certain pixel frequencies
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
stick parity bit lcr5 line control register hsuart0_bar0 offset 0ch bit 5 for hsuart0 and hsuart1_bar0 offset 0ch bit 5 for hsuart1 does not follow the 16550 specified behavior instead the parity bit is always logic 0
after processing a usb wake event the usb xhci controller may not reenter d3 state
soc pcie refclk does not meet pcie jitter specification when ssc is enabled
the preset_value cmd12_err_stat_host_ctrl_2 csr at bus 0 device 18 function 0 offset 3ch bit 31 does not change the sd card sdio bus transfer frequency as required by the sd host controller standard specification version 30
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
a redirection of the rsm instruction to probe mode may not generate the lbr last branch record record that would have been generated by a nonredirected rsm instruction
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by clearing the ia32_perf_global_ctrl msr 38fh due to this erratum when freeze_perfmon_on_pmi is enabled and two or more pmcs overflow within a small window of time and pmi is requested then subsequent pmc overflows may not be logged in ia32_perf_global_status msr 38eh
the processor may fail to detect a cs limit violation on fetching the first instruction after vm entry if the first byte of that instruction is outside the cs limit but the last byte of the instruction is inside the limit
due to this erratum a pebs precise event base sampling record generated after an operation which changes csbase may contain an incorrect address in the eventingip field
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
when freeze_lbrs_on_pmi flag bit 11 in ia32_debugctl msr 1d9h is set the lbr last branch record stack is frozen on a hardware pmi performance monitoring interrupt request when freeze_perfmon_on_pmi flag bit 12 in ia32_debugctl msr is set a pmi request clears each of the enable fields of the ia32_perf_global_ctrl msr 38fh to disable counters due to this erratum when freeze_lbrs_on_pmi andor freeze_perfmon_on_pmi is set in ia32_debugctl msr and the local apic is disabled or the pmi lvt is masked the lbr stack andor performance counters freeze on pmi may not function correctly
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
jedec standard jesd2093 requires a maximum power ramp duration tinit0 of 20ms due to this erratum the soc may not comply with the tinit0 specification
the xhci controller may not reset its split transaction error counter if a highspeed usb hub propagates a malformed bit from a lowspeed or fullspeed usb device exhibiting nonusb specification compliant signal quality
the socs pcie refclk signals may not meet pcie jitter specifications when operating at 50 gts with ssc spread spectrum clocking enabled
the soc sata host controller oob out of band host responses oob transmit gap and oob transmit burst length do not pass serial ata interoperability program revision 143 unified test document version 101 tests oob03ab oob05 and oob06ab
the fupfar flow update packet for far transfer generated by rtit real time instruction trace on a far transfer instruction should contain the linear address of the first byte of the next sequential instruction after the far transfer instruction due to this erratum far transfer instructions with more than 3 prefixes may incorrectly include an address between the first byte of the far transfer instruction and the last byte of the far transfer instruction
when rtit real time instruction trace suffers an internal buffer overflow packet generation stops temporarily after which a fupbuffovf flow update packet for buffer overflow is sent to indicate the lip that follows the instruction upon which tracing resumes in some cases however this packet will be immediately followed by a fuptip flow update packet for target ip which was generated by a branch instruction that executed during the overflow the ip payload of this fuptip will be the lip of the instruction upon which tracing resumes
when rtit real time instruction trace is enabled with rtit_ctlcyc_acc msr 768h bit 1 set to 1 all cyc cycle count packets have a payload value that is one less than the number of cycles that have actually passed note that for cyc packets with a payload value of 0 the correct value may be 0 or 1
when rtit real time instruction trace is enabled indicated by triggeren in bit 2 of the rtit_status msr 769h transitioning from 0 to 1 the first mtc mini time counter packet may be sent at the wrong time
device mode may not be functional when connected to usb 1x host or hub
the pcu platform control unit in soc may not be able to process concurrent accesses to the gpio registers due to this sighting read instructions may return 0xffffffff and write instructions may be dropped
at power on leakage from the v1p05a power rail to the v1p8a power rail may result in raising the v1p8a rail to about 400mv prior to that rail being powered
in sx states the pcie refclk clk_diff_n 03 signals stay at 105v level instead of shutting off completely
the preset_value cmd12_err_stat_host_ctrl_2 csr at bus 0 device 18 function 0 mmio offset 3ch bit 31 does not change the sd card sdio bus transfer frequency as required by the sd host controller standard specification version 30
the usb 30 host controller may incorrectly detect lfps low frequency periodic signal on certain soc parts
when subjected to eft electric fast transient events the xhci host controller usb when subjected to eft electric fast transient events the xhci host controller usb
lpc serr events are incorrectly propagated to trigger the nmi interrupt when the see field of the pcie_reg_command register bus 0 device 31 function 0 offset 4h is cleared this erratum only affects systems with attached lpc devices that signal serr events
when a complex microarchitectural condition occurs concurrently with the generation of a rtit realtime instruction trace psb packet stream boundary packet the packets that immediately follow the psb could precede or overwrite some older packets this erratum applies to no more than 21 packets immediately following the psb
the system may hang when ddr dynamic selfrefresh is enabled
when the system enters s0i3 sleep state the contents of usb3 phy configuration registers may change sometimes
under certain conditions where activity is high for several years the lpc rtc and sd card may stop functioning in the outer years of use
an access to xhci configuration space within 1ms of setting the xhci hcrst host controller reset bit of the usb command register xhcibar offset 80h bit 1 or a second setting of the hcrst bit within 120ms may cause the xhci host controller to fail to respond
the processor may not wake after a sleep state entered with mwait target cstate of c6 and sub cstate of 2 or a target cstate deeper than c6 is requested
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms  however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s  subsequent bts and btm operations which report the lbr will also be incorrect
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
in general a pebs record should be generated on the first count of the event after the counter
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if cr0cd1 the mtrrs and pat should be ignored and the uc memory type should be used for all memory accesses due to this erratum a logical processor in vmx operation will operate as if cr0cd0 even if that bit is set to 1
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
when a pcie root ports receiver is in receiver l0s power state and the port initiates a recovery event it will issue training sets to the link partner the link partner will respond by initiating an l0s exit sequence prior to transmitting its own training sets the link partner may transmit a tlp transaction layer packet request due to this erratum the root port may not acknowledge the tlp request
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
if the processor is directed to enter pcie pollingcompliance at 50 gts or 80 gts transfer rates it should use the link control 2 compliance presetdeemphasis field bits 1512 to determine the correct deemphasis level due to this erratum when the processor is directed to enter pollingcompliance from 25 gts transfer rate it retains 25 gts deemphasis values
due to this erratum if a link partner transitions to rxl0s state within 20 ns of entering l0 state the pcie controller may incorrectly log an error in correctable error statusreceiver error status field bus 0 device 2 function 0 1 2 and device 6 function 0 offset 1d0h bit 0
due to this erratum during pcie link down configuration unused lanes may report a correctable error detected in bus 0 device 1 function 02 and device 6 function 0 offset 158h bit 0
the pcie base specification requires the upstream component to maintain the pcie link at the target link speed or the highest speed supported by both components on the link whichever is lower pcie root port will not initiate the link speed change without being triggered by the software when the root port maximum link speed is configured to be 50 gts system bios will trigger the link speed change under normal boot scenarios however bios is not involved in some scenarios such as link disablere enable or secondary bus reset and therefore the speed change may not occur unless initiated by the downstream component this erratum does not affect the ability of the downstream component to initiate a link speed change all known 50gbscapable pcie downstream components have been observed to initiate the link speed change without relying on the root port to do so
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction  boundary  following  the  next  instruction  is  reached  after  the  debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
on a processor pcie controller configuration in which two or more controllers receive concurrent atomic transactions a pcie controller may experience starvation which eventually can lead to a completion timeout
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in  the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
the pcie controller supports hardware autonomous speed change capabilities due to this erratum the pcie controller may initiate speed change while in the dl_init state which may prevent link training for certain pcie devices
when the pfo primary fault overflow field bit 0 in the vtd fsts fault status register is set to 1 further faults should not generate an interrupt due to this erratum further interrupts may still occur
the performance monitor events other_assistsavx_to_sse event c1h umask 08h and other_assistssse_to_avx event c1h umask 10h incorrectly increment and over count when an hle hardware lock elision abort occurs
the performance monitor event dsb2mite_switchescount event abh umask 01h should count the number of dsb decode stream buffer to mite macro instruction translation engine switches due to this erratum the dsb2mite_switchescount event will count speculative switches and cause the count to be higher than expected
a timed mwait instruction specifies a tsc deadline for execution resumption if a wake event causes execution to resume before the deadline is reached a subsequent timed mwait instruction may incorrectly use the deadline of the previous timed mwait when that previous deadline is earlier than the new one
ia32_vmx_vmcs_enum msr 48ah bits 9 any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
the  performance  monitoring  events  mem_trans_retiredload_latency  event cdh  umask  01h  mem_load_retiredl2_hit  event  d1h  umask  02h  and mem_uops_retiredlocked event doh umask 20h should count the number of locked  loads  due  to  this  erratum  these  events  may  under  count  for  locked transactions that hit the l2 cache
if an intel tsx transactional abort event occurs during a string instruction the from ip in the lbr last branch record is not correctly reported
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
due to this erratum pmi performance monitoring interrupt may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenotavailable exception will be raised instead of ud exception
mobile intel pentium processors and mobile intel celeron processors celeron processors may incorrectly report support for intel turbo boost technology via cpuid06heax bit 1
the display transmit signals are not correctly sampled by the samplepreload jtag command violating the boundary scan specification ieee 11491
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
the chap chipset hardware architecture performance counters which do not have a start opcode present in the cmd register will not be preserved across a package c7 or deeper cstate
if cpuideax07h ecx0ebxbmi1 bit 3 is 1 then opcode bytes f3 0f bc should be interpreted as tzcnt otherwise they will be interpreted as rep bsf due to this erratum opcode bytes f3 0f bc may execute as tzcnt even if cpuideax07h ecx0ebxbmi1 bit 3 is 0
a vtd intel virtualization technology for directed io root table pointer update that completes followed by a second root table pointer update that also completes without performing a global invalidation of either the contextcache or the iotlb between the two updates may lead to an unexpected dma remapping fault july 2017 5th generation intel core and m processor families mobile intel pentium and celeron processor families 27
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
the system may hang when a peer io device uses the peer aperture to directly write into the gmadr graphics memory address range
due this erratum spurious corrected errors may be logged in the ia32_mc0_status register with the valid field bit 63 set the uncorrected error field bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
setting the stop bit bit 4 in a table of physical addresses entry directs the processor to stop intel pt processor trace packet generation when the associated output region is filled the processor indicates this has occurred by setting the stopped bit bit 5 of ia32_rtit_status msr 571h due to this erratum packet generation may stop earlier than expected
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
an hle hardware lock elision transactional region begins with an instruction with the xacquire prefix due to this erratum reads from within the transactional region of the memory destination of that instruction may return the value that was in memory before the transactional region began
due to this erratum package c7 entry may exceed published latencies
intel tsx transactional synchronization extensions instructions are not supported and not reported by cpuid
due this erratum spurious corrected errors may be logged in the mc0_status register with the valid bit 63 set the uncorrected error bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
due to this erratum the performance monitoring feature pdir precise distribution of instructions retired for instr_retiredall event c0h umask 01h will generate redundant pebs precise event based sample records for a counter overflow this can occur if the lower 6 bits of the performance monitoring counter are not initialized or reset to 0 in the pebs counter reset field of the ds buffer management area
workloads that attempt concurrent operation of cores and graphics in their respective turbo ranges under certain conditions may result in a system hang
under certain conditions following a cold boot exiting the first package c6 or deeper c state may hang the system
svm shared virtual memory doorbell registers are incorrectly preserved across package cstates c7 and deeper
values programmed into the fivr ssc fully integrated voltage regulator spread spectrum control mailbox may not result in the expected spread spectrum range
the  intel  pt  modeexec  mode  packet    execution  mode  leaf  pip  paging information packet and cbr corebus ratio packets are generated at the following psb packet stream boundary event rather than at the time of the originating event as expected
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
the ia32_pmcx msr c1h  c8h generalpurpose performance counters may report inaccurate counts when the associated event selection ia32_perfevtselx msrs 186h  18dh anythread field bit 21 is set and either the os field bit 17 or usr field bit 16 is set but not both set
internally generated processor voltage planes may exhibit unexpected voltage glitches during a package c9c10 exit
when intel processor trace intel pt is enabled psb packet stream boundary packets may include a pip paging information packet even though the os field bit 2 of ia32_rtit_ctl msr 570h is 0
an ept extended page table violation that causes a ve virtualization exception may not invalidate the guestphysical mappings that were used to translate the guestphysical address that caused the ept violation
it is possible for the processor to signal a machine check exception when deep packages cstates c8 c9 or c10 are entered too frequently typically less than 200us apart the processor will not be able to process the machine check and will hang
the following performance monitor events may significantly overcount when multiple tlb misses happen nearly concurrently 1itlb_misses event 85h umask 01h 02h 04h 08h 10h 2dtlb_load_misses event 08h umask 01h 02h 04h 08h 10h 3dtlb_store_misses event 49h umask 01h 02h 04h 08h 10h 4page_walker_loads event bch all umasks
some intel processor trace packets should be issued only between tippge target ip packetpacket generation enable and tippgd target ip packetpacket generation disable packets due to this erratum when a tippge packet is generated it may be preceded by a psb packet stream boundary that incorrectly includes fup flow update packet and modeexec packets
bits 63 reserved and therefore writing nonzero values to them will cause a gp
if the apic isr inservice register indicates inprogress interrupts at core c6 entry a lower priority interrupt pending in the irr interrupt request register may be executed after core c6 exit delaying completion of the higher priority interrupts service routine
display configuration is not properly restored after a package c8c10 exit
due to this erratum lpddr3 memory subsystems may not successfully complete training
aggressive ramp down of vcc voltage may result in insufficient voltage to meet power demand
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of offcore outstanding transactions each cycle due to this erratum the counts may be higher or lower than expected
if xbegin is executed immediately after an execution of mov to ss or pop ss a transactional abort occurs and the logical processor restarts execution from the fallback instruction address if execution of the instruction at that address causes a debug exception bits 30 of the dr6 register may contain an incorrect value
when a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to update the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated after a uc error is logged
the processor may not fully honor all ltr latency tolerance register values when selecting the package cstate level
a large frequency or voltage change for the llc last level cache and associated logic can lead to unpredictable system behavior
execution of a 64 bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
the processor may not run reliably when operating at turbo frequencies above 32 ghz
due to this erratum platform state s3 entry with a ddr1600 memory subsystem may cause the ddr reference clock when configured at 100 mhz to briefly switch to 133 mhz resulting in unpredictable system behavior
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
in a specific scenario when the processor graphics exits rc6 and a processor core exits c6 at the same time the system may become unresponsive or the video may become distorted
when the processor attempts to receive data on the edp aux bus the impedance seen by the displays aux bus drivers will be significantly below the vesa edp embedded displayport specifications requirement for the vauxrx edp auxiliary channel input impedance
under a complex set of microarchitectural conditions an instruction fetch dynamic power savings feature may cause the processor to execute unexpected instructions
the hdcp highbandwidth digital content protection key may be incorrect after a package c8 or deeper sleep state exit
an outstanding read from an ia core to the de display engine that is coincident with an ia core ratio change may result in a system hang
the memory controllers ddr clock when operating at ddr1600 frequencies and at elevated temperatures may not operate within tolerance and may lead to unpredictable system behavior
certain processors may not reliably exit package c9c10 states
the  pl3  mechanism  imposes  peak  frequency  constraints  on  all  domains  core graphics and ring when a current spike that might cause accelerated battery aging is detected due to this erratum these constraints may not be released when the current spike has ended
operating one or more of the ia intel architecture cores at a frequency significantly higher than the ring operating frequency may cause unpredictable system behavior intel has observed this erratum to occur when the software explicitly requests the ring and ia cores to operate at different frequencies or when ia cores are transitioning in and out of cstates with the ia cores operating at frequencies much higher than the ring frequency exposure to this erratum may be increased when the ia cores run at or close to p0 pstate frequency
certain complex internal conditions and timing relationships during clock gating of the io subsystem may cause a system hang and may lead to a timeout machine check with an ia32_mci_statusmcacod of 0400h
intel txt trusted execution technology uses tpm trusted platform module 20 draft specification handles indices aux 01800003 ps 01800001 and po 01400003 those handles conflict with the released tcg trusted computing group registry of reserved tpm 20 handles and localities version 10 revision 1
under certain conditions entry into a package c7 or deeper cstate may result in a system hang on the subsequent cstate exit
due to this erratum the page_walker_loads event bch performance monitoring event may overcount or may undercount
when exiting from package c7c10 the system may hang
due to this erratum the local memory readload retired perfmon events listed below may undercount
under certain internal timing conditions while executing a complex sequence of locked instructions the system may hang
if vm exit occurs from a guest with primary processorbased vmexecution control activate  secondary  controls  set  to  0  and  the  secondary  processorbased  vm execution control enable vpid set to 1 then after a later vm entry with vpid fully enabled activate secondary controls and enable vpid set to 1 the processor may use stale linear address translations
an iret instruction that results in a task switch by returning from a nested task does not serialize the processor contrary to the software developers manual vol 3 section titled serializing instructions
if lbr last branch records bts branch trace store or btm branch trace messages are enabled in the ia32_debugctl msr 1d9h an attempt to enable intel pt intel processor trace in ia32_rtit _ctl msr 570h results in a gp general protection exception note that the btm enable bit in ia32_debugctl msr is named tr correspondingly if intel pt was previously enabled when an attempt is made to enable lbr bts or btm a gp will occur
when package c6 or deeper cstates are enabled certain microarchitectural conditions during a cstate exit may cause the processor to hang
a wrmsr to ia32_rtit_ctl msr 0570h that sets traceen bit 0 and clears branchen bit 13 will cause a gp general protection exception
intel virtualization technology for directed io specification specifies setting the fpd fault processing disable field in the context or extendedcontext entry of iommu to mask recording of qualified dma remapping faults for dma requests processed through that context entry due to this erratum the iommu unit for processor graphics device may record dma remapping faults from processor graphics device bus 0 device 2 function 0 even when the fpd field is set to 1
the iommu unit for processor graphics prefetches context or extendedcontext entries to improve performance due to the erratum the iommu unit may report spurious dma remapping faults if prefetching encounters a context or extendedcontext entry which is not marked present
the processor should ensure internal graphics configuration is restored during a package c7 or deeper exit event due to this erratum some internal graphics configurations may not be correctly restored
on processors where the use of intel pt intel processor trace and lbrs last branch records are mutually exclusive reads of the lbr msrs should return 0s and writes to them should be ignored due to this erratum reads and writes to the lbr msrs while ia32_rtit_ctl msr 570h traceen bit 0 is 1 will result in a gp
the processor should ensure internal graphics configuration is restored during a package c7 or deeper exit event due to this erratum some internal graphics configurations may not be correctly restored
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
multiple code fetches in quick succession that generate page walks may result in a system hang causing an internal timer error an mcacod value of 0400h logged into ia32_mci_status bits 150
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
the performance monitoring events offcore_response events b7h and bbh should count uncore responses matching the requestresponse configuration specified in msr_offcore_rsp_0 1a6h and msr_offcore_rsp_1 1a7h for coreoriginated requests however due to this erratum response type no_supp bit 17 may be reported instead of local bit 26 for request types dmnd_rfo bit 1 and pf_rfo bit 5
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
due to this erratum an uncorrectable internal parity error with an ia32_mc0_statusmcacod bits 15
performance monitoring counters configured to count only os or only usr events by setting exactly one of bits 16 or 17 in ia32_perfevtselx msrs 186h18dh may not count for a brief period during the transition to a new cpl
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
after a fault due to a failed pebs processor event based sampling or bts branch trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
the memory atretirement performance monitoring events listed below may produce incorrect results when a performance counter is configured in osonly or usronly modes bits 17 or 16 in ia32_perfevtselx msr counters with both os and usr bits set are not affected by this erratum the list of affected memory atretirement events for bdw is as follows mem_uops_retiredstlb_miss_loads event d0h umask 11h mem_uops_retiredstlb_miss_stores event d0h umask 12h mem_uops_retiredlock_loads event d0h umask 21h  mem_uops_retiredsplit_loads event d0h umask 41h mem_uops_retiredsplit_stores event d0h umask 42h mem_load_uops_retiredl2_hit event d1h umask 02h mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl1_miss event d1h umask 08h mem_load_uops_retiredl2_miss event d1h umask 10h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_retiredhit_lfb event d1h umask 40h mem_load_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h
due to this erratum the supplier may be misattributed to unknown and the following events may undercount mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h
the execution of an x87 store instruction which causes a pe precision exception to be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod    0150h  and  ia32_mci_statusmscod    000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
the ia32_pmc47 msr c5hc8h generalpurpose performance monitoring counters will not count when the associated cpl filter selection in ia32_perfevtselx msrs 18ah18dh usr field bit 16 is set while os field bit 17 is not set
due to this erratum on processors that do not support intel tsx intel transactional synchronization extensions cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception for example nmi nonmaskable interrupt debug breakdb machine check mc and so forth if the rsm attempts to return to a noncanonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
when a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled dr7g0g3 and dr7l0l3 the dr6b0b3 flags may be incorrect
normally each instruction clears the changes in dr6 debug status register caused by the previous instruction however the instruction following a mov ssrm mov to the stack segment selector or pop ss pop stack segment selector instruction will not clear the changes in dr6 because data breakpoints are not taken immediately after a mov ssrm or pop ss instruction due to this erratum any dr6 changes caused by a mov ssrm or pop ss instruction may be cleared if the following instruction is a store
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values that is residual stack data as a result of processing the fault
under a specific set of conditions mmx stores movd movq movntq maskmovq which cause memory access faults gp ss pf or ac may incorrectly update the x87 fpu tag word register this erratum will occur when the following additional conditions are also met the mmx store instruction must be the first mmx instruction to operate on x87 fpu state that is the x87 fp tag word is not already set to 0x0000 for movd movq movntq stores the instruction must use an addressing mode that uses an index register this condition does not apply to maskmovq
in general a pebs record should be generated on the first count of the event after the counter has overflowed  however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault for example page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
the io_smi bit in smrams location 7fa4h is set to 1 by the cpu to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by  a nonio instruction  smi is pending while a lower priority event interrupts  a rep io read  a io read that redirects to mwait
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 15
when in v86 mode if a mov instruction is executed tofrom a debug registers a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
when a performance monitoring counter is configured for pebs precise event based sampling overflows of the counter can result in storage of a pebs record in the pebs buffer due to this erratum if the overflow occurs during probe mode it may be ignored and a new pebs record may not be added to the pebs buffer
bits 53 uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
when a performance monitoring counter is configured for pebs precise event based sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
if vm entry is executed with the nmiwindow exiting vmexecution control set to 1 a vm exit with exit reason nmi window should occur before execution of any instruction if there is no virtualnmi blocking no blocking of events by mov ss and no blocking of events by sti if vm entry is made with no virtualnmi blocking but with blocking of events by either mov ss or sti such a vm exit should occur after execution of one instruction in vmx nonroot operation due to this erratum the vm exit may be delayed by one additional instruction
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
processor does not signal ud fault when executing the reserved instruction vphminposuw with vexvvvv1111 the vphminposuw instruction is described in greater detail in the intel advanced vector extensions programming reference
the intel 64 and ia32 architectures software developers manual volume 2b states that execution of vmread or vmwrite should fail if the value of the instructions register source operand corresponds to an unsupported field in the vmcs virtual machine control structure the correct operation is that the logical processor will set the zf zero flag write 0ch into the vminstruction error field and for vmread leave the instructions destination operand unmodified due to this erratum the instruction may instead clear the zf leave the vminstruction error field unmodified and for vmread modify the contents of its destination operand
execution of the vzeroall or vzeroupper instructions in 64bit mode with vexw set to 1 may erroneously cause a ud invalidopcode exception
attempt to use opcode 9bh with a vex opcode extension should produce a ud invalidopcode exception due to this erratum if cr0mp and cr0ts are both 1 the processor may produce a nm devicenotavailable exception if one of the following conditions exists 66h f2h f3h or rex as a preceding prefix an illegal map specified in the vexmmmmm field
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so that there is a valid translation for the page for example by setting to 1 the present bit in one of the pagingstructure entries used to translate the page software on another logical processor observes this modification for example by accessing a linear address on the page or by reading the modified pagingstructure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs a store to a linear address on the page in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page intel has not observed this erratum with any commercially available software
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenotavailable exception will be raised instead of ud exception
execution of the vpextrd or vpinsrd instructions outside of 64bit mode with vexw set to 1 may erroneously cause a ud invalidopcode exception
the from address associated with the lbr last branch record btm branch trace message or bts branch trace store may be incorrect for the first branch after a transition of  enhanced intel speedstep technology  tstate thermal monitor states  s1state acpi package sleep state  c1e enhanced c1 low power state  adaptive thermal throttling
under specific internal conditions if software tries to write the ia32_fixed_ctr1 msr 30ah a value that has all bits 311 set while the counter was just about to overflow when the write is attempted that is its value was 0xffff ffff ffff then due to this erratum the new value in the msr may be corrupted
when an l1 data cache error is logged in ia32_mci_status15 error code field with a cache error type of the format 0000 0001 rrrr ttll the ll field may be incorrectly encoded as 01b instead of 00b
due to this erratum the pcie poison forwarding enable and intel quickpath interconnect intel qpi poison enable bits are cleared by warm reset but other bits related to the poisoning feature remain set after the warm reset the system may be in an invalid state in regards to the poisoning bits this invalid state may cause the feature to be disabled
successful vm entries using the vmlaunch instruction should set the launch state of the vmcs to launched due to this erratum such a vm entry may not update the launch state of the current vmcs if the vm entry is returning from smm
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
the instruction fetch machine check error mcacod 0x150 is a srar software recoverable action required error the address of the location with the error is provided in the corresponding ia32_mci_addr msr when multiple instruction fetch errors are logged as part of a single machine check event as indicated by setting of the overflow bit 62 in the ia32_mci_status msr then recovery is not possible due to this erratum when multiple instruction fetch errors are logged in the same bank the ia32_mci_misc msr contains all of the correct information including the proper setting for overflow bit 62 however the ia32_mci_addr msr is overwritten with a value that corresponds to neither the first or second error
according to the intel qpi specification if a target agent receives a packet with a non zero  rsvd_chk  field  it  should  flag  it  as  an  intel  qpi  link  layer  detected unsupportedundefined packet due to this erratum the processor does not check the rsvd_chk field nor report the expected error
the intel qpi link control register cpubus1 devices 8 9 function 0 offset 0x44 bits 17 and 16 allow for the control of the link layer initialization by forcing the link to stall  the  initialization  process  until  cleared  the  intel  qpi  link  status  register cpubus1 device 8 9 function 0 offset 0x48 bits 2724 report the link initialization status linkinitstatus the linkinitstatus incorrectly reports internal stall link initialization 0001b for nonintel qpi link control register bit1716 stall conditions the intel qpi specification does not intend for internal stall conditions to report that status but rather report the normal waiting for physical layer ready 0000b
the intel qpi interface specification requires tx ac common mode accm to be between 50 mv to 50 mv at 80 gts testing across process voltage and temperature showed that the accm exceeded the upper end of the specification on several lanes
frb fault resilient booting is defined as the ability to boot even when one or more processors in the system fail as long as there is one processor functional if a warm reset is asserted during the boot flow before the intel qpi interface is enumerated and while a processor is hot and drives prochot_n the processor that is driving prochot_n will mistakenly observe prochot_n as a signal to transition itself into frb mode
the pcie bus uses high speed serial links that must go through a training process to allow both transmitter and receiver to make adjustments in behavior to optimize the signaling between the transmitter and receiver when a pcie compliant device must train or retrain the link training sequences are used the device must allow enough time for the training to complete before transitioning to normal operation in the case of pcie equalization at 80 gts the processor is not allowing enough time to optimize signaling before attempting normal operation
the qpils register cpubus1 devices 89 function 0 offset 0x48 according to the intel quick path interconnect specification at revisions 11 and later should report the vnavn0 credits available for the processor tx transmit port due to this erratum the qpils register reports the vnavn0 credits available for the processor rx receive port
during the intel qpi link layer initialization parameters are exchanged by hardware the parameters that are received are stored by the receiver the information is used to setup link operation one of those parameters that is exchanged is the router value the router value should be one but it is zero in the processor
when a load occurs to a first level data cache line resulting in a parity error in close proximity to other software accesses to the same cache line and other locked accesses the processor may exhibit unexpected behavior
the intel qpi specification defines two methods of computing crc rolling crc the processor implements only 8bit crc the crc mode supported bit in the qpilcp registers devices 8 9 function 0 offset 40h bit 11 is set incorrectly indicating that both 8bit crc and 16bit rolling crc are supported
peci 30 introduces a host identification field as a way for the peci host device to identify itself to the peci client this is intended for use in future peci systems that may support more than one peci originator since peci 30 systems do not support the use of multiple originators peci 30 host devices should zero out the unused host id field peci 30 also introduces a retry bit as a way for the peci host to indicate to the client that the current request is a retry of a previous read or write operation unless the peci 30 host device zeroes out the byte containing the host id  retry bit information peci write requests that require a retry will never complete successfully
the pcie specification defines a limit for the vswing voltage swing of the differential lines that make up a lane to be 1200 mv peaktopeak when operating at 25 gts and 5 gts intel has found that the processors pcie transmitter may exceed this specification peaktopeak swings on a limited number of samples have been observed up to 1450 mv
the intel qpi interface physical layer performs calibration across all 20 of the lanes and reports the success or failure of the calibration process due to this erratum the processor may detect spurious errors during the calibration of the intel qpi interface the bus and interconnect errors are reported with the ia32_mci_statusmcacod bits 150 with a value of 0000_1xx0_0000_1111 where x is zero or one
pci express interface incorporates a recovery mechanism when certain link degradation occurs by retraining the link without impacting the pending transactions when a link is degraded on a specific port due to pcie signaling issues it is possible that correctable receiver errors are reported on the neighboring logically adjacent port the correctable receiver errors are indicated by the pcie aer correctable error bit xpglberrsts cpubus0 device 03 function 03 offset 230h bit 2
a cmci corrected machine check error interrupt should be generated when the number of corrected errors for a bank reaches the corrected error threshold programmed into the ia32 _mci_ctl2 bits 14
when the pcie rx termination is not powered the dc common mode impedance has the following requirement 10 k over 0200 mv range with respect to ground and 20 k for voltages 200 mv with respect to ground the processors pcie rx do not meet this requirement at 85 degrees c or greater in a limited number of samples intel has measured an impedance as low as 985 k at 50 mv
the advanced error interrupt message number field rperrsts devices 03 functions 03 offset 178h bits31 field msimsgctl device 3 function 0 offset 62h bits64 however writing the multiple message enable in the root port does not update the advanced error interrupt message number field
the processor sends the pcie set_slot_power_limit message on writes to the slot capabilities sltcap devices 03 functions 03 offset a4h register due to this erratum the processor also sends pcie the set_slot_power_limit message on writes to the lnkcon cpubus0 devices 03 functions 03 offset a0h register
enabling intel qpi l0s state in a dual processor system with both processor sockets populated may not allow the intel qpi link between the processors to enter the l1 state
a locked memory access which splits across a cacheline boundary that suffers a master abort on a pci bus may lead to a system hang
the processor is demonstrating link training sensitivities related to clock detection and will indicate the error with an ia32_mci_statusmscod bits2116 of 10011 and with an ia32_mci_statusmcacod bits150 of 0000_1000_0000_1111
the pcie specification requires that the rx common mode return loss in the range of 005 to 25 ghz must be limited to 6 db the processors pcie rx do not meet this requirement the pcie rx common mode return at 500 mhz has been found to be between 35 and 4 db on a limited number of samples
the most significant bit of the cec corrected error count ia32_mci_status i12 19 bit 52 cannot be cleared once it has been set
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so that there is a valid translation for the page for example by setting to 1 the present bit in one of the pagingstructure entries used to translate the page software on another logical processor observes this modification for example by accessing a linear address on the page or by reading the modified pagingstructure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs a store to a linear address on the page in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page intel has not observed this erratum with any commercially available software
in the case of the pcie equalization procedure for 8 gts the downstream ports for example the processors txeq transmitter equalization settings can be fine tuned for each lane during a process called adaptive equalization phase 3 due to this erratum the processor may not direct the endagent to the optimal txeq settings
when multiple cores have outstanding transactions targeted to a single caching agent and one of the cores enters a core cstate before completing the transaction with the targeted caching agent an internal timer machine check error may occur ia32_mci_statusmcacod of 0000_0100_0000_0000
the tsc time stamp counter msr 10h should be cleared on reset due to this erratum the tsc is not affected by warm reset
when a warm reset is attempted and an ierr internal error happens as indicated by the ia32_mci_statusmcacod of 0000_0100_0000_0000 a poweron reset occurs instead
if both dca direct cache access and dma xor operations are active at the same time then invalid prefetch hints may be generated these prefetch transactions may not complete and could result in a timeout machine check which will cause caterr to become asserted
for mixed channel dma xor and legacy operations active on the same channel completion writes from legacy operations may pass completion writes from xor operations resulting in out of order descriptor updatescompletions
if a galois field generatevalidate base descriptor has either the p operations disable or q operation disable bit set and the corresponding disabled p parity address or q parity address field of the descriptor does not contain a validaligned address the dma channel may halt unexpectedly with destination address errors the destination address errors will be logged in chanerr_int dma transfer destination address error device 4 function 07 offset 180h bit 1
if a parity error occurs of source read completion data while inside the dma for 8k descriptor  transfer  lengths  the  dma  channel  will  hang  until  the  next  platform resetthis behavior only applies if the data arrived at the dma unit error free from dram and intel qpi but then had a parity error in the completion data fifo inside the dma
pcie flr function level reset of the dma function may result in an incorrect cb_bar device 4 function 07 offset 10h decode when a memory read of the cb_bar occurs around the same time as the flr
incorrect data transfers can occur if more than one dma channel is in operation and 8 kb xor dma transfer sizes are being used xor dma transfer size is set by software in the block size field of the xor with galios field generatevalidate base descriptor
if the chanerr field read data error offset a8h bit 8 is set due to a poisoned completion error during a dma xor operation the dma stays in the halted state and the read data error bit does not clear
when using multiple dma channels all dma channels may hang if a dma channel restart is attempted with a legacy descriptor as the first descriptor following an error halt on an extended descriptor on channel 0 or 1
if dma xor interrupts and completions are enabled on channel 0 or 1 concurrent with operation on channels 27 incorrect data transfers can occur on dma channels 27 dma xor interrupts and completions are enabled by setting bits 0 and 3 of descriptor control field of a dma xor with galios field generatevalidate base descriptor
suspending an active dma xor channel by setting chancmdsuspend dma bit offset 84 bit 2 while xor type dma channels are active may cause incorrect data transfer on the other active legacy channels this erratum may also occur while resetting an active dma xor channel chancmdreset dma bit offset 84 bit 5 chancmd is in the region described by cb_bardevice 4 function 07 offset 10h on the processors internal io bus as defined in the iiobusno register
dma xor descriptors with dword aligned sources and fencing enabled may result in a xor channel hang until the next platform reset xor dma fencing is set by software in descriptor controlfence xor base descriptor bit 4
the intel qpi should detect an unsupported or undefined packet drop the offending packet and log a correctable error with an ia32_mci_statusmcacod of 0000_1100_0000_1111 when the intel qpi detects an unsupported or undefined packet it does not drop the offending packet but it does log the error
pcie specification states that if the phase 1 of transmitter equalization completes successfully as indicated by the lnksts2equalization phase 1 successful devices 0 3 functions 03 bit2 bit being set to one and if the phase 2 and 3 link training phases are bypassed the lnksts2equalization phase 3 successful devices 03 functions 03 bit4 and lnksts2equalization phase 2 successful bit3 bits should be set to one due to this erratum the processor will only set the equalization phase 2 or 3 successful bits if the phases are completed successfully
if the processor throttles due to either high temperature thermal conditions or due to an explicit operating system throttling request tt1 while executing getsecsenter or getsecsexit instructions then under certain circumstances the processor may hang intel has not been observed this erratum with any commercially available software
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
when freeze_lbrs_on_pmi is enabled bit 11 of ia32_debugctl msr 1d9h is set and a taken branch retires at the same time that a pmi performance monitor interrupt occurs then under certain internal conditions the record at the top of the lbr stack may contain an incorrect from address
if the debugcontrol register dr7 is configured so that some but not all of the breakpoints in the debugaddress registers dr0dr3 are enabled and one or more of the following performancemonitoring counters are locally enabled via ia32_cr_permon_evntsel_cntr30 br_inst_retired br_misp_retired fp_assist fp_assist inst_retired machine_clears mem_load_uops_llc_hit_retired mem_load_uops_misc_retiredllc_miss mem_load_uops_retiredmem_trans_retiredmem_uops_retired other_assists rob_misc_eventslbr_inserts uops_retired any of the globally enabled via ia32_cr_emon_perf_global_ctrl counters may overcount certain events when a disabled breakpoint condition is met
the hdrlog registers contain the header information of the first pcie packet detected that contains errors because of this erratum the port 1 iou2 hdrlog registers cpubus0 device 1 function 0 offsets 164h 168h 16ch 170h do not reflect the header of a packet with a detected error
the processor peci powerup time line presented in the intel xeon processor e5 1600e52600e54600 product families datasheet  volume one or intel xeon e52400 product family datasheet volume two defines the value returned by the peci gettemp command as 0x0000  the maximum value  during the data not ready dnr phase starting approximately 100 s after pwrgood assertion and lasting until approximately 500 s after reset deassertion due to this erratum the gettemp command returns a small negative number during the dnr phase
the processor may not complete smbus system management bus transactions targeting the tsod temperature sensor on dimm when package cstates are enabled due to this erratum if the processor transitions into a package cstate while an smbus transaction with the tsod is in process the processor will suspend receipt of the transaction the transaction completes while the processor is in a package cstate upon exiting package cstate the processor will attempt to resume the smbus transaction detect a protocol violation and log an error
the lower limit for the dram rapl running average power limit dynamic range is specified to be about 120 of dram minimum power due to this erratum the lower limit is enforced at about 170 of dram minimum power dram minimum power can be found in the minimal dram power field dram_power_info csr at cpubus1 device 10 function 2 offset 90h bits3016
the machine check error code mcacod in the ia32_mc3_status msr 040dh register is intended to report the type of error that has been discovered the 0119h mcacod is correctly logged for mlc midlevel cache generic read errors and due to this erratum also logged for errors detected as a result of monitor instructions
the processor pcie interface incorrectly transitions from the pollingactive link state to the pollingcompliance link state after receiving two ts1 ordered sets with the compliance bit set instead of the eight ts1 ordered sets required by the specification
patrol scrubbing is disabled at entry into package c3 and package c6 states due to this erratum the memory subsystem may not get fully scrubbed in the expected 24hour timeframe
the processor may not place the associated dram subsystem in the lowest allowed power state during package c3 and package c6 states this may cause the platform idle power to be higher than expected
due to this erratum a peci transaction during an sstate transition may result in an unexpected platform cold reset rather than an sstate transition
due to this erratum the bios sequencing associated with s4 sometimes known as hibernate and s5 also known as soft off when undertaken with certain complex platform conditions can result in an internal timeout error as indicated by ia32_mci_statusmcacod  of  0000_0100_0000_0000  and  ierr  assertion  this internal timeout error stops the platform sstate sequencing before platform power down occurs certain platforms may have logic that upon detection of the failure to reach power down initiates a cold reset sequence
a posted write targeting the sdoorbell offset 64h or b2bdoorbell offset 140h mmio registers in the region define by base address register pb01base bus 0 device 3 function 0 offset 10h or sb01base bus m device 0 function 0 offset 10h may hang the system this system hang may occur if the ntb nontransparent bridge is processing a transaction from the secondary side of the ntb that is targeting the ntb shared mmio registers or targeting the secondary side configuration registers when the write arrives
pdir precise distribution for instructions retired mechanism is activated by programming inst_retiredall event c0h umask value 00h on counter 1 when pdir is activated in pebs precise event based sampling mode with an additional precise perfmon event an incorrect pmi or pebs event may occur
when a peci rdiamsr command is issued to the processor near the time that the processor is experiencing an internal timeout error as indicated by ia32_mci_statusmcacod of 0000_0100_0000_0000 and ierr assertion the peci interface may issue an 81h timeout response after a timeout response the processor will ignore future peci commands until it is reset
certain long latency transactions  for example master aborts on inbound traffic locked transactions peertopeer transactions or vendor defined messages  conveyed over the pcie and dmi2 interfaces can block the progress of subsequent transactions for extended periods  in certain cases these delays may lead to io device timeout that can result in device error reports andor device offlining
the coherent interface error status registers irpp0errst and irpp1errst at cpubus0 device 5 function 2 offsets 230h and 2b0h respectively indicate that an error has been detected by the coherent interface bit 3 indicates that a write cache uncorrectable ecc c2 error has occurred bit 4 indicates that a csr access crossing 32bit boundary c3 error has occurred bit 13 indicates that a protocol queuetable overflow or underflow da error has occurred bit 14 indicates that a protocol parity error db error has occurred due to this erratum the processor may incorrectly log the c2 c3 da and db error flags
if multiple poison events are detected within two core clocks the error is logged with an ia32_mci_statusmcacod of 0000_0001_0011_0100 but the ia32_mci_statusover bit 60 may not be set
according to the pcie base specification the pci express capability structure is required for all pci express device functions due to this erratum some pci express capabilities fields were not implemented device capability device status and device control for cpubus0 device 5 function 2 reads to these fields will return zero
the mmioh is a memorymapped io region relocatable above 4 gb due to this erratum software reads of the lmmioh_limit register local mmio high base device
the imc integrated memory controller permits independent sparing of one rank on each memory channel due to this erratum patrol scrub operation is impaired when more than one ranking sparing event occurs
due to this erratum a platform warm reset issued while a processor is attempting an authenticated boot on a multisocket intel trusted execution technology intel txt platform may initiate a series of repeating warm resets
the ntb nontransparent bridge may incorrectly set msi message signaled interrupt pending bits in msipending bar pb01basesb01base offset 74h while operating in msix mode or set msix pending bits in pmsixpba bar pb01base sb01base offset 03000h while operating in msi mode
xor dma channels may stop further progress in the presence of lockspholds if the source pointed to by a dma xor descriptor is not cacheline aligned
if two systems are connected via an ntb nontransparent bridge either the internal ntb or an external ntb and both systems attempt to send io peertopeer write traffic across the ntb either to memory or an io device on the remote system it is possible for both systems to deadlock
the ntb nontransparent bridge does not set pme_to_ack in miscctrlsts device 3 function 0 offset 188h bit 48 after a pme_turn_off request
in 64bit mode using rexw1 with pcmpestri and pcmpestrm or vexw1 with vpcmpestri and vpcmpestrm should support a 64bit length operation with rax rdx due to this erratum the length registers are incorrectly interpreted as 32bit values
due to this erratum the processor interprets any peci read or write command that accesses the processor a downstream pci device or package configuration space and differs from the preceding request only in the length field as a retry request that is a retry will be inferred by the processor even if the read length and write length fields dont match between two consecutive requests regardless of the state of the host retry bit on the succeeding request
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if a machine check is encountered while fetching an instruction and if the resulting machine check exception causes a vm exit the vm exit should save an rflags value in the gueststate area of the vmcs with the rf value that existed at the time of the machine check due to this erratum such vm exits that occur in realaddress mode may save rflagsrf as 1 even if it had been 0
the jedec standard ddr3 sdram specification no 793e requires that the cke signal  be  held  high  for  txsdll  dclks  after  exiting  selfrefresh  before  issuing commands that require a locked dll delaylocked loop due to this erratum the integrated memory controller may not meet this requirement with 512 mb 1 gb and 2gb devices in single rank per channel configurations
the pcitopci bridge architecture specification defines the default value of the io base address field iobas cpubus0 device 03 function 03 offset 1ch bits 32 to 0 due to this erratum the processors default value is 3
due to this erratum a sustained series of pcie posted upstream writes to the same cache line with no other access of that same cache line may cause a deadlock
the processor brand string is provided by the cpuid instruction for leaf values eax80000002h 80000003h and 80000004h each execution of the three cpuid leaf value returns 16 ascii bytes of the processor brand string in the eax ebx ecx and edx registers due to this erratum an extra zero character 0 30h ascii code and space character   20h ascii code are inserted after the processor number in the brand string output in the following example brand string the extraneous characters are underlined
drams require a 2x refresh rate when operating above 85c due to this erratum the imc integrated memory controller logic intended to double the refresh rate when dram  temperature  exceeds  85c  can  cause  dram  access  failures  leading  to unpredictable system behavior
when a correctable machine check event with a valid address precedes an uncorrectable machine check event without a valid address the ia32_mci_status over flag bit 62 should be set and addrv flag bit 58 should be cleared due to this erratum both flags may be set
a corrected cache hierarchy data or tag error is reported in ia32_mci_statusmcacod bits 15
due to this erratum if the reset_n signal is asserted while the processor is in a package c state the ia32_mci_status registers may contain undefined data after the processor completes the reset in particular the ia32_mci_statusval bit63 may be set incorrectly indicating a valid machine check has been logged
certain high capacity dimms typically quad rank rdimms and lrdimms may exceed instantaneous and shortterm power limits if refresh cycles are not correctly staggered due to this erratum the integrated memory controller is unable to stagger refresh cycles
due to this erratum a stream of snoop requests to a single cache slice may cause the processor in that slice to livelock resulting in a system hang or internal timer error machine check indicated by ia32_mci_statusmcacod bits 150 0000 0100 0000 0000
due to this erratum ia32_mci_statusen may not be set as expected after the mlc midlevel cache has logged a fatal error with a mcacod value of 000x_0001_xxxx_xx10 where x stands for zero or one and signaled an mce machine check error as a result of encountering poisoned data
llc cache correctable errors are logged in the corrected_error_count field bits 53 of the ia32_mc1912_status msr due to this erratum llc cache corrections are not counted and logged
when a pcie link is operating at 25 gts and the processors ltssm link training and status state machine is in recoveryrcvrlock state the processor expects to receive ts1 ordered sets within 24 ms if it does not receive the ts1s in the allotted time the ltssm should transition to the detect state due to this erratum if the processor does not receive ts1s within 24 ms it will transition to configurationlinkwidthstart in that state if it receives no ts1s it will transition to detect if it receives ts1s it will configure the link appropriately and return to l0
writes to the ntb nontransparent bridge b2bspad15 sb01base offsets 100h  13fh may result in corrupted data transfer between systems
the ntb nontransparent bridge operating in ntbrp ntb to root port mode using message signaled interrupts msi or msix in the presence of locks may result in a system hang
the xsaveopt instruction may optimize performance by not saving state that has not been modified since the last execution of xrstor this optimization should occur only if the executions of xsaveopt and xrstor are either both or neither in smm system management mode due to this erratum this optimization may be performed by the first execution of xsaveopt after a transition into or out of the stm smmtransfer monitor if the most recent execution of xrstor occurred before that transition for transitions into the stm the erratum applies only to transitions using the vmcall instruction this erratum can occur only if the two executions are at the same privilege level use the same linear address and are either both or neither in vmx nonroot operation the erratum does not apply if software in smm never uses xrstor or xsaveopt
the integrated memory controller sequencing during a rank sparing copy operation blocks all writes to the memory region associated with the rank being taken out of service due to this erratum this block can result in a system stall that persists until the sparing copy operation completes
due to this erratum enabling opportunistic selfrefresh can lead to the memory controller overaggressively transitioning dram to selfrefresh mode when the processor is in pkg c2 state
in mirrored memory mode each channel manages its memory write bandwidth resources due to this erratum if a channel in mirrored memory mode is heavily utilized it is possible for issued writes to exceed available bandwidth resulting in write failures
pcie agents are required by the pcie base specification to identify and report packet errors due to this erratum certain invalid completion types from the end agent are not correctly handled by the processor
the pcie base specification requires that a downstream device can initiate link retraining due to this erratum link retraining cannot be initiated by the downstream device in a ntbntb nontransparent bridge or a ntbrp root port configuration
when the processor is in ntb nontransparent bridge mode it should ignore upstream slot power limit messages from the root port it is connected to due to this erratum the processor generates ur unsupported request on these slot power limit messages when in ntb mode
the imc integrated memory controller can be programmed to generate an smi system management interrupt on an internal memhot event assertion through the mhot_smi_en field mh_maincntl bus
a value of 1 in the link_bandwidth_notification_capability field lkncap bit 21 for a pcie device indicates support for the link bandwidth notification status and interrupt mechanisms due to this erratum this field for ports 2c 2d 3c and 3d lkncap bus 0 device 23 function 23 offset 09ch bit 21 always reads as 0 when it should read as 1
due to this erratum under a complex set of conditions intel qpi uncorrectable errors may cause a deadlock between the processor and pch platform controller hub the deadlock will cause a processor internal timeout error as indicated by ia32_mci_statusmcacod of 0000_0100_0000_0000 caterr assertion and a shutdown transaction being sent to the pch depending on the platform implementation this will result in reset being asserted to the pch this deadlock persists causing the pch to timeout on the reset request reacting to the reset request timeout the pch powers down the system
pcie configuration retries are allowed for older generation pcipcix bridges that take a long time to respond to configuration cycles after a reset due to this erratum a fifth configuration  cycle  following  the  fourth  pcie  configuration  retry  may  not  make progress resulting in a deadlock
configuration reads to nonexistent pci configuration registers should return 0ffff_ffffh due to this erratum when the peci rdpciconfiglocal command references a nonexistent pci configuration register the value 0000_0000h may be returned instead of the expected 0ffff_ffffh
when in dmi mode the device_port_type field pxpcap bus 0 device 0 function 0 offset 92h bits 74 should read as 9h dmi mode but incorrectly reads as 4h pcie mode
tph transactions processing hints are optional aids to optimize internal processing of pcie transactions due to this erratum certain transactions with tph attributes may be misdirected resulting in unpredictable system behavior
the processor is capable of continuous intel qpi retraining due to this erratum the field reporting support for this feature continuous retraining qpireut_ph_cpr bus 1 device 89 function 3 offset 128h bit 18 indicates this feature is not supported although it is enabled and cannot be disabled
under certain conditions the processor may not detect or correct a correctable memory error
the lock quiescent flow is a means for an agent to gain sole ownership of another agents resources by preventing other devices from sending transactions due to this erratum during the lock quiescent flow the intel quickdata technology dma read and write queues are throttled simultaneously this prevents subsequent read completions from draining into the write queue hanging the dma lock state machine
the pcie base specification requires power management messages to use the default traffic class designator tc0 and receivers to check for violations of this rule due to this erratum a tlp using a nondefault traffic class designator will be dropped rather than handled as a malformed tlp
the intel speedstep technology can dynamically adjust the core operating frequency to as low as 1200 mhz due to this erratum under complex conditions and when the cores are operating at or below the dram ddr frequency unpredictable system behavior may result
the integrated memory controller incorporates a power savings mode known as ibt_off input buffer termination disabled due to this erratum quad rank dimms may not be properly refreshed during ibt_off mode
nonpage aligned intel quickdata technology dma next sourcedestination addresses may cause memory readwrite collisions
the processor autonomously manages intel qpi quickpath interconnect link power state transitions based on link idle intervals due to this erratum crc errors may be detected  during  intel  qpi  link  power  state  transitions  and  may  be  logged  in qpireut_err_ced bus 1 device 89 function 3 offset 120h
peci reports temperatures as an offset from the prochot threshold a negative value when the temperature is below the prochot threshold zero when at or above that threshold  if  the  temperature  is  below  0c  peci  responds  with  an  invalid temperature encoding 8002h due to this erratum peci may indicate an invalid temperature when the actual temperature is as high as 7c
the dram power meter uses vr voltage regulator current readings in combination with weighted activity counters to provide a running estimate of dram subsystem power due to this erratum the dram power meter may not be sufficiently accurate for system power management purposes
debug exceptions due to instruction breakpoints take priority over exceptions resulting from fetching an instruction due to this erratum a machine check exception resulting from the fetch of an instruction may take priority over an instruction breakpoint if the instruction crosses a 32byte boundary and the second part of the instruction is in a 32byte poisoned instruction fetch block
enhanced intel speedstep technology dynamically changes core operating frequencies due to this erratum under complex conditions core frequency changes may result in a system hang
the prochot signal is used to indicate elevated processor temperatures during normal operation and is used for frb fault resilient boot actions during the reset sequence due to this erratum the elevated temperature indication usage of prochot can persist into reset and subsequently can cause improper frb actions
the intel qpi link must transition to its l1 power state for the processor to enter package c3state or package c6state due to this erratum the intel qpi link does not transition to l1 as intended restricting the processor from reaching package c3state or package c6state
the dram pbm power budget meter manages dram power consumption due to this erratum under complex platform conditions the dram pbm may throttle the memory subsystem to such a great extent that a system hang results
when intel quick data technology dma rol raid on load transactions and non rol transactions are simultaneously active and the nonrol address offsets are not cacheline boundary aligned the nonrol transactions last partial cacheline data write may be lost leading to a system hang in addition when intel quickdata dma rol transactions are active marker skipping operations may lead to a system hang
the lane error status field in bits15 258h and device 23 function 0123 offset 258h is used to monitor errors on the pcie lanes due to this erratum the lnerrsts bits associated with the lanes operating at 8 gts port are spuriously set
during pcie link training the receiver looks at symbols in the ts1 and ts2 ordered sets as indicators of lane polarity inversion if polarity inversion is detected the receiver must invert those lanes due to this erratum the receiver may incorrectly set polarity inversion
if a rank is detected as failed after completing ddr training then bios will mark it as disabled disabled ranks are omitted from the os memory map due to this erratum a rank disabled after ddr training completes is not skipped by the patrol scrubber patrol scrubbing of the disabled ranks may result in superfluous correctable and uncorrectable memory error reports
patrol scrubbing is a ras facility that scans all physical memory including any spare ranks to find errors and attempts to fix single bit errors patrol scrubbing is suspended when the processor enters a deep package cstate then resumed when that package c state is exited due to this erratum under complex conditions resuming patrol scrubbing from a package cstate after a rank sparing event may cause the patrol scrubber to hang
due to this erratum patrol scrubbing signals an uncorrectable machine check event when it encounters an uncorrectable error while scrubbing a spare rank the error logged in ia32_mc811_status msr 421h 425h 429h 42dh will have the pcc field bit 57 set to 1 and the addrv field bit 58 set to 0 that is there is no address information associated with the error report
directory mode is a performance feature used on four socket and scalable platforms to reduce average snoop latency mirror scrubbing attempts to erase uncorrectable errors found in one mirror channel by overwriting them with the correct data from the other channel due to this erratum enabling memory mirroring and directory mode with demand  scrubbing  andor  mirror  scrubbing  can  result  in  unpredictable  system behavior patrol scrubbing with memory mirroring enabled and directory mode enabled is not affected by this erratum
the processor monitors power consumption and uses that information to limit core operating frequency due to this erratum power consumption may be improperly calculated by the processor during package cstates as a result the processor may incorrectly signal a power limit interrupt
due to this erratum under complex conditions an intel vtd translation request that results in a dma remapping fault more commonly called translation fault may be lost
the peci rdpkgconfig command with an index value of 03h is the accumulated energy status read service during platform boot the accumulated energy status read service returns an accumulated energy value of 0 later in the boot flow due to this erratum the accumulated energy status read service returns a value that is large energy values calculated with the first nonzero sample have been observed to be as high as 10kj over a limited number of parts
a peci completion code of 91h indicates the pcu power control unit detected an uncorrectable error that prevented processing of the peci request due to this erratum certain pcu or vrm error conditions may lead to a persistent 91h completion code for subsequent peci request uncorrectable pcu errors are reported with an ia32_mc4_statusmcacod msr 411h bits150 value of 0000_0100_0000_0010 ia32_mc4_statusvalid bit 63 set to 1 and ia32_mc4_statusuc bit 61 set to 1
a machine check signaled during vm exit should cause a vmx abort only if the machine check would prevent successful completion of the vm exit ordinarily the machine check should be delivered after the vm exit completes due to this erratum certain machine checks for example an uncorrectable cache error detected by another logical processor may force a vm exit to result in a vmx abort even when that machine check does not interfere with the vm exit completing correctly
when bit 9 in the iiomiscctrl csr bus 0 device 5 function 0 offset 1c0h is set vcp inbound traffic intel hd audio is routed through vc1 to optimize isochronous traffic performance due to this erratum vc1 may not have sufficient bandwidth for all traffic routed through it overflows may occur
suspending an intel quickdata technology dma channel while in the armed state should transition the channel to the halt state due to this erratum suspending a dma channel while in the armed state does not change the state to halt and will cause the dma engine when subsequently activated to ignore the first descriptors fence control bit and may cause the dma engine to prematurely discard the first descriptor during the copy stage
the processor includes a package_energy_counter register to provide realtime energy consumption information this facility can be accessed by the peci rdpkgconfig command with an index value of 03h the accumulated energy status read service by reading the pkg_energy_status msr 611h or by reading package_energy_status csr bus 1 device 10 function 0 offset 90h due to this erratum the power consumption reported during the execution of intel advanced vector extensions intel avx instructions is inaccurate
suspending an active dma xor channel by setting chancmdsuspend dma bit offset 84 bit 2 while xor type dma channels are active may cause incorrect data transfer on the other active legacy channels this erratum may also occur while resetting an active dma xor channel chancmdreset dma bit offset 84 bit 5 chancmd is in the region described by cb_bar bus 0 device 4 function 07 offset 10h
intel qpi links can transition to a lower power state l0s to reduce power consumption during transmitter idle periods due to this erratum when an intel qpi link exits l0s state the resulting retraining may not be successful
the integrated ios coherent interface write cache includes ecc logic to detect errors due to this erratum the write cache can report false ecc errors this error is signaled by asserting bit 1 write cache corrected ecc in the irpp0errst csr bus 0 device 5 function 2 offset 230h or the irpp1errst csr bus 0 device 5 function 2 offset 2b0h
intel quickdata technology utilizes the lower 48 address bits of a 64bit address field detection of accesses to source address destination address descriptor address chain address or completion address outside of this 48bit range are flagged as 64bit addressing errors and should halt dma processing due to this erratum the intel quickdata dma continues to issue requests after detecting certain 64bit addressing errors involving raid operations the failing condition occurs for 64bit addressing errors in either a channel completion upper address register chancmp_0 chancmp_1 bus 0 mmio bar cb_bar 07 offset 98h 9ch or in the source or destination addresses of a raid descriptor
pcie ro relaxed ordering is not supported on this processor due to this erratum enabling ro or equivalently not disabling ro throughout the integrated io logic may lead to unpredictable system behavior or a system hang
intel vtd intel virtualization technology for directed io utilizes itags to identify ats address translation services invalidation requests for invalidating devicetlbs on endpoint devices when an ats invalidation response timeout is detected the corresponding itag is freed and an invalidation timeout error is signaled through the vtd fault status register due to this erratum an ats invalidation response timeout is detected and reported only for the first outstanding itag entry
the ia32_mci_ctl msr comprises enable bits for various machine check events when a particular machine check event occurs but the associated bit in ia32_mci_ctl msr is not set the error is not signaled but is logged with the en flag bit 60 in ia32_mci_status msr set to zero further the logged error report is not protected from being overwritten by succeeding machine check events whether those events have the associated ia32_mci_ctl bit set or cleared due to this erratum it is possible that a ucr uncorrectable recoverable error with the associated bit in ia32_mci_ctl msr set will only set the over flag ia32_mci_status msr bit 62 rather than correctly overwriting the entire previously logged error when that previously logged error does not have ia32_mci_statusen set
the processor should permit hardware coordination of enhanced intel speedstep technology requests to be disabled then use the most recent pstate request from any core or logical processor to set the processorwide pstate target due to this erratum the enhanced intel speedstep technology hardware coordination disable value in bit 0 of the misc_pwr_mgmt msr 1aah is ignored hardware coordination is always enabled
the processor does not allow pcie devices to dynamically change link width but due to this erratum the pcie link upconfigure capability bit is incorrectly advertised as supported
the ia32_mci_mischadbbank field should be ignored
the pcie interface incorporates a recovery mechanism for link degradation by retraining the link without affecting pending transactions when a x4 port detects a lane failure on logical lane 0 the link degrades from x4 to x2 and lane reversal occurs due to this erratum after degrading to x2 and reversing the lanes the link will incorrectly advertise lane numbers as pad 0 1 0 instead of the correct pad pad 1 0
a machine check exception that is delivered between the execution of an io instruction in ins out or outs and an smi systemmanagement interrupt triggered by that instruction may prevent proper handling of the smi because of this the machine check exception should not be reported as restartable due to this erratum such a machine check exception may be reported as restartable
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
due to this erratum the processor does not record the temperature of the system agent in the temperature field in bits 70 of the sa_temperature csr device 10 function 2 offset 044h
a pcie x16 port operating at 8 gts transmitting 256 byte completion tlps may not replay tlps correctly
under complex conditions a master abort error suffered by an intel quickdata technology dma channel running nonraid operations may be reported for both the failing  transfer  and  a  transfer  on  a  different  channel  actively  performing  raid operations note that master abort errors on intel quickdata technology dma transfers are unusual generally indicating dma transfer configuration errors
in cases when a wbinvd instruction evicts a line containing an address or data parity error mcacod of 0x124 and mscod of 0x10 the address of this error should be logged in the mci_addr register due to this erratum the logged address may be incorrect even though mci_statusaddrv bit 63 is set
pagetable walks on behalf of instruction fetches may be made speculatively to uncacheable uc memory
under complex internal conditions a floatingpoint store used to modify the next sequential instruction may result in the old instruction being executed instead of the new instruction
a debug exception occurring at the same time that getsecsexit is executed or when an sexit doorbell event is serviced may be lost
the integrated io unit uses the vpp virtual pin port to communicate with devices that interface to the switches and leds associated with pcie hotplug sequencing due to this erratum vpp operation stalls when a warm reset occurs and then experiences delayed reset depending on timing alignment with the warm reset event a vpp transaction in progress around the time of a warm reset may suffer an extended stall or an immediate termination
ia32_mc5_ctl2 msr 285h is documented to be cleared on any reset due to this erratum this msr is only cleared upon a cold reset
when operating with smt enabled a memory atretirement performance monitoring event from the list below may be dropped or may increment an enabled event on the corresponding counter with the same number on the physical cores other thread rather than the thread experiencing the event processors with smt disabled in bios are not affected by this erratum the list of affected memory atretirement events is as follows mem_uop_retiredloads mem_uop_retiredstores mem_uop_retiredlock mem_uop_retiredsplit mem_uop_retiredstlb_miss mem_load_uops_retiredhit_lfb mem_load_uops_retiredl1_hit mem_load_uops_retiredl2_hit mem_load_uops_retiredllc_hit mem_load_uops_llc_hit_retiredxsnp_hit mem_load_uops_llc_hit_retiredxsnp_hitm mem_load_uops_llc_hit_retiredxsnp_miss mem_load_uops_llc_hit_retiredxsnp_none mem_load_uops_retiredllc_miss mem_load_uops_llc_miss_retiredlocal_dram mem_load_uops_llc_miss_retiredremote_dram mem_load_uops_retiredl2_miss
after a uc uncorrected error is logged in the ia32_ mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 51
ia32_vmx_vmcs_enum msr 48ah bits 9 any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
when 32bit paging is in use the processor should use a page directory located at the 32bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
if a pcie port receives a malformed tlp transaction layer packet an error is logged in the uncerrsts register device 0 function 0 offset 14ch and device 23 function 03 offset 14ch due to this erratum the header of the malformed tlp is logged incorrectly in the hdrlog register device 0 function 0 offset 164h and device 23 function 03 offset 164h
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe  due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
due to this erratum correctable pcie receiver errors may not be logged in the dpe field bit 15 of the pcists csr bus0 device 123 function 010303 offset 6h when operating at 80 gts
configuring pcie port 3a as an ntb nontransparent bridge requires disabling eoi end of interrupt broadcast forwarding to this port by setting bit 26 of miscctrlsts csr bus 0 device 3 function 0 offset 188h to 0 due to this erratum disabling eoi broadcast forwarding to port 3a improperly disables eoi broadcast forwarding to port 2a
if a pcie link autonomously changes width or speed for reasons other than to attempt to correct unreliable link operation the port should set labs bit link autonomous bandwidth status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit 15 due to this erratum the processor will not set this bit and will incorrectly set lbms bit link bandwidth management status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit14 instead
under certain conditions p2p peertopeer traffic between x4 pcie ports on the same processor ie local may cause a system hang
the pcie base specification requires that in the loopbackactive state a loopback slave retransmits the received bit stream bitforbit on the corresponding tx if the link is directed to enter loopback slave mode at 8 gts via ts1 ordered sets with both the loopback and compliance receive bits set the processor may place sync headers in incorrect locations in the loopback bit stream
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
an intel quickdata dma access to intel vtd protected memory that results in a protected memory check error may cause master abort completions on all other intel quickdata dma channels
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
the intel ibist intel interconnect builtin self test does not work in the intel qpi intel quickpath interconnect slow mode and only works at operational speed
the intel qpi specification states that the physical layer initialization process needs to negotiate retraining parameters with a remote agent the protocol is that agents should first exchange their respective retraining interval and duration as part of the link initialization flow then each agent should compare the local and remote values and choose common values by selecting the shortest interval and the longest duration this erratum is conveying that the described negotiation feature is not implemented in the processor
during intel ibist interconnect builtin self test loopback one agent is the master agent while the other is the slave agent on intel qpi the slave should extract an intel ibist loop count from the training sequence sent by the master and use this count to time its stay in the loopbackpattern state before returning to loopbackmarker state while the processor is operating as a slave it does not extract this loop count and times its stay in the loopbackpattern state based on its locally programmed loop count
quiesce master skipping the stopreq2 and the startreq1 intel qpi messages in the lock sequence will result in a system hang
when home agent failover count saturation occurs the memory controller signals a spurious cmci corrected machine check interrupt without logging an error failover count saturation is not an error and a cmci should not be issued
if an uncorrectable memory controller error is followed by a software recoverable error the memory controller will not set the s signaling flag bit of the mci_status to indicate that a software recoverable error occurred
when a read with a single bit error is made to a rank with sddc1b single device data correction plus an additional single bit ecc error along with the nb north bound crc error it could result in incorrect data
when an explicit llc last level cache writeback software recoverable error is detected while there is already a poison error in the mci_status register a machine check is signaled but the mci_statuss signaling flag bit is not set in this case the mci_statuspcc processor context corrupt bit and the s bit are both 0 as a result the machine check handler assumes this to be a spurious error
due to the processor not having a mechanism to detect incorrect alert frames correctable sb south bound crc error may be propagated to an uncorrected ecc error
the processor does not fully implement the protocol in the memory controllerhome agent for sharing the imt31 inflight memory table entry resulting in a patrol scrub deadlock this issue can occur whenever the error flow state is invoked in response to crc errors or hardware injected periodic zqcal zq calibration
when there is a link level crc on the sb south bound intel smi lanes and patrol scrubbing is enabled patrol scrubs may detect false uncorrectable ecc errors logged as patrol read errors the data at this location is not corrupted and poison bit is not set the probability of this happening increases with a higher patrol rate or a higher sb crc error rate
intel smi or intel qpi lanes that are not physically connected on the board or have become unconnected may result in a deskew failure
during a sequence of instruction fetches with specific address relationships to other system traffic a snoop beat pattern that includes snoops to locked cache lines may become established which could cause the processor to hang
the bits 312317158 in uu_cr_u_msr_pmon_evnt_sel msr c10h are not implemented on the processor and are marked as reserved due to this erratum writing 1s to these bits does not generate a gp general protection fault as expected
when using dimms of different rank sizes on the same memory channel a refresh may be missed when a write command to a memory rank is blocked by sustained reads to another memory rank this erratum has been seen only in a synthetic testing environment intel has not observed this erratum with any commercially available software
a read from the mirror master may complete before the writeback from the ioh completes this will result in the ioh writedata not being immediately visible and can lead to the ioh writedata never becoming visible in the case of a rdinvown transaction the reading caching agent will take ownership which can then overwrite the ioh data this is especially visible in falsesharing of cache lines which involve the ioh
the uu_cr_u_msr_pmon_global_ovf_ctl msr c02h is access type rw1c read write 1 clear and when written with 1s should clear the corresponding bit in the uu_cr_u_msr_pmon_ global_status msr c01h due to this erratum a read of the uu_cr_u_msr_pmon_global_ovf_ctl msr does not return zeros however a read of the uu_cr_u_msr_pmon_ global_status msr will show appropriate clearing
the hnid home node id field used in the pmon performance monitoring match mask is incorrect for cmp complete messages from prefetchhint the same incorrect hnid is logged in the event of an error condition on a cmp for a prefetchhint in the caching agent the logging of the rnid requester node id in the error logs for ndr non data response messages is incorrect and impacts the caching agent system bound errors
under certain platform conditions it is possible for the processors internal initialization code to become damaged or erased over the course of power cycling vio and vcache multiple times at least four such power cycles are required to encounter this erratum
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
when a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled dr7g0g3 and dr7l0l3 the dr6b0b3 flags may be incorrect
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception for example nmi nonmaskable interrupt debug breakdb machine check mc and so forth if the rsm attempts to return to a noncanonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
performance monitoring counter simd_inst_retired event c7h is used to track retired sse instructions due to this erratum the processor may also count other types of instructions resulting in higher than expected values
if any of the below circumstances occur it is possible that the load portion of the instruction will have executed before the exception handler is entered if an instruction that performs a memory load causes a code segment limit violation if a waiting x87 floatingpoint fp instruction or mmx technology mmx instruction that performs a memory load has a floatingpoint exception pending if an mmx or ssesse2sse3ssse3 extensions sse instruction that performs a memory load and has either cr0em1 emulation bit set or a floatingpoint top ofstack fp tos not equal to 0 or a dna exception pending
when in v86 mode if a mov instruction is executed tofrom a debug registers a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect this issue would only occur when one of the 2 above mentioned debug support facilities are used
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values ie residual stack data as a result of processing the fault
in ia32e mode it is possible to get an alignment check exception ac on the iret instruction even though alignment checks were disabled at the start of the iret this can only occur if the iret instruction is returning from cpl3 code to cpl3 code irets from cpl012 are not affected this erratum can occur if the eflags value on the stack has the ac flag set and the interrupt handlers stack is misaligned in ia32e mode rsp is aligned to a 16byte boundary before pushing the stack frame
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault for example page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
in 32bit mode memory accesses to flat data segments base  00000000h that occur above the 4g limit 0ffffffffh may not signal a gp fault
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
a processor write to the address range armed by the monitor instruction may not immediately trigger the monitoring hardware consequently a vm exit on a later mwait may incorrectly report the monitoring hardware as armed when it should be reported as unarmed due to the write occurring prior to the mwait
the performance monitor event segment_reg_loads event 06h counts instructions that load new values into segment registers the value of the count may be inaccurate
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
while coming out of cold reset or exiting from c6 if the processor encounters an instruction longer than 15 bytes which causes a gp and a code breakpoint is enabled on that instruction an iq instruction queue parity error may be incorrectly logged resulting in an mce machine check exception
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
according to the intel 64 and ia32 architectures software developers manual volume 3a system programming guide the ratio of ia32_mperf msr e7h to ia32_aperf msr e8h should reflect actual performance while tm1 or ondemand throttling is activated due to this erratum ia32_mperf msr stops counting while tm1 or ondemand throttling is activated and the ratio of the two will indicate higher processor performance than actual
when either the ia32_mperf or ia32_aperf msr e7h e8h increments to its maximum value of 0xffff_ffff_ffff_ffff both msrs are supposed to synchronously reset to 0x0 on the next clock this synchronous reset does not work instead both msrs increment and overflow independently
if a processor is at its tcc thermal control circuit activation temperature and then thermal monitor is disabled by a write to ia32_misc_enables msr 1a0h bit 3 a subsequent reenable of thermal monitor will result in an artificial ceiling on the maximum core pstate the ceiling is based on the core frequency at the time of thermal monitor disable this condition will only correct itself once the processor reaches its tcc activation temperature again
if a specific type of internal unclassified error is detected as identified by ia32_mci_statusmcacod0x0405 the ia32_mci_ statusover overflow bit 62 may be erroneously set
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
reads of reserved apic registers in xapic compatibility mode should signal an apic error with the illegal register address bit 11 set in the error status register offset 0x280 due to the erratum the error is neither logged nor signaled
under a specific set of conditions mmx stores movd movq movntq maskmovq which cause memory access faults gp ss pf or ac may incorrectly update the x87 fpu tag word register this erratum will occur when the following additional conditions are also met the mmx store instruction must be the first mmx instruction to operate on x87 fpu state that is the x87 fp tag word is not already set to 0x0000 for movd movq movntq stores the instruction must use an addressing mode that uses an index register this condition does not apply to maskmovq
when store parity errors in the level 0 hierarchy as defined in the ll subfield of the ia32_mci_status msr occur it is possible that the address of the error will not be logged in ia32_mci_addr msr the error itself will be logged properly
when the xapic timer is automatically reloaded by counting down to zero in periodic mode the xapic timer may slip in its synchronization with the external clock the xapic timer may be shortened by up to one xapic timer tick
processor may take a ud invalid opcode exception instead of a gp general protection exception when certain undefined opcodes opcodes 0f 01 d0  0f 01 d5 extend beyond the segment limit
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
if any of the following events is delivered immediately following a vm exit to 64bit mode from outside 64bit mode bits 6332 of the rip value pushed on the stack may be cleared to 0 a nonmaskable interrupt nmi a machinecheck exception mc a page fault pf during instruction fetch or a generalprotection exception gp due to an attempt to decode an instruction whose length is greater than 15 bytes
under certain complex microarchitectural conditions the coincidence of a bus lock initiated by one logical processor of a hyperthreading enabled processor core and data accesses that are split across page boundaries initiated on the other logical processor on the same core may lead to processor livelock
an unexpected page fault pf may occur for a page under the following conditions the paging structures initially specify a valid translation for the page software modifies the paging structures so that there is no valid translation for the page for example by clearing to 0 the present bit in one of the pagingstructure entries used to translate the page software later modifies the paging structures so that the translation is again a valid translation for the page for example by setting to 1 the bit that was cleared earlier a subsequent instruction loads from a linear address on the page software did not invalidate tlb entries for the page between the first modification of the paging structures and the load from the linear address in this case the load bye the later instruction may cause a page fault that indicates that there is no translation for the page
if an xapic timer event is enabled and while counting down the current count reaches 1 at the same time that the processor thread begins a transition to a low power cstate the xapic may generate two interrupts instead of the expected one when the processor returns to c0
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
the load latency performance monitoring feature stores information about a load into a record in the pebs precise eventbased sampling buffer in the ds save area this information includes the data source encoding latency value and data linear address of the load causing the performance counter to overflow under certain conditions it is possible for the linear address to be incorrect
the data linear address field of the pebs precise eventbased sampling record is not correctly sign extended to 64 bits and may appear as a noncanonical address when observed in the pebs record
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
the architectural performance monitoring event for unhalted reference cycles 3ch umask 01h is not supported on the processor the cpuid instruction when executed with eax  0ah should return bit 2 of ebx as 1 to indicate that this event is not supported due to this erratum cpuid will improperly return bit 2 as 0
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is a store instruction
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
the ia32_perf_global_ctrl msr 38fh bits 3432 may be incorrectly set to 7h after reset the correct value should be 0h
when smt is enabled it is possible that a pstate transition or acpi clock modulation throttling may hang and log a machine check error with ia32_mci_statusmcacod  0x0150 this hang condition requires a specific sequence of instructions coincident with the pstate or acpi event
if software sends a logical cluster broadcast ipi using a destination shorthand of 00b no shorthand and writes the cluster portion of the destination field of the interrupt command register to all ones while not using all 1s in the mask portion of the destination field target cores in a sleep state that are identified by the mask portion of the destination field may not be woken up this erratum does not occur if the destination shorthand is set to 10b all including self or 11b all excluding self
the state updated by a faulting fxrstor instruction may vary from one execution to another
under certain circumstances a general purpose performance counter ia32_pmc04 c1h  c4h may count at core frequency or not count at all instead of counting the programmed event
when a ia32_perfevtselx msr is programmed to count the offcore_response_0 event eventb7h selections in the offcore_rsp_0 msr 1a6h determine what is counted the following two selections do not provide accurate counts when counting nt nontemporal stores offcore_rsp_0 msr bit 14 is set to 1 local_dram and bit 7 is set to 1 other nt stores to local dram are not counted when they should have been offcore_rsp_0 msr bit 9 is set to other_core_hit_snoop and bit 7 is set to 1 other nt stores to local dram are counted when they should not have been
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsar shlshr shld shrd sub xor and xadd causes a page fault or an eptinduced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
ler last exception record and lbr last brand record msrs msr_ler_from_lip 1ddh msr_ler_to_lip 1deh and msr_lastbranch015_from_ip 680h  68fh may contain incorrect values after a fault or trap that does a task switch
when backtoback uncorrected machine check errors occur that would both be logged in the ia32_mc3_status msr 40ch the ia32_mc3_statusmscod bits 3116 field may reflect the status of the most recent error and not the first error the rest of the ia32_mc3_status msr contains the information from the first error
a corrected cache hierarchy data or tag error that is reported with ia32_mci_statusmcacod bits 150 with value of 000x_0001_xxxx_xx01 where x stands for zero or one and a yellow thresholdbased error status indication bits 5453 equal to 10b may be overwritten by a corrected error with a no tracking indication 00b or green indication 01b
an unexpected page fault pf may occur for a page under the following conditions the paging structures initially specify a valid translation for the page software modifies the paging structures so that there is no valid translation for the page for example by clearing to 0 the present bit in one of the pagingstructure entries used to translate the page an iteration of a string instruction modifies the paging structures so that the translation is again a valid translation for the page for example by setting to 1 the bit that was cleared earlier a later iteration of the same string instruction loads from a linear address on the page software did not invalidate tlb entries for the page between the first modification of the paging structures and the string instruction in this case the load in the later iteration may cause a page fault that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page
the performance monitor events dcache_cache_ld event 40h and dcache_cache_st event 41h count cacheable loads and stores that hit the l1 cache due to this erratum in addition to counting the completed loads and stores the counter will incorrectly count speculative loads and stores that were aborted prior to completion
under a complex set of internal conditions cores rapidly performing c3 transitions in a system with intel hyperthreading technology enabled may cause a machine check error ia32_mci_statusmcacod  0x0106 system hang or unpredictable system behavior
the performance monitor event instr_retired event c0h should count the number of instructions retired and mem_inst_ retired event 0bh should count the number of load or store instructions retired however due to this erratum they may undercount
when a performance monitoring counter is configured for pebs precise eventbased sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
performance monitor events store_blocksnot_sta and store_blockssta should only increment the count when a load is blocked by a store due to this erratum the count will be incremented whenever a load hits a store whether it is blocked or can forward in addition this event does not count for specific threads correctly
the vmxpreemption timer should count down by 1 every time a specific bit in the tsc time stamp counter changes this specific bit is indicated by ia32_vmx_misc bits 40 0x485h and has a value of 5 on the affected processors due to this erratum the vmxpreemption timer may instead count down at a different rate and may do so only intermittently
when a vm exit occurs due to a lidt lgdt sidt or sgdt instruction with a 32bit operand bit 11 of the vmexit instructioninformation field should be set to 1 due to this erratum this bit is instead cleared to 0 indicating a 16bit operand
when multiple performance counters are set to generate interrupts on an overflow and more than one counter overflows at the same time only one interrupt should be generated however if one of the counters set to generate an interrupt on overflow is the ia32_fixed_ctr2 msr 30bh counter multiple interrupts may be generated when the ia32_fixed_ctr2 overflows at the same time as any of the other performance counters
if vm entry is executed with the nmiwindow exiting vmexecution control set to 1 a vm exit with exit reason nmi window should occur before execution of any instruction if there is no virtualnmi blocking no blocking of events by mov ss and no blocking of events by sti if vm entry is made with no virtualnmi blocking but with blocking of events by either mov ss or sti such a vm exit should occur after execution of one instruction in vmx nonroot operation due to this erratum the vm exit may be delayed by one additional instruction
if a second reset is initiated during the poweron processor reset cycle the lbrs last branch records may not be properly initialized
the programmable power controller performance monitor counters msr_w_pmon_ctr0123 msrs c91h c93h c95h c97h do not operate correctly in some scenarios these programmable counters have two common usage models polled and pmi performance monitor interrupt polled the polled usage model starts the counters from zero and reads the values after some period as long as the accumulated event count is less than 224 the counter value is correct if the counter value exceeds 224 then in cases when the counter value modulo 224 equals 0 or 1 the value of the counter will be too low by 224 pmi the interrupt usage model loads the counter with a value of n and takes a pmi after n events when the counter rolls over to zero the most common usage model triggers a pmi on the first or second occurrence of an event this corresponds to loading a value of 1 or 2 into the counter these values work correctly values of n from 3 to 224 will generate a pmi after n2 events two events later than requested values of n greater than 224 will in almost all cases also generate a pmi after n2 events the exceptions occur when n mod 224 equals 1 or 2 in which case the pmi will be generated after n2242 events
the hnid home node id field used in the pmon performance monitoring match mask is incorrect for cmp complete messages from prefetchhint the same incorrect hnid is logged in the event of an error condition on a cmp for a prefetchhint in the caching agent the logging of the rnid requester node id in the error logs for ndr non data response messages is incorrect and impacts the caching agent system bound errors
under certain conditions the system configuration controller may not correctly handle ncrd noncoherent read packets which may result in a misaligned uncorrectable error machine check exception or system hang
each intel quickpath interconnect intel qpi and intel scalable memory interconnect intel smi physical layer port may be configured through its pboxerrmask register device0x14 function0x2 offset0x68 to generate ras reliability accessibility serviceability recoverable error signals in any of the four situations initialization failure width reduction intel qpi or lane failover intel smi drift buffer alarm or latency buffer rollover when generated the error signal is sent to the system configuration controller where it is processed into a system management interrupt smi under specific conditions a ras recoverable error signal is generated and logged in a physical layer port but the interrupt is not generated more specifically the error signal is lost on the way from the port to the system configuration controller the problem arises when the error signal tries to pass through a port that has been disabled each physical layer port has its own internal clock generator when a port is disabled its clock generator is off and the error signal cannot propagate through that port
hardware prefetches that miss the l1 data cache but cannot be processed immediately due to resource conflicts will count and then retry this may lead to incorrectly   incrementing the l1d_prefetchmiss event 4eh umask 02h event multiple times for a single miss
if the load ia32_perf_global_ctrl vmexit control is 1 a vm exit should load the ia32_perf_global_ctrl msr 38fh from the ia32_perf_global_ctrl field in the gueststate area of the vmcs due to this erratum such a vm exit may instead clear bits 3432 of the msr loading only bits 310 from the vmcs
under certain platform conditions it is possible for the dc direct connect flash rom contents to become overwritten when glitches during power cycling on the flash rom interface pins are interpreted as dc flash rom opcodes and alter the dc flash rom this erratum is only possible over the course of multiple power cycles due to the programming requirements on this interface
the following overwrite rules for software recoverable errors mcacod form 000f 0000 1mmm cccc are handled incorrectly if the first logged error is a software recoverable error srao software recoverable action optional and the second logged error is a corrected error the ia32_mci_status msr addrv bit 58 and mscod bits 3116 fields should not be overwritten but are overwritten if the first logged error is a software recoverable error srao and the second logged error is a fatal error the second error is expected to overwrite the first error but does not overwrite the ia32_mci_status msr miscv bit 59 if the first logged error is ucna uncorrected no action error and the second logged error is a software recoverable srao error the ia32_mci_status msr miscv bit 59 of the second error should not overwrite bit 59 of the first error due to this erratum the ia32_mci_status msr miscv bit 59 of the second error overwrites the miscv bit of the first error if the first logged error is a software recoverable srao error with and the second logged error is an ucna error the ia32_mci_status msr addrv bit 58 of the second error should not overwrite bit 58 of the first error due to this erratum the   ia32_mci_status msr addrv bit 58 of the second error overwrites the addrv bit of the first error
the intel quickpath interconnect intel qpi physical layer includes the reutphrds device0x14 function0x0 offset0x78 register which has a bit for each rx lane and is supposed to indicate which rx lanes are in use and which are not the processor however only marks a lane as unused if the lane was actually discovered to be bad if a port is constrained to run at something less than full width eg by setting the reutphwci device 0x14 function0x0 offset0x88 register then certain quadrants will not be used but the reutphrds register may report all lanes to be in use
the type of memory aliasing contributing to this erratum is the case where two different logical processors have the same code page mapped with two different memory types specifically if one code page is mapped by one logical processor as writeback and by another as uncacheable and certain instruction fetch timing conditions occur the system may experience unpredictable behavior
performance monitor event eptepdpe_miss event 4fh umask 08h is used to count page directory pointer table misses while ept extended page tables is enabled due to this erratum the processor will count page directory pointer table misses regardless of whether ept is enabled or not
the peci command get_temp returns the highest core temperature and its reported values are used to determine the temperature of the processor in order to regulate fan speed in some instances the uncore temperature is higher than the core temperature and in these instances the get_temp command may return a lower temperature than the processor is actually experiencing note that the uncore temperature may tend to be higher than the core temperature only under very unique workloads for example if there is intensive traffic directed to the processor socket when the cores are in a deep cstate
a random intel qpi lane may be dropped during the lane deskew phase while the intel qpi bus is training at full frequency
if core c6 is entered after the start of an interrupt service routine but before a write to the apic eoi end of interrupt register and the core is woken up by an event other than a fixed interrupt source the core may drop the eoi transaction the next time apic eoi register is written and further interrupts from the same or lower priority level will be blocked
the processor does not meet the intel quickpath interconnect intel qpi and intel scalable memory interconnect intel smi vtxcmacpin specification that is documented in the intel xeon processor 7500 series datasheet volume 1 the datasheet documents the vtxcmacpin to be 00375 and 00375 of vtxdiffpppin for the intel qpi and smi links running at all speeds the processors vtxcmacpin is between the range of 0050 and 0050 of vtxdiffpppin
bios initiation of a system quiesce flow via the quiesce_control2 msr 51h and exit of a system quiesce flow quiesce_control1 msr 50h via may conflict with a power event on the bsp boot strap processor core due to this conflict the bsp core which bios code runs on may have one thread take the power event and the other thread not take the power event resulting in a system hang
bios may configure a smi to be signaled when the patrol scrub engine has reached the end of scrubbing a memory range if the smi is generated while an uncorrected error is detected by another memory patrol scrub engine it may result mcesmi race condition which may lead to system shut down
while an intel quickpath interconnect intel qpi link is processing a link level retry requested by a remote qpi agent due to link crc errors if an intel qpi phy layer reset is triggered and aligns with a specific retry stage a packet may get dropped and cause time out error with mca error code ia32_mci_status 150 encoded as a bus and interconnect error with timeout bit 8  1 cache hierarchy error or internal timer error
in a system with mirrored memory where multiple agents share a cache line with multiple read  write requests outstanding to that line a transient uecc uncorrectable ecc error on the mirrored master may be improperly handled resulting in the assertion of the mce machine check error this erratum only occurs with specific timing conflicts on the outstanding requests intel has not observed this erratum with any commercially available system
under very specific timing conditions if software tries to disable a perfmon counter through msr ia32_perf_global_ctrl 0x38f or through the percounter event select eg msr 0x186 and the counter reached its overflow state very close to that time then due to this erratum the overflow status indication in msr ia32_perf_global_stat 0x38e may be left set with no way for software to clear it
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so that there is a valid translation for the page for example by setting to 1 the present bit in one of the pagingstructure entries used to translate the page software on another logical processor observes this modification for example by accessing a linear address on the page or by reading the modified pagingstructure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs a store to a linear address on the page  in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page intel has not observed this erratum with any commercially available software
false drift buffer alarms may be observed in the pr03_cr_p_pcsr_reutphpls device 14h15h16h17h function 0 offset 90h and pz0 1_cr_p_pcsr_reutphpls device 18h 19h function 0 offset 90h registers of the intel quickpath interconnect intel qpi and intel scalable memory interconnect intel smi of the processor without crcs logged on the portlink
when an l1 data cache error is logged in ia32_mci_status150 which is the mca error code field with a cache error type of the format 0000 0001 rrrr ttll the ll field may be incorrectly encoded as 01b instead of 00b
the stack pushes for an event delivered after vm entry and before execution of an instruction in vmx nonroot operation may not occur properly the erratum applies only if the vm entry establishes ia32_eferlma  0 and csd  0 and only if the event handler is also invoked with csd  0
successful vm entries using the vmlaunch instruction should set the launch state of the vmcs to launched due to this erratum such a vm entry may not update the launch state of the current vmcs if the vm entry is returning from smm
vm entry should not clear bytes 81h83h on the virtualapic page if the use tpr shadow vmexecution control is 0 due to this erratum vm entry will do so if the virtualize x2apic mode vmexecution control is 1
under a complex set of internal conditions a system hang may occur in the presence of l2 ecc correctable errors that set bit 5453  0x2 in ia32_mci_status for a system with ept extended page tables and dcu data cache unit 16 kb mode which is a 16 kb 4way eccenabled mode enabled
if a logical processor attempts to set the accessed bit in a code or data segment descriptor while another logical processor is modifying the same descriptor both modifications of the descriptor may be lost
this erratum applies if the address of the memory operand of an invept or invvpid instruction resides on a page larger than 4kbytes and either 1 that page includes the low 1 mbytes of physical memory or 2 the physical address of the memory operand matches an mtrr that covers less than 4 mbytes a subsequent execution of invlpg that targets the large page and that occurs before the next vmentry instruction may fail to flush all tlb entries for the page such entries may persist in the tlb until the next vmentry instruction
a 2 mb page split lock a locked access that spans two 2 mb large pages coincident with additional requests that have particular address relationships in combination with a timing sensitive sequence of complex internal conditions may cause unpredictable system behavior
under normal circumstances an operation fails if it attempts to modify a reserved bit of a modelspecific register msr due to this erratum and for some nonarchitectural msrs such an attempt may cause unpredictable system behavior
the io_smi bit in smrams location 7fa4h is set to 1 by the processor to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by
when the l1 cache is operating in 16k redundant parity mode and a parity error occurs on both halves of the duplicated cache on the same cacheline an uncorrectable error should be logged due to this erratum the uncorrectable error will be recorded as correctable however a machine check exception will be appropriately taken in this case
writing an illegal vector 0 to 15 to the ia32_x2apic_self_ipi msr while the local apic is in x2apic mode will cause the processor to hang
under specific internal conditions when using freeze perfmon on pmi feature bit 12 in ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h if two or more perfmon fixed counters overflow very closely to each other the overflow may be mishandled for some of them this means that the counters overflow status bit in msr_perf_global_status msr 38eh may not be updated properly additionally pmi interrupt may be missed if software programs a counter in samplingmode pmi bit is set on counter configuration
if vm entry is made with the virtual nmis and nmiwindow exiting vmexecution controls set to 1 and if there is no virtualnmi blocking after vm entry a vm exit with exit reason nmi window should occur immediately after vm entry unless the vm entry put the logical processor in the waitfor sipi state due to this erratum such vm exits do not occur if the vm entry put the processor in the shutdown state
executions of the invvpid instruction outside 64bit mode with the invvpid type individualaddress invalidation ignore bits 6332 of the linear address in the invvpid descriptor and invalidate translations for bits 310 of the linear address
under certain complex microarchitectural conditions closely spaced data accesses that are split across cacheline boundaries may lead to a processor hang
under certain timing conditions involving multiple cores a cacheable load may appear to be ordered before an earlier cacheable locked instruction that accesses a different location
a machine check occurring during vm entry may cause the vm entry to fail due to this erratum such a vm entry failure may be followed by unpredictable behavior including a processor hang
in cases when a wbinvd instruction evicts a line containing an address or data parity error mcacod of 0x124 and mscod of 0x10 the address of this error should be logged in the mci_addr register due to this erratum the logged address may be incorrect even though mci_statusaddrv bit 63 is set
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
when 32bit paging is in use the processor should use a page directory located at the 32bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal   processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
performance monitoring counter mem_inst_retiredstores event 0bh umask 02h is used to track retired instructions which contain a store operation due to this erratum the processor may also count other types of instructions including wrmsr and mfence
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
the io_smi bit in smrams location 7fa4h is set to 1 by the cpu to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by a nonio instruction smi is pending while a lower priority event interrupts a rep io read
performance monitoring counter simd_inst_retired event c7h is used to track retired sse instructions due to this erratum the processor may also count other types of instructions resulting in higher than expected values
in ia32e mode it is possible to get an alignment check exception ac on the iret instruction even though alignment checks were disabled at the start of the iret this can only occur if the iret instruction is returning from cpl3 code to cpl3 code irets from cpl012 are not affected this erratum can occur if the eflags value on the stack has the ac flag set and the interrupt handlers stack is misaligned in ia32e mode rsp is aligned to a 16byte boundary before pushing the stack frame
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault eg page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
some of the b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may be incorrectly set for nonenabled breakpoints when the following sequence happens mov or pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist another instruction after the fp instruction completes successfully a breakpoint occurs due to either a data breakpoint on the preceding instruction or a code breakpoint on the next instruction due to this erratum a nonenabled breakpoint triggered on step 1 or step 2 may be reported in b0b3 after the breakpoint occurs in step 4
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
when a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled dr7g0g3 and dr7l0l3 the dr6b0b3 flags may be incorrect
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
when a performance monitoring counter is configured for pebs precise event based sampling overflows of the counter can result in storage of a pebs record in the pebs buffer due to this erratum if the overflow occurs during probe mode it may be ignored and a new pebs record may not be added to the pebs buffer
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
under a specific set of conditions mmx stores movd movq movntq maskmovq which cause memory access faults gp ss pf or ac may incorrectly update the x87 fpu tag word register this erratum will occur when the following additional conditions are also met the mmx store instruction must be the first mmx instruction to operate on x87 fpu state ie the x87 fp tag word is not already set to 0x0000 for movd movq movntq stores the instruction must use an addressing mode that uses an index register this condition does not apply to maskmovq
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
the from address associated with the lbr last branch record btm branch trace message or bts branch trace store may be incorrect for the first branch after a transition of eist enhanced intel speedstep technology tstate thermal monitor states s1state acpi package sleep state c1e enhanced c1 low power state adaptive thermal throttling
reserved bits in the queued invalidation descriptors of intel vtd virtualization technology for directed io are expected to be zero meaning that software must program them as zero while the processor checks if they are not zero upon detection of a nonzero bit in a reserved field an intel vtd fault should be recorded due to this erratum the processor does not check reserved bit values for queued invalidation descriptors
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80 bit fp access load or store uses a 32bit address size in 64bit mode and the memory access wraps a 4gbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
the intel 64 and ia32 architectures software developers manual volume 2b states that execution of vmread or vmwrite should fail if the value of the instructions register source operand corresponds to an unsupported field in the vmcs virtual machine control structure the correct operation is that the logical processor will set the zf zero flag write 0ch into the vminstruction error field and for vmread leave the instructions destination operand unmodified due to this erratum the instruction may instead clear the zf leave the vminstruction error field unmodified and for vmread modify the contents of its destination operand
if software clears the f fault bit 127 of the fault recording register frcd_reg at offset 0x208 in remap engine bar by writing 1b through rw1c command read write 1 to clear when the f bit is already clear then a spurious interrupt from intel vtd virtualization technology for directed io remap engine may be observed
pcie msgmsg_d tlps transaction layer packets with incorrect routing code as well as the deprecated tcfgrd and tcfgwr types should be treated as malformed transactions leading to a critical error due to this erratum the integrated pcie controllers root ports may treat such messages as ur unsupported requests
if the processor receives an upstream malformed non posted packet for which the type field is io configuration or the deprecated tcfgrd and the format is 4 dw header then due to this erratum the integrated pcie controller may hang instead of reporting the malformed packet error or issuing an unsupported request completion transaction
when programming field t_state_req of the ia32_clock_modulation msr 19ah bits 30 to 0001 the actual clock modulation duty cycle will be 125 instead of the expected 625 ratio
when a pcie root ports receiver is in receiver l0s power state and the port initiates a recovery event it will issue training sets to the link partner the link partner will respond by initiating an l0s exit sequence prior to transmitting its own training sets the link partner may transmit a tlp transaction layer packet request due to this erratum the root port may not acknowledge the tlp request
if the fixedfunction performance counter ia32_fixed_ctr2 msr 30bh is configured to generate a performancemonitor interrupt pmi on overflow and the counters value is greater than ffffffffffc0h then this erratum may incorrectly cause a pmi if software performs a write to this counter
under specific internal conditions if software tries to write the ia32_fixed_ctr1 msr 30ah a value that has all bits 311 set while the counter was just about to overflow when the write is attempted ie its value was 0xffff ffff ffff then due to this erratum the new value in the msr may be corrupted
ltr latency tolerance reporting is a new optional feature specified in pcie rev 21 the processor reports ltr as supported in ltrs bit in dcap2 register bus 0 device 1 function 0 offset 0xc4 but this feature is not supported
under very specific timing conditions if software tries to disable a perfmon counter through msr ia32_perf_global_ctrl 0x38f or through the percounter event select eg msr 0x186 and the counter reached its overflow state very close to that time then due to this erratum the overflow status indication in msr ia32_perf_global_stat 0x38e may be left set with no way for software to clear it
when a 2byte opcode of a conditional branch opcodes 0f8xh for any value of x instruction resides in 16bit codesegment and is associated with invalid vex prefix it may sometimes signal a gp fault illegal instruction length  15bytes instead of a ud illegal opcode fault
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
in 64bit mode using rexw1 with pcmpestri and pcmpestrm or vexw1 with vpcmpestri and vpcmpestrm should support a 64bit length operation with rax rdx due to this erratum the length registers are incorrectly interpreted as 32bit values
the processor can be configured to issue a pmi performance monitor interrupt upon overflow of the ia32_fixed_ctr0 msr 309h a single pmi should be observed on overflow of ia32_fixed_ctr0 however multiple pmis are observed when this erratum occurs this erratum only occurs when ia32_fixed_ctr0 overflows and the processor and counter are configured as follows intel hyperthreading technology is enabled ia32_fixed_ctr0 local and global controls are enabled ia32_fixed_ctr0 is set to count events only on its own thread ia32_fixed_ctr_ctrl msr 38dh bit 2  0 pmis are enabled on ia32_fixed_ctr0 ia32_fixed_ctr_ctrl msr bit 3  1 freeze_on_pmi feature is enabled ia32_debugctl msr 1d9h bit 12  1
ia32_feature_control msr 3ah may have random values after reset including the reserved and lock bits and the readmodifywrite of the reserved bits andor the lock bit being incorrectly set may cause an unexpected gp fault
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an rep movsb or rep stosb
the pci express base specification revision 30 states that the hardware autonomous speed disable bit link control register 2 bit 5 does not block the initial transition to the highest supported common link speed setting this bit will block all autonomous speed changes
the pcie root port does not support ltr latency tolerance reporting capability however a received ltr message is not treated as a ur unsupported request
if a rep movsbstosb is executed in 64bit mode with an address size of 32 bits and if an interrupt is being recognized at the start of the instruction operation the upper 32bits of rcx rdi and rsi may be cleared even though no data has yet been copied or written
if a rep movsbstosb is executed and an interrupt is recognized prior to completion of the first iteration of the string operation eflags may be saved with rf1 even though no data has been copied or stored the software developers manual states that rf will be set to 1 for such interrupt conditions only after the first iteration is complete
the physical memory space 0640k when accessed through the graphics aperture may result in a failure for writes to complete or reads to return incorrect results
the software developers manual states that no pmi should be generated when pebs index reaches pebs absolute maximum due to this erratum a pmi may be generated even though the pebs buffer is full
under certain conditions the performance monitoring event instructions retired event c0h unmask 00h may over count the execution of iret instruction
the pcie port is capable of functioning as 3 independent pcie controllers due to this erratum if more than one of the controllers is in loopbackactive state and configured as a loopback slave and if any one of these controllers transition to loopbackexit all controllers in loopbackactive will transition to loopbackexit
on processors that support the rdrand instruction that capability should be reported via the setting of cpuid01hecxrdrandbit 30 due to this erratum that bit will not be set and the execution of the rdrand instruction will result in a ud exception
under certain conditions if a pcie device that initially transmits posted data credits less than max_payload_size16  4 16b4dw is unit of data flow control and is the target of a peertopeer write of max_payload_size the system may hang due to posted data credit starvation
the pcie base specification includes a graph that sets requirements for maximum receiver return loss versus frequency due to this erratum the receiver return loss for common mode and differential mode may exceed those requirements at certain frequencies under laboratory conditions intel has observed violations of as much as 1 db
under a complex set of conditions while using vtd virtualization technology for directed io with the processor graphics device direct access to the virtualized processor graphics device can lead to a system hang or restart
if an io instruction in ins out or outs results in an smi systemmanagement interrupt the processor will set the io_smi bit at offset 7fa4h in smram this interrupt should be delivered immediately after execution of the io instruction so that the software handling the smi can cause the io instruction to be reexecuted due to this erratum it is possible for another event eg a nonmaskable interrupt to be delivered before the smi that follows the execution of an in or ins instruction
the processor should not associate any lanes that were not part of the initial link training in subsequent upconfiguration requests from an endpoint due to this erratum the processor may associate any lane that has exited electrical idle even if it is beyond the width of the initial link training
in endpointinitiated transitions to pollingcompliance at the 8 gts transfer rate the processor must reflect in its ordered sets the transmitter preset requested by the endpoint regardless of preset legality due to this erratum the processor will reflect the transmitter preset in use after an endpoint requests a reserved transmitter preset rather than the requested preset
when initiating a secondary bus reset or link disable procedure while a pcie link is in recovery state the processor should send an eieos electrical idle exit ordered set after every 32 ts training set ordered sets due to this erratum the processor may send an eieos after every 33 ts ordered sets
it may not be possible to support the pcie transmitter preset 1 andor transmitter preset 0 equalization requests in phase 0 or phase 2 of recoveryequalization ltssm states when operating in 8gts in reduced or half swing mode if 0db transmitter de emphasis needs to be supported when operating at 5gts
if the processor is directed to enter pcie pollingcompliance at 50 gts or 80 gts transfer rates it should use the link control 2 compliance presetdeemphasis field bits 1512 to determine the correct deemphasis level due to this erratum when the processor is directed to enter pollingcompliance from 25 gts transfer rate it retains 25 gts deemphasis values
due to this erratum if a link partner transitions to rxl0s state within 20 ns of entering l0 state the pcie controller may incorrectly log an error in correctable error statusreceiver error status field bus 0 device 2 function 0 1 2 and device 6 function 0 offset 1d0h bit 0
if the processor receives an upstream malformed non posted packet for which the type field is io configuration or the deprecated tcfgrd and the format is 4 dw header then due to this erratum the integrated pcie controller may hang instead of reporting the malformed packet error or issuing an unsupported request completion transaction
pcie link width may degrade after a warm reset if the link is operating at 80 gts or 50 gts transfer speeds prior to the reset
when an endpoint directs the processor to enter loopback slave mode at 8 gts via ts1 ordered sets with both the loopback and compliance receive bits set the pcie link should directly enter loopbackactive state due to this erratum the processor must achieve block alignment on all looped back lanes prior to entering loopbackactive
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
execution of the vzeroall or vzeroupper instructions in 64bit mode with vexw set to 1 may erroneously cause a ud invalidopcode exception
the pcie base specification requires the upstream component to maintain the pcie link at the target link speed or the highest speed supported by both components on the link whichever is lower pcie root port will not initiate the link speed change without being triggered by the software when the root port maximum link speed is configured to be 50 gts system bios will trigger the link speed change under normal boot scenarios however bios is not involved in some scenarios such as link disablere enable or secondary bus reset and therefore the speed change may not occur unless initiated by the downstream component this erratum does not affect the ability of the downstream component to initiate a link speed change all known 50gbscapable pcie downstream components have been observed to initiate the link speed change without relying on the root port to do so
under specific internal conditions when using freeze perfmon on pmi feature bit 12 in ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h if two or more perfmon fixed counters overflow very closely to each other the overflow may be mishandled for some of them this means that the counters overflow status bit in msr_perf_global_status msr 38eh may not be updated properly additionally pmi interrupt may be missed if software programs a counter in samplingmode pmi bit is set on counter configuration
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
if vm entry is made with the virtual nmis and nmiwindow exiting vmexecution controls set to 1 and if there is no virtualnmi blocking after vm entry a vm exit with exit reason nmi window should occur immediately after vm entry unless the vm entry put the logical processor in the waitfor sipi state due to this erratum such vm exits do not occur if the vm entry put the processor in the shutdown state
executions of the invvpid instruction outside 64bit mode with the invvpid type individualaddress invalidation ignore bits 6332 of the linear address in the invvpid descriptor and invalidate translations for bits 310 of the linear address
the processor supports a x16 pcie port which can be bifurcated into three independent links enumerated as bus 0 device 1 function 02 due to this erratum if the port is bifurcated and function 1 or 2 is disabled the pcie controller may not properly indicate link electrical idle condition to the power control unit
the pcie controller is expected to enter loopback if any lane in the link receives two consecutive ts1 ordered sets with the loopback bit set due to this erratum if two consecutive ts1 ordered sets are received only on certain lanes the controller may not enter loopback
the processor supports tools and mechanisms to characterize and measure margins for the pcie interface due to this erratum when performing link margintofailure characterization it is possible that a high bit error rate may cause the link to hang
due to this erratum during pcie link down configuration unused lanes may report a correctable error detected in bus 0 device 1 function 02 and device 6 function 0 offset 158h bit 0
when cpuid0aheax158 reports 8 generalpurpose performance monitoring counters per logical processor rdmsr of ia32_perfevtsel47 msr 18ah18dh may not return the same value previously written by software
the processor supports pcie hardware autonomous width management in which a pcie link can autonomously vary its width due to this erratum a link that performs a speed change while in a reduced width may no longer be able to return to a wider link width
the graphics engine should detect parity errors within the graphics l3 cache however due to this erratum graphics l3 cache parity errors may not be detected
when entering link disable ltssm state the pcie controller may not properly indicate the link electrical idle condition
the processor graphics l3 cache is designed to have redundancy to improve resilience to cache related errors due to this erratum that redundancy may not function as expected resulting in a potential increase in l3 cache related errors
under certain conditions if the execution of a rep movsb instruction is interrupted the values of ecx esi and edi may contain values that represent a later point in the execution of the instruction than the actual interruption point
under certain conditions listed below when a performance counter overflows its overflow indication may remain set indefinitely this erratum affects the general purpose performance counters ia32_pmc07 and the fixedfunction performance counters ia32_fixed_ctr02 the erratum may occur if any of the following conditions are applied concurrent to when an actual counter overflow condition is reached  software disables the counter either globally through the ia32_perf_global_ctrl msr 38fh or locally through the ia32_perfevtsel07 msrs 186h18dh or the ia32_fixed_ctr_ctrl msr 38dh software sets the ia32_debugctl msr 1d9h freeze_perfmon_on_pmi bit 12 the processor attempts to disable the counters by updating the state of the ia32_perf_global_ctrl msr 38fh as part of transitions such as vm exit vm entry smi rsm or processor cstate
when cpuidaeax158 reports 8 generalpurpose performance monitoring counters per logical processor rdmsr of ia32_perfevtsel47 msr 18ah18dh may not return the same value as previously written
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
the intel core i33217u processor may incorrectly report support for intel turbo boost technology via cpuid06heax bit 1
under a complex set of microarchitectural conditions the system may hang if software changes the memory type and page size used to translate a linear address while a tlb translation lookaside buffer holds a valid translation for that linear address
in cases when a wbinvd instruction evicts a line containing an address or data parity error mcacod of 0x124 and mscod of 0x10 the address of this error should be logged in the mci_addr register due to this erratum the logged address may be incorrect even though mci_statusaddrv bit 63 is set
under a complex set of internal conditions and operating temperature when the processor is in a deep power state package c3 c6 or c7 and the pcie andor dmi links are toggling in and out of l1 state the system may hang
pagetable walks on behalf of instruction fetches may be made speculatively to uncacheable uc memory
under complex internal conditions a floatingpoint store used to modify the next sequential instruction may result in the old instruction being executed instead of the new instruction
a debug exception occurring at the same time that getsecsexit is executed or when an sexit doorbell event is serviced may be lost
the getsec instruction causes a vm exit when executed in vmx nonroot operation such a vm exit should set bit 0 in the interruptabilitystate field in the virtualmachine control structure vmcs if the sti instruction was blocking interrupts at the time getsec commenced execution due to this erratum a vm exit executed in vmx nonroot operation may erroneously clear bit 0 if redirection to probe mode occurs on the getsec instruction
cific sourcecopy blitter instructions in intel hd graphics 2500 and 4000 processor may result in unpredictable behavior when a blit source and destination overlap
ia32_mc5_ctl2 msr 285h is documented to be cleared on any reset due to this erratum this msr is only cleared upon a cold reset
when the cpuid instruction is executed with eax  80000002h 80000003h and 80000004h the returned brand string may be incomplete it may be missing the processor number
when operating with smt enabled a memory atretirement performance monitoring event from the list below may be dropped or may increment an enabled event on the corresponding counter with the same number on the physical cores other thread rather than the thread experiencing the event processors with smt disabled in bios are not affected by this erratum the list of affected memory atretirement events is as follows mem_uop_retiredloads mem_uop_retiredstores mem_uop_retiredlock mem_uop_retiredsplit mem_uop_retiredstlb_miss mem_load_uops_retiredhit_lfb mem_load_uops_retiredl1_hit mem_load_uops_retiredl2_hit mem_load_uops_retiredllc_hit mem_load_uops_llc_hit_retiredxsnp_hit mem_load_uops_llc_hit_retiredxsnp_hitm mem_load_uops_llc_hit_retiredxsnp_miss mem_load_uops_llc_hit_retiredxsnp_none mem_load_uops_retiredllc_miss mem_load_uops_llc_miss_retiredlocal_dram mem_load_uops_llc_miss_retiredremote_dram mem_load_uops_retiredl2_miss
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
when the pfo primary fault overflow field bit 0 in the vtd fsts fault status register is set to 1 further faults should not generate an interrupt due to this erratum further interrupts may still occur
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
when 32bit paging is in use the processor should use a page directory located at the 32 bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
when a fault occurs during dma remapping of graphics accesses at the graphics vtd unit the type of faulted request read or write should be reported in bit 126 of the frcd_reg register in the remapping hardware memory map register set due to this erratum the request type may not be reported correctly
sinit acm 3rd_gen_i5_i7sinit_51bin or earlier are revoked and will not launch with new processor configuration information
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
the intel vtd intel virtualization technology for directed io hardware unit supporting the processor graphics device bus 0 device 2 function 0 may not report address translation faults detected on display engine memory accesses when the context cache is disabled or during time periods when context cache is being invalidated
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if ept extended page tables is enabled a mov to cr3 may be followed by an unexpected page fault or the use of an incorrect page translation
this erratum may cause a machinecheck error ia32_mci_statusmcacod0150h on the fetch of an instruction that crosses a 4kbyte address boundary it applies only if the 4kbyte linear region on which the instruction begins is originally translated using a 4kbyte page with the wb memory type 2 the paging structures are later modified so that linear region is translated using a large page 2mbyte 4mbyte or 1gbyte with the uc memory type and 3 the instruction fetch occurs after the pagingstructure modification but before software invalidates any tlb entries for the linear region
during the processor power up sequence high frequency noise may occur on the ddr smbus sda and scl signals interfering with correct information transfer
the pcie base specification requires every downstream port that supports link speeds greater than 50 gts to support dll data link layer link active reporting however the pcie ports do not support dll link active reporting
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction  when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if cr0cd1 the mtrrs and pat should be ignored and the uc memory type should be used for all memory accesses due to this erratum a logical processor in vmx operation will operate as if cr0cd0 even if that bit is set to 1
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
when a pcie root ports receiver is in receiver l0s power state and the port initiates a recovery event it will issue training sets to the link partner the link partner will respond by initiating an l0s exit sequence prior to transmitting its own training sets the link partner may transmit a tlp transaction layer packet request due to this erratum the root port may not acknowledge the tlp request
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
if the processor is directed to enter pcie pollingcompliance at 50 gts or 80 gts transfer rates it should use the link control 2 compliance presetdeemphasis field bits 1512 to determine the correct deemphasis level due to this erratum when the processor is directed to enter pollingcompliance from 25 gts transfer rate it retains 25 gts deemphasis values
due to this erratum if a link partner transitions to rxl0s state within 20 ns of entering l0 state the pcie controller may incorrectly log an error in correctable error statusreceiver error status field bus 0 device 2 function 0 1 2 and device 6 function 0 offset 1d0h bit 0
due to this erratum during pcie link down configuration unused lanes may report a correctable error detected in bus 0 device 1 function 02 and device 6 function 0 offset 158h bit 0
the physical memory space 0640k when accessed through the graphics aperture may result in a failure for writes to complete or reads to return incorrect results
the pcie base specification requires the upstream component to maintain the pcie link at the target link speed or the highest speed supported by both components on the link whichever is lower pcie root port will not initiate the link speed change without being triggered by the software when the root port maximum link speed is configured to be 50 gts system bios will trigger the link speed change under normal boot scenarios however bios is not involved in some scenarios such as link disablere enable or secondary bus reset and therefore the speed change may not occur unless initiated by the downstream component this erratum does not affect the ability of the downstream component to initiate a link speed change all known 50gbscapable pcie downstream components have been observed to initiate the link speed change without relying on the root port to do so
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
due to this erratum the supplier information may become stale and the following events may count incorrectly mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h page_walker_loadsdtlb_l3 event bch umask 14h page_walker_loadsitlb_l3 event bch umask 24h page_walker_loadsdtlb_memory event bch umask 18h page_walker_loadsitlb_memory event bch umask 28h
specific sourcecopy blitter instructions in intel hd graphics 4600 processor may result in unpredictable behavior when a blit source and destination overlap
if an ia32_mci_status msr contains an uncorrectable error with mcacod0x406 and a second uncorrectable error occurs after warm reset but before the first error is cleared by zeroing the ia32_mci_status msr a shutdown will occur
the pcie controller does not produce the pcie specification defined sequence for the modified compliance pattern at 25 gts and 5 gts transfer rates this erratum is not seen at 8 gts transfer rates
when operating with smt enabled a memory atretirement performance monitoring event from the list below may be dropped or may increment an enabled event on the corresponding counter with the same number on the physical cores other thread rather than the thread experiencing the event processors with smt disabled in bios are not affected by this erratum the list of affected memory atretirement events is as follows mem_uop_retiredloads mem_uop_retiredstores mem_uop_retiredlock mem_uop_retiredsplit mem_uop_retiredstlb_miss mem_load_uops_retiredhit_lfb mem_load_uops_retiredl1_hit mem_load_uops_retiredl2_hit mem_load_uops_retiredl3_hit mem_load_uops_l3_hit_retiredxsnp_hit mem_load_uops_l3_hit_retiredxsnp_hitm mem_load_uops_l3_hit_retiredxsnp_miss mem_load_uops_l3_hit_retiredxsnp_none mem_load_uops_retiredl3_miss mem_load_uops_l3_miss_retiredlocal_dram mem_load_uops_l3_miss_retiredremote_dram mem_load_uops_retiredl2_miss
the performance monitor event uops_executed event b1h any unmask should count the number of uops executed each cycle however due to this erratum when eight uops execute in one cycle these uops will not be counted
on a processor pcie controller configuration in which two or more controllers receive concurrent atomic transactions a pcie controller may experience starvation which eventually can lead to a completion timeout
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
when execution of an avx gather instruction causes an ept extended page table violation due to a specific element all previous elements should be complete due to this erratum such an execution may fail to complete previous elements in addition the instructions mask operand is not updated this erratum applies only if the ept violation occurs while updating an accessed or dirty flag in a pagingstructure entry instructions impacted by this erratum are vgatherdps vgatherdpd vgatherqps vgatherqpd vpgatherdd vpgatherdq vpgatherqd and vpgatherqq
the platform_power_limit msr 615h is used to control the pl3 power limit 3 mechanism of the processor due to this erratum this msr is not visible to software
when any of the four possible lpddr ranks are not populated the unpopulated ranks will report a default temperature of 85c as a three bit value of 011b if the system has unpopulated ranks the temperature of memory will be reported as 85c in pcu_cr_ddr_dimm_hottest_absolute mchbar bus 0 device 0 function 0 offset 58b8h in bits 57 until any of the populated ranks report a higher temperature than this
the pcie host bridge did register bus 0 device 0 offset 2h contents may be incorrect after a package c7 exit
on exiting from package c6 or deeper the processor may incorrectly restore the tsc time stamp counter
the pcie controller supports hardware autonomous speed change capabilities due to this erratum the pcie controller may initiate speed change while in the dl_init state which may prevent link training for certain pcie devices
when the pfo primary fault overflow field bit 0 in the vtd fsts fault status register is set to 1 further faults should not generate an interrupt due to this erratum further interrupts may still occur
an execution of a 128bit avx gather instruction zeroes the upper 128 bits of the instructions destination register unless access to the first unmasked element causes a fault or vm exit due to this erratum these bits may be cleared even when accessing the first unmasked element causes a fault or vm exit instructions impacted by this erratum are vgatherdps vgatherdpd vgatherqps vgatherqpd vpgatherdd vpgatherdq vpgatherqd and vpgatherqq
upon completion of the vdpps instruction with multiple different nan encodings in the input elements software may observe different nan encodings in the destination elements
when package cstates are enabled the display may not be refreshed at the correct rate
execution of certain combinations of avx instructions may lead to unpredictable system behavior
under certain conditions the processor may incorrectly calculate the frequency at which the cores and graphics engine can operate while still meeting voltage regulator and power supply peak power delivery capabilities when this occurs combined with high power workloads system shutdown may be observed
the ia32_perf_ctl msr 199h is not initialized correctly after a processor reset
when package cstates are enabled it is possible that the processor may hang when software performs a function level reset of the display via bit 1 of the advanced features control register bus 0 device 2 function 0 offset 0a8h
due to this erratum an execution of a 128bit avx gather instruction may fail to generate a df double fault when expected instructions impacted by this erratum are vgatherdps vgatherdpd vgatherqps vgatherqpd vpgatherdd vpgatherdq vpgatherqd and vpgatherqq
when the oltm open loop thermal management feature is enabled the dimm thermal status reported in ddr_therm_perdimm_status mchbar offset 588ch may be incorrect following an exit from package c3 or deeper
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
btm branch trace message and bts branch trace store report the fromip indicating the source address of the branch instruction due to this erratum btm and bts may repeat the fromip value previously reported the toip value is not affected
tm1 thermal monitor 1 throttling may continue when the processors temperature decreases below the throttling point while the processor is in package c3 or deeper
due to this erratum uncorrectable internal parity error with an ia32_mc2_statusmcacod bits 150 value of 0005h and an ia32_mc2_statusmscod bits 3116 value of 0004h may incorrectly set the ia32_mc2_statusover flag bit 62 indicating an overflow when a single error has been observed
the performance monitor events other_assistsavx_to_sse event c1h umask 08h and other_assistssse_to_avx event c1h umask 10h incorrectly increment and over count when an hle hardware lock elision abort occurs
the processor package may use stale software pstate performance state requests when one or more logical processors are idle
the performance monitor event dsb2mite_switchescount event abh umask 01h should count the number of dsb decode stream buffer to mite macro instruction translation engine switches due to this erratum the dsb2mite_switchescount event will count speculative switches and cause the count to be higher than expected
msr_unc_perf_global_status 392h is a global status register which indicates the overflow of uncore performance monitor counters the content of this register is lost in package c7 state
if the pcie links are disabled via link disable bus 0 device 1 functions 21 offset b0h bit 4 and the pcie controller is enabled bus 0 device 0 function 0 offset 54h bits 21  11 then the processor will be unable to enter package c6 or deeper c states
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of offcore outstanding transactions each cycle due to this erratum the counts may be higher than actual number of events
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of occurrences that loads or stores stay in the super queue each cycle the performance monitor event cycle_activitycycles_l2_pending event a3h umask 01h should count the number of cycles that demand loads stay in the super queue however due to this erratum these events may count inaccurately during smt mode
when 32bit paging is in use the processor should use a page directory located at the 32bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
the performance monitor events hle_retiredaborted_misc4 event c8h umask 40h and rtm_retiredaborted_misc4 event c9h umask 40h are defined to count the number of transactional aborts due to incompatible memory types due to this erratum they may count additional unrelated transactional aborts
if a pcie device sends an ltr latency tolerance report update message while the processor is in a package c6 or deeper the processor may hang
processors with intel boot guard technology that has getsecparameters leaf 5 eax bit 5 set indicates support for processor rooted sctrm static core root of trust for measurement due to this erratum that bit will not be set even though processor rooted scrtm is supported
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
if the apic timer is in tscdeadline mode and is armed when a timed mwait instruction is executed the timer expiration might not cause an interrupt
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
on a package c7 exit vtd hardware may spuriously perform srtp set root table pointer and sirtp set interrupt remapping table pointer operations a package c7 exit can cause the value programmed by software in the rta_reg irta_reg to be visible to hardware before software executes a gcmdsrtp command this will result in hardware using the new values for the dma and interrupt translation pagewalks possibly before they are intended to be used by software
a performance monitor event programmed in a generalpurpose performance counter should count the number of occurrences of the event selected in ia32_perfevtsel0 7 msr 186h18dh if inv invert bit 23 is set to 1 and a nonzero cmask counter mask bits 3124 value is used due to this erratum the event may over count in the case that either of os operating system mode bit 17 or usr user mode bit 16 is selected over counting will occur for the cycles spent in the non matching cpl
the following performance monitor events should count the numbers of loads hitting or missing llc however due to this erratum the l3_hit related events may over count and the l3_miss related events may undercount mem_load_retiredl3_hit event d1h umask 40h mem_load_retiredl3_miss event d1h umask 20h mem_load_l3_hit_retired xsnp_none event d2h umask 08h mem_load_llc_miss_retired local_dram event d3h umask 01h
the performance monitoring events mem_trans_retiredload_latency event cdh umask 01h mem_load_retiredl2_hit event d1h umask 02h and mem_uops_retiredlocked event doh umask 20h should count the number of locked loads due to this erratum these events may under count for locked transactions that hit the l2 cache
if ratio or cstate changes involving the processor core and processor graphics occur at the same time or while processor graphics are active under certain internal conditions the ratio change may not complete
the following performance monitor events should count the number of software demand loads however due to this erratum they may also include requests from the next page prefetcher and over count offcore_requests_outstandingdemand_data event 60h umask 01h offcore_requestsdemand_data event b0h umask 01h cycle_activityl2_pending event a3h umask 01h l2_hit_missload event 24h umask 01h
an access to an uncore performance monitor msr beyond the number reported in the msr_unc_cbo_config msr 396h bits30 should signal a gp general protection exception due to this erratum the processor may hang instead of signaling gp
the performance monitoring call stack profiling function should not generate call records for zero length calls call instructions targeting the location following the instruction however due to this erratum the processor will produce call records for zero length calls
due to this erratum after a warm reset the processor may fail to boot properly or may cause power to be regulated to an incorrect level
the pcie host bridge did register bus 0 device 0 function 0 offset 2h contents may be incorrect
if an intel tsx transactional abort event occurs during a string instruction the from ip in the lbr last branch record is not correctly reported
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
when a fault occurs during dma remapping of graphics accesses at the graphics vtd unit the type of faulted request read or write should be reported in bit 126 of the frcd_reg register in the remapping hardware memory map register set due to this erratum the request type may not be reported correctly
if software modifies a pagingstructure entry to relax the access rights for a linear address and does not perform a tlb invalidation a subsequent execution of an avx gather instruction that accesses that address may generate a page fault that loads cr2 which should containing the faulting linear address with an incorrect value
the stack accesses made by vmentry event injection may use an incorrect value for the b flag default stackpointer size and upper bound for the stack segment ss
the value of the ss register as well as the current privilege level cpl may be incorrect following a fault in smm systemmanagement mode the erratum can occur only if a fault occurs following an smi systemmanagement interrupt and before software has loaded the ss register eg with the mov ss instruction
when ctdp configurable thermal design power down is enabled on a processor branded as core i3 or pentium the processor frequency will be limited to ctdp down p1 frequency max nonturbo frequency when it should be able to operate between the ctdp down frequency p1 and the nominal p1 frequency
due to this erratum pmi performance monitoring interrupt may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
execution of the rdrand random number generator instruction inside an intel tsx transactional region may cause the logical processor to hang
on some processors the time required to change the uncore clock frequency may be large enough to significantly lengthen the latency of io requests to memory possibly resulting in audio or video glitches
due to certain internal conditions while running core and memory intensive operations some processors may incorrectly report an llc last level cache related machine check with a ia32_mci_statusmcacod value of 110ah
the processor datasheet specifies that entering package c7 requires enabling psr panel self refresh for certain display resolutions along with other conditions due to this erratum the processor may not enter package c7 when connected to a psr enabled display even if all of the required conditions are met
due to this erratum internal processor operations can occasionally delay the completion of memory read requests enough to cause video or audio streaming underrun
when audio is enabled while in package c3 state or deeper audio memory traffic continues to be generated due to this erratum the processor logic required for memory traffic may be powered down
the invpcid instruction should cause an invalid opcode exception ud in vmx non root operation if either bit 31 of the primary processorbased vmexecution controls activate secondary controls or bit 12 of the secondary processorbased vmexecution controls enable invpcid is 0 due to this erratum the invpcid instruction will not cause ud if activate secondary controls is 0 and enable invpcid is 1 instead the instruction will either execute normally or cause a vm exit if the invlpg exiting vm execution control is 1
pfat platform firmware armoring technology requires the pfat module base address be 256kb aligned and reside in the first 4gb of memory if bios does not comply with these requirements when setting up the pfat module the processor should gp at pfat launch due to this erratum a gp fault may not be generated
if the fetch of an instruction in a transactional region causes a fault a transactional abort occurs if lbrs are enabled the source address recorded for such a transactional abort is the address of the instruction being fetched if that instruction was itself the target of an earlier branch instruction this erratum may erroneously record the address of the branch instruction as the source address for the transactional abort
the intel vtd intel virtualization technology for directed io hardware unit supporting the processor graphics device bus 0 device 2 function 0 may not report address translation faults detected on display engine memory accesses when the context cache is disabled or during time periods when context cache is being invalidated
the corrected error count for l3 cache errors reported in ia32_mci_statuscorrected error count bits 5238 with an mcacod of 0001 0001 xxxx xxxx x can be 0 or 1 may be incorrectly restored to a smaller value during exit from package c7
bus 0 device 7 function 0s svid register subsystem vendor identification offset 2ch is not preserved across package c7 cstate transitions
due to this erratum if gt is enabled prior to a warm reset it will remain powered after the warm reset the processor will make incorrect power management decisions because it assumes the gt is not drawing power after a warm reset
if a pcie controller is enabled and either has unused lanes or no pcie device is present the link andor unused lanes should enter a low power state due to this erratum after exiting package c7 the unused link andor unused lanes may remain powered
feature flags bmi1 and bmi2 cpuid leaf 7 subleaf 0 ebx bits 3 and 8 report these two groups of bit manipulation instructions are not present for theintel core i3 4330te these instruction groups should be available an attempt to execute any of these instructions will generate a ud fault
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
when the ia32_energy_perf_bias msr 1b0h is set to a value of 4 or more the processor will try to increase the energy efficiency of turbo mode however this functionality is effectively disabled if the software requested pstate exceeds the maximum pstate supported by the processor this has the effect of decreasing the energy efficiency of the processor while in turbo mode
if a performance counter has overflowed and is configured for pebs precise event based sampling the processor will arm the pebs hardware within a bounded number of cycles called the skid see the discussion of skid and related topics in the precise distribution of instructions retired section of the intel 64 and ia32 architectures software developer manual once the pebs hardware is armed the processor should capture processor state in a pebs record following the execution of the next instruction that causes the counter to increment a triggering instruction due to this erratum the capture of processor state may occur at an instruction after the first triggering instruction following the skid but not beyond the second triggering instruction after the skid
the msr_pp1_energy_status msr 641h bits 310 reports incorrect energy data
under certain conditions the value of the x87 fpu dp floating point unit data pointer saved by the fsavefnsave fstenvfnstenv fxsave xsave or xsaveopt instructions may be incorrect
under certain internal timing conditions the processor might not properly exit package c7 leading to a hang
under certain stressful conditions while running at ring ratios higher than 30 the processor may experience a spurious llc machine check as indicated by ia32_mci_statusmcacod bits 150 with value 000x 0001 0000 1010 where x is 0 or 1
under the following conditions a readmodifywrite instructions memory sourcedestination eg add memory reg crossing a cache line boundary that instruction executing without fault while the readmodifywrite instruction is executing one or more of the following page table attributes associated with its memory operand are modified the d dirty flag was 0 when the instruction was initiated but was concurrently set to 1 andor one of the relevant rw flags was 0 when the instruction was initiated but was concurrently set to 1 andor if the readmodifywrite instruction executes at cpl  3 and one of the relevant us flags was 0 when the instruction was initiated but was concurrently set to 1 a subsequent instruction executing within a narrow timing window that experiences a page fault there is no serializing instruction between the readmodifywrite instruction and the faulting instruction  the page fault in 4 may report an incorrect error code and faulting linear address these would describe the readmodifywrite instructions memory access instead of that of the faulting instruction the address of the faulting instruction is reported correctly
if the caterr pin is held asserted to indicate a fatal error a subsequent warm reset event will not cause the caterr pin to deassert
machine check exceptions occurring during core c6 entry may be ignored
the display transmit signals are not correctly sampled by the samplepreload jtag command violating the boundary scan specification ieee 11491
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of offcore outstanding transactions each cycle due to this erratum the counts may be higher or lower than expected
when the ia32_energy_perf_bias msr 1b0h is set to a value of 4 or more the processor will try to increase the energy efficiency of turbo mode however this functionality is effectively disabled if the software requested pstate exceeds the maximum pstate supported by the processer
during pcie 80 gts phase 2 equalization training the received perlane transmitter coefficients for physical lanes 815 may be incorrectly applied to the pcie transmitters
pcie tx voltage reference select is available via the pcie_cr_afebnd07cfg1 device 1 function 0 registers in field txvrefsel bits 95 due to this erratum changes to these values will have no effect
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if the edram was disabled as a result of a package cstate entry of c2 or higher or a software request the subsequent package cstate exit or software request to reenable edram may result in a machine check logged in ia32_mci_statusmcacod 150 with of value 402h and subsequent system hang
due to this erratum if edram is enabled prior to a warm reset it will remain powered after the warm reset the processor will make incorrect power management decisions because it assumes the edram is not drawing power after a warm reset
if cpuideax07h ecx0ebxbmi1 bit 3 is 1 then opcode bytes f3 0f bc should be interpreted as tzcnt otherwise they will be interpreted as rep bsf due to this erratum opcode bytes f3 0f bc may execute as tzcnt even if cpuideax07h ecx0ebxbmi1 bit 3 is 0
a limitation in intel s2ddt intel smart 2d display technology commonly known as frame buffer compression may result in pixel data being supplied too slowly to the display
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
due this erratum spurious corrected errors may be logged in the ia32_mc0_status register with the valid field bit 63 set the uncorrected error field bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
package c7 power consumption may be higher than package c6 power consumption
when both logical processors in a core are idled due to power or thermal management operations such as thermal events or cstate entry under certain circumstances instruction fetches initiated before entering the idle state may not complete correctly resulting in unpredictable system behavior
due to this erratum the perfmon events listed below may be counted when the logical processor is not in c0 state idqempty event code 0x79 and umask 0x02 idq_uops_not_deliveredcore event code 0x9c and umask 0x01 resource_stallsany event core 0xa2 umask 0x01 cycle_activitycycles_ldm_pending event a3h umask 02h cmask 02h cycle_activitycycles_no_execute event a3h umask 04h cmask 04h cycle_activitystalls_ldm_pending event a3h umask 06h cmask 06h
under a complex set of internal timing conditions and system events software using the intel tsx transactional synchronization extensions instructions may result in unpredictable system behavior
if the vr voltage regulator reports a high temperature condition the processor will limit the ratio on all domains coregraphicsring to their respective maximum non turbo ratios when the thermal condition is no longer present its expected that the processor should release this constraint and allow the domains operate in their turbo region due to this erratum if the thermal event ends when the processor is in package c6 or deeper the constraint will not be removed
when all ia cores in the processor are running but not executing avx instructions and the processor is not constrained by pl1pl2 power limits or thermal limits the cores should be able to operate at the 4c turbo frequency due to this erratum the processor may limit core frequency under these conditions as much as several bins below the 4c turbo frequency
workloads that attempt concurrent operation of cores and graphics in their respective turbo ranges under certain conditions may result in a system hang
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
due to this erratum embedded dram refresh requirements may be violated for some configurations leading to memory errors
under a complex set of conditions interactions between multiple locked operations sharing certain low order address bits and data accesses that span a 4kbyte boundary may result in a processor internal timeout machine check ia32_mci_statusmcacod  0x0400
if while intel hyperthreading technology is enabled the ia32_fixed_ctr0 msr 309h is enabled by setting bits 0 andor 1 in the ia32_perf_fixed_ctr_ctrl msr 38dh before setting bit 32 in the ia32_perf_global_ctrl msr 38fh then ia32_fixed_ctr0 may over count by up to 32
the performance monitor event uops_executed event b1h umask 01h counts the number of uops executed each cycle however due to this erratum when using intel hyperthreading technology the uops may not be assigned to the correct logical processor
execution of a 64 bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
machine check errors system hangs or other unpredictable system behavior may occur when operating at turbo frequencies above 40 ghz
in a specific scenario when the processor graphics exits rc6 and a processor core exits c6 at the same time the system may become unresponsive or the video may become distorted
when the processor attempts to receive data on the edp aux bus the impedance seen by the displays aux bus drivers will be significantly below the vesa edp embedded displayport specifications requirement for the vauxrx edp auxiliary channel input impedance
the performance monitoring events offcore_response events b7h and bbh should count uncore responses matching the requestresponse configuration specified in msr_offcore_rsps 1a6h and 1a7h respectively for coreoriginated requests however due to this erratum corewb bit 3 pf_l3_data_rd bit 7 pf_l3_rfo bit 8 pr_l3_code_rd bit 9 split_lock_uc_lock bit 10 and streaming_stores bit 11 request types may undercount
if vm exit occurs from a guest with primary processorbased vmexecution control activate secondary controls set to 0 and the secondary processorbased vm execution control enable vpid set to 1 then after a later vm entry with vpid fully enabled activate secondary controls and enable vpid set to 1 the processor may use stale linear address translations
an iret instruction that results in a task switch by returning from a nested task does not serialize the processor contrary to the software developers manual vol 3 section titled serializing instructions
bit 38 of ia32_misc_enable msr 1a0h is turbo mode disable on processors that support intel dynamic acceleration due to this erratum that bit may be incorrectly treated as reserved attempting to set turbo mode disable results in a gp general protection exception even when it reads as 1
a corrected error may be logged in ia32_mci_status with the threshold based error field bits5453 indicating yellow status 10b although the part is not above the threshold
the peci platform environmental control interface 31 specifications operating frequency range is 02 mhz to 2 mhz due to this erratum peci may be unreliable when operated above 1 mhz
if the virtualize apic accesses vmexecution control is 1 a 256bit vgatherqps with an element that maps to the apicaccess page may use incorrect addresses to load other elements
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
upon exiting package c7 the following uncore performance monitoring msrs may be cleared to zero msr_ unc _perf_global_ctrl 391h msr_ unc _perf_global_status 392h msr_ unc _perf_fixed_ctrl 394h msr_ unc _perf_fixed_ctr 395h
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
the pcie base specification requires every downstream port that supports link speeds greater than 50 gts to support dll data link layer link active reporting however the pcie ports do not support dll link active reporting
if a pcie link is established then disabled and the link partners advertised speeds are changed while the link is disabled the link may fail to correctly negotiate link speed when it is reenabled
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
a corrected internal parity error ia32_mc0_statusmcacod0005h and ia32_mc0_statusmscod000fh msr 401h bits 150 and bits 3116 respectively may cause a system hang
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
on certain processors when the graphics device transitions among active power states in response to dynamic power demand the graphics device may become unresponsive
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect

the memory atretirement performance monitoring events listed below may produce incorrect results when a performance counter is configured in osonly or usronly modes bits 17 or 16 in ia32_perfevtselx msr counters with both os and usr bits set are not affected by this erratum
the execution of an x87 store instruction which causes a pe precision exception to be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod  0150h and ia32_mci_statusmscod  000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility pebs extension however due to this erratum load latency facility may stop counting load instructions when intel hyperthreading technology is enabled
due to this erratum on processors that do not support intel tsx intel transactional synchronization extensions cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits 6261 are equal to bit 47
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
an exceptioninterrupt event should be transparent to the lbr last branch record   bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
this erratum is regarding the case where paging structures are modified to change a  linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
a single data translation look aside buffer dtlb  error  can  incorrectly  set  the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
in general a pebs record should be generated on the first count of the event after the counter has overflowed  however  ia32_debugctl_msrfreeze_while_smm  msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if 1a performance counter overflowed before an smi 2a pebs record has not yet been generated because another count of the event has not occurred 3the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction  when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
apic advanced programmable interrupt controller may not update the esr error  status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if cr0cd1 the mtrrs and pat should be ignored and the uc memory type should be used for all memory accesses due to this erratum a logical processor in vmx operation will operate as if cr0cd0 even if that bit is set to 1
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
when a pcie root ports receiver is in receiver l0s power state and the port initiates a recovery event it will issue training sets to the link partner the link partner will respond by initiating an l0s exit sequence prior to transmitting its own training sets the link partner may transmit a tlp transaction layer packet request due to this erratum the root port may not acknowledge the tlp request
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
if the processor is directed to enter pcie pollingcompliance at 50 gts or 80 gts transfer rates it should use the link control 2 compliance presetdeemphasis field bits 1512 to determine the correct deemphasis level due to this erratum when the processor is directed to enter pollingcompliance from 25 gts transfer rate it retains 25 gts deemphasis values
due to this erratum if a link partner transitions to rxl0s state within 20 ns of entering l0 state the pcie controller may incorrectly log an error in correctable error statusreceiver error status field bus 0 device 2 function 0 1 2 and device 6 function 0 offset 1d0h bit 0
due to this erratum during pcie link down configuration unused lanes may report a correctable error detected in bus 0 device 1 function 02 and device 6 function 0 offset 158h bit 0
the pcie base specification requires the upstream component to maintain the pcie link at the target link speed or the highest speed supported by both components on the link whichever is lower pcie root port will not initiate the link speed change without being triggered by the software when the root port maximum link speed is configured to be 50 gts system bios will trigger the link speed change under normal boot scenarios however bios is not involved in some scenarios such as link disablere enable or secondary bus reset and therefore the speed change may not occur unless initiated by the downstream component this erratum does not affect the ability of the downstream component to initiate a link speed change all known 50gbscapable pcie downstream components have been observed to initiate the link speed change without relying on the root port to do so
x87 instructions that trigger mf normally service interrupts before the mf  due to   this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
normally data breakpoints matches that occur on a mov ss rm or pop ss will not  cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
on a processor pcie controller configuration in which two or more controllers receive concurrent atomic transactions a pcie controller may experience starvation which eventually can lead to a completion timeout
after a uc uncorrected error is logged in  the  ia32_mc0_status  msr  401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
the pcie controller supports hardware autonomous speed change capabilities due to  this erratum the pcie controller may initiate speed change while in the dl_init state which may prevent link training for certain pcie devices
when the pfo primary fault overflow field bit 0 in the vtd fsts fault status register is set to 1 further faults should not generate an interrupt due to this erratum further interrupts may still occur
due to this erratum uncorrectable internal parity error reports with an ia32_mc2_statusmcacod bits 150 value of 0005h and an ia32_mc2_statusmscod bits 3116 value of 0004h may incorrectly set the ia32_mc2_statusover flag bit 62 indicating an overflow even when only a single error has been observed
the performance monitor events other_assistsavx_to_sse event c1h umask   08h and other_assistssse_to_avx event c1h umask 10h incorrectly increment and over count when an hle hardware lock elision abort occurs
the performance monitor  event  dsb2mite_switchescount  event  abh  umask 01h should count the number of dsb decode stream buffer to mite macro instruction translation engine switches due to this erratum the dsb2mite_switchescount event will count speculative switches and cause the count to be higher than expected
a timed mwait instruction specifies a tsc deadline for execution resumption if a wake event causes execution to resume before the deadline is reached a subsequent timed mwait instruction may incorrectly use the deadline of the previous timed mwait when that previous deadline is earlier than the new one
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for  any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
during rtm restricted transactional memory  operation  when  branch  tracing  is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
the performance  monitoring  events  mem_trans_retiredload_latency  event cdh umask 01h mem_load_retiredl2_hit event d1h umask 02h and mem_uops_retiredlocked event doh umask 20h should count the number of locked loads due to this erratum these events may under count for locked transactions that hit the l2 cache
if an intel tsx transactional abort event occurs during a string instruction the from ip in the lbr last branch record is not correctly reported
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
due to this erratum pmi performance monitoring interrupt may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
the 5th generation intel core i3 useries and select mobile intel pentium and intel celeron processors may incorrectly report support for intel turbo boost technology via cpuid06heax bit 1
the display transmit signals are not correctly sampled by the samplepreload jtag command violating the boundary scan specification ieee 11491
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it   should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
the chap chipset hardware architecture performance counters which do not have a start opcode present in the cmd register will not be preserved across a package c7 or deeper cstate
if cpuideax07h ecx0ebxbmi1 bit 3 is 1 then opcode bytes f3 0f bc should be interpreted as tzcnt otherwise they will be interpreted as rep bsf due to this erratum opcode bytes f3 0f bc may execute as tzcnt even if cpuideax07h ecx0ebxbmi1 bit 3 is 0
a vtd  intel  virtualization technology  for directed io root table  pointer update  that completes followed by a second root table pointer update that also completes without performing a global invalidation of either the contextcache or the iotlb between the two updates may lead to an unexpected dma remapping fault
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
the system may hang when a peer io device uses the peer aperture to directly write into the gmadr graphics memory address range
due this erratum spurious corrected errors may be logged in the ia32_mc0_status register with the valid field bit 63 set the uncorrected error field bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
setting the stop bit bit 4 in a table of physical addresses entry directs the processor to stop intel pt processor trace packet generation when the associated output region is filled the processor indicates this has occurred by setting the stopped bit bit 5 of ia32_rtit_status msr 571h due to this erratum packet generation may stop earlier than expected
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
an hle hardware lock elision transactional region begins with an instruction with the xacquire prefix due to this erratum reads from within the transactional region of the memory destination of that instruction may return the value that was in memory before the transactional region began
due to this erratum package c7 entry may exceed published latencies
intel tsx transactional synchronization extensions instructions are not supported and not reported by cpuid
due this erratum spurious corrected errors may be logged in the mc0_status register with the valid bit 63 set the uncorrected error bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
due to this erratum the performance monitoring feature pdir precise distribution of instructions retired for instr_retiredall event c0h umask 01h will generate redundant pebs precise event based sample records for a counter overflow this can occur if the lower 6 bits of the performance monitoring counter are not initialized or reset to 0 in the pebs counter reset field of the ds buffer management area
workloads that attempt concurrent operation of cores and graphics in their respective turbo ranges under certain conditions may result in a system hang
under certain conditions following a cold boot exiting the first package c6 or deeper c state may hang the system
svm shared virtual memory doorbell registers are incorrectly preserved across package cstates c7 and deeper
values programmed into the fivr ssc fully integrated voltage regulator spread spectrum control mailbox may not result in the expected spread spectrum range
the intel pt modeexec mode packet  execution mode  leaf  pip  paging  information packet and cbr corebus ratio packets are generated at the following psb packet stream boundary event rather than at the time of the originating event as expected
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
the ia32_pmcx msr c1h  c8h generalpurpose performance counters may report inaccurate counts when the associated event selection ia32_perfevtselx msrs 186h  18dh anythread field bit 21 is set and either the os field bit 17 or usr field bit 16 is set but not both set
internally generated processor voltage planes may exhibit unexpected voltage glitches during a package c9c10 exit
use of intel transactional synchronization extensions intel tsx may result in a transactional abort if an abort occurs immediately following a branch instruction an incorrect branch target may be logged in an lbr last branch record or in an intel processor trace intel pt packet before the lbr or intel pt packet produced by the abort
when intel processor trace intel pt is enabled psb packet stream boundary packets may include a pip paging information packet even though the os field bit 2 of ia32_rtit_ctl msr 570h is 0
an ept extended page table  violation that causes a  ve virtualization exception   may not invalidate the guestphysical mappings that were used to translate the guest physical address that caused the ept violation
it is possible for the processor to signal a machine check exception when deep    packages cstates c8 c9 or c10 are entered too frequently typically less than 200us apart the processor will not be able to process the machine check and will hang
the following performance monitor events may significantly overcount when multiple tlb misses happen nearly concurrently itlb_misses event 85h umask 01h 02h 04h 08h 10h dtlb_load_misses event 08h umask 01h 02h 04h 08h 10h dtlb_store_misses event 49h umask 01h 02h 04h 08h 10h page_walker_loads event bch all umasks
some intel processor trace packets should be issued only between tippge target ip packetpacket generation enable and tippgd target ip packetpacket generation disable packets due to this erratum when a tippge packet is generated it may be preceded by a psb packet stream boundary that incorrectly includes fup flow update packet and modeexec packets
bits 6348 of the ia32_rtit_cr3_match msr 0572h are incorrectly treated as reserved and therefore writing nonzero values to them will cause a gp
if the apic isr inservice register indicates inprogress interrupts at core c6    entry a lower priority interrupt pending in the irr interrupt request register may be executed after core c6 exit delaying completion of the higher priority interrupts service routine
display configuration is not properly restored after a package c8c10 exit
due to this erratum lpddr3 memory subsystems may not successfully complete training
aggressive ramp down of vcc voltage may result in insufficient voltage to meet power demand
the performance monitor event offcore_requests_outstanding event 60h any umask value should count the number of offcore outstanding transactions each cycle due to this erratum the counts may be higher or lower than expected
if xbegin is executed immediately after an execution of mov to ss or pop ss a transactional abort occurs and the logical processor restarts execution from the fallback instruction address if execution of the instruction at that address causes a debug exception bits 30 of the dr6 register may contain an incorrect value
when a uc uncorrected error is logged in the ia32_mc0_status  msr 401h  corrected errors will continue to update the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated after a uc error is logged
the processor may not fully honor all ltr latency tolerance register values when selecting the package cstate level
a large frequency or voltage change for the llc last level cache and associated logic can lead to unpredictable system behavior
execution of a 64 bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
the processor may not run reliably when operating at turbo frequencies above 32 ghz
due to this erratum platform state s3 entry with a ddr1600 memory subsystem may cause the ddr reference clock when configured at 100 mhz to briefly switch to 133 mhz resulting in unpredictable system behavior
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
in a specific scenario when the processor graphics exits rc6 and a processor core exits c6 at the same time the system may become unresponsive or the video may become distorted
when the processor attempts to receive data on the edp aux bus the impedance seen by the displays aux bus drivers will be significantly below the vesa edp embedded displayport specifications requirement for the vauxrx edp auxiliary channel input impedance
under a complex set of microarchitectural conditions an instruction fetch dynamic power savings feature may cause the processor to execute unexpected instructions
the hdcp highbandwidth digital content protection key may be incorrect after a package c8 or deeper sleep state exit
an outstanding read from an ia core to the de display engine that is coincident with an ia core ratio change may result in a system hang
the memory controllers ddr clock when operating at ddr1600 frequencies and at elevated temperatures may not operate within tolerance and may lead to unpredictable system behavior
certain processors may not reliably exit package c9c10 states
the pl3 mechanism imposes peak frequency  constraints  on  all  domains  core graphics and ring when a current spike that might cause accelerated battery aging is detected due to this erratum these constraints may not be released when the current spike has ended
operating one or more of the ia intel architecture cores at a frequency significantly higher than the ring operating frequency may cause unpredictable system behavior intel has observed this erratum to occur when the software explicitly requests the ring and ia cores to operate at different frequencies or when ia cores are transitioning in and out of cstates with the ia cores operating at frequencies much higher than the ring frequency exposure to this erratum may be increased when the ia cores run at or close to p0 pstate frequency
certain complex internal conditions and timing relationships during clock gating of the  io subsystem may cause a system hang and may lead to a timeout machine check with an ia32_mci_statusmcacod of 0400h
intel txt trusted  execution technology uses tpm trusted  platform module 20   draft specification handles indices aux 01800003 ps 01800001  and  po 01400003 those handles conflict with the released tcg trusted computing group registry of reserved tpm 20 handles and localities version 10 revision 1
under certain conditions entry into a package c7 or deeper cstate may result in a system hang on the subsequent cstate exit
due to this erratum the page_walker_loads event bch performance monitoring event may overcount or may undercount
when exiting from package c7c10 the system may hang
due to this erratum the local memory readload retired perfmon events listed below may undercount
under certain internal timing conditions while executing a complex sequence of locked instructions the system may hang
if vm exit occurs from a guest with primary processorbased vmexecution control activate secondary controls set to 0 and the secondary processorbased vm execution control enable vpid set to 1 then after a later vm entry with vpid fully enabled activate secondary controls and enable vpid set to 1 the processor may use stale linear address translations
an iret instruction that results in a task switch by returning from a nested task does  not serialize the processor contrary to the software developers manual vol 3 section titled serializing instructions
if lbr last branch records bts branch trace store  or  btm  branch  trace messages are enabled in the ia32_debugctl msr 1d9h an attempt to enable intel pt intel processor trace in ia32_rtit_ctl msr 570h results in a gp general protection exception note that the btm enable bit in ia32_debugctl msr is named tr correspondingly if intel pt was previously enabled when an attempt is made to enable lbr bts or btm a gp will occur
when package c6 or deeper cstates are enabled certain microarchitectural conditions during a cstate exit may cause the processor to hang
a wrmsr to ia32_rtit_ctl msr 0570h that sets traceen bit 0 and clears branchen bit 13 will cause a gp general protection exception
intel virtualization technology for directed io specification specifies setting the fpd fault processing disable field in the context or extendedcontext entry of iommu to mask recording of qualified dma remapping faults for dma requests processed through that context entry due to this erratum the iommu unit for processor graphics device may record dma remapping faults from processor graphics device bus 0 device 2 function 0 even when the fpd field is set to 1
the iommu unit for processor graphics prefetches context or extendedcontext   entries to improve performance due to the erratum the iommu unit may report spurious dma remapping faults if prefetching encounters a context or extended context entry which is not marked present
the processor should ensure internal graphics  configuration  is  restored  during  a package c7 or deeper exit event due to this erratum some internal graphics configurations may not be correctly restored
on processors where the use of intel pt intel processor trace  and lbrs last   branch records are mutually exclusive reads of the lbr msrs should return 0s and writes to them should be ignored due to this erratum reads and writes to the lbr msrs while ia32_rtit_ctl msr 570h traceen bit 0 is 1 will result in a gp
the processor should ensure internal graphics  configuration  is  restored  during  a package c7 or deeper exit event due to this erratum some internal graphics configurations may not be correctly restored
execution of an xbegin instruction while the monitor trap flag vmexecution control  is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
multiple code fetches in quick succession that generate page walks may result in a  system hang causing an internal timer error an mcacod value of 0400h logged into ia32_mci_status bits 150
a performance monitoring counter may generate a pebs  precise  event  based  sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
the performance monitoring events  offcore_response  events  b7h  and  bbh should count uncore responses matching the requestresponse configuration specified in msr_offcore_rsp_0 1a6h and msr_offcore_rsp_1 1a7h for core originated requests however due to this erratum response type no_supp bit 17 may be reported instead of local bit 26 for request types dmnd_rfo bit 1 and pf_rfo bit 5
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
due to this erratum an uncorrectable internal parity error with an ia32_mc0_statusmcacod bits 150 value of 0005h may incorrectly set the ia32_mc0_statusover flag bit 62 indicating an overflow when a single error has been observed
under a complex series of microarchitectural events while running hyperthreading technology a correctable internal parity error or unpredictable system behavior may occur
performance monitoring counters configured to count only os or only usr events by   setting exactly one of bits 16 or 17 in ia32_perfevtselx msrs 186h18dh may not count for a brief period during the transition to a new cpl
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
after a fault due to a failed pebs processor event based sampling or bts branch   trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
the memory atretirement performance monitoring events listed below may produce incorrect results when a performance counter is configured in osonly or usronly modes bits 17 or 16 in ia32_perfevtselx msr counters with both os and usr bits set are not affected by this erratum the list of affected memory atretirement events for bdw is as follows mem_uops_retiredstlb_miss_loads event d0h umask 11h mem_uops_retiredstlb_miss_stores event d0h umask 12h mem_uops_retiredlock_loads event d0h umask 21h mem_uops_retiredsplit_loads event d0h umask 41h mem_uops_retiredsplit_stores event d0h umask 42h mem_load_uops_retiredl2_hit event d1h umask 02h mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl1_miss event d1h umask 08h mem_load_uops_retiredl2_miss event d1h umask 10h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_retiredhit_lfb event d1h umask 40h mem_load_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h
due to this erratum the supplier may be misattributed to unknown and the following events may undercount mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h
the execution of an x87 store instruction which causes a pe precision exception to  be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod  0150h and ia32_mci_statusmscod  000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
the ia32_pmc47 msr c5hc8h generalpurpose performance monitoring counters  will not count when the associated cpl filter selection in ia32_perfevtselx msrs 18ah18dh usr field bit 16 is set while os field bit 17 is not set
due to this erratum on processors that do not support intel tsx intel transactional synchronization extensions cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
a cap commandaddress parity error that occurs on the command to direct dram to enter selfrefresh may cause the dram to fail to enter selfrefresh although the processor enters packagec6
due to this erratum pcie lnerrsts device 0 function 0 offset 258h bits 30 may log false lanebased correctable errors
in memory mirror mode dataerrorchunk bits ia32_mc7_misc register msr41fh bits 6160 may not correctly report the chunk containing an error
intel rdt resource director technology mbm memory bandwidth monitoring does not count cacheable writeback traffic to local memory this will result in the rdt mbm feature under counting total bandwidth consumed
if intel upi ultra path interconnect is configured for slow mode operation initialization aborts may occur
if the pcie port receives a tlp that triggers both a malformed_tlp error and an ecrc_tlp error the processor should only log an ecrc_tlp error however the processor logs both errors
under complex microarchitectural conditions short loops of less than 64 instructions that use ah bh ch or dh registers as well as their corresponding wider register eg rax eax or ax for ah may cause unpredictable system behavior this can only happen when both logical processors on the same physical processor are active
the processors iio does not return credits back to the pcie link in case of endtoend crc ecrc errors
a pcie port may not reach l0 state if a single polarity of a pcie differential data pair is disconnected
with upi crc32 rolling mode enabled upi rx crc errors may be seen
the individual iodc io directory cache entry 0 cannot be masked using ha_coh_cfg_1 bus 1 devices 118 functions 70 offset 0x11c bit 0 therefore entry 0 is always allocated
when emca2 is enabled to cause an msmi due to a 3strike event a pulsed caterr and msmi event may both be observed on the pins
machine check banks 9 10 and 11 may not signal cmci after the first corrected error is reported in the bank even if the mci_status register has been cleared
a upi phy reset and rx crc error on same packet are causing the retry sequence to abort leading to a upi phy reinitialization
the ddrio bus 3 device 1922 function 67 and bus 0 device 2023 function 4567 and pcu bus 3 device 31 functions 02 do not implement the svid offset 0x2c and sdid offset 0x2e csrs
when performing a bios broadcast register read to ddrio a value of 0 is always returned
under complex microarchitectural conditions the cmt cache monitoring technology counters may overcount
under certain microarchitectural conditions involving heavy memory traffic  cachelines may fill outside the allocated l3 capacity bitmask cbm associated with the current class of service clos
the mbm memory bandwidth monitoring counters will increment for reads but will not increment for memory writes the performance counters in the imc integrated memory controller are not affected and can report the read and write memory bandwidths
the pcie corrected error counter feature does not take the overflow bit in the count bit 15 of xpcorerrcounter bus rootbus device 0 function 0 offset 4d0h into account when comparing the count to the threshold in xpcorerrthresholderror_threshold therefore you end up with another interrupt once the counter has rolled over and hit your threshold  0x8000
when vppcl bit 0 of vpp_reset_mode bus 1 device 30 function 5 offset 0xf0 bit is set to 0 and the cpu is undergoing reset flow while pcie hotplug operation is in process the vpp virtual pin port hotplug commands may stop responding
intel quickdata technology local and remote crc store operations may result in a dma channel hang when the crc store transfer size is less than 32 bytes and the destination offset is not dwordaligned
when hotplug surprise is set in the slot capabilities register bus rootbus dev 13 function 0 offset a4h bit 5 the presence detect state and presence detect change in the slot status register bus rootbus dev 13 function 0 offset a2h incorrectly ignores the outofband presence detect mechanism and only reflects the physical layer inband presence detect mechanism
the processor may incorrectly configure the processors vccp rail voltage
the patrol scrub starting address registers scrubaddresshi bus 2 devices 12 10 function 0 offset 910 and scrubaddresslo bus 2 devices 12 10 function 0 offset 90c should indicate when the first memory address from which patrol logic should start scrubs when scrubctlstartscrub bus 2 devices 12 10 function 0 offset 914 bit 24is set due to this erratum after patrol is disabled if the patrol scrub engine is reenabled in system address mode with scrubctlstartscrub set the patrol scrubbing engine may ignore the starting address registers reenabling patrol after s3 exit or other warm reset event is not impacted by this
the performance monitoring event that counts intel thermal monitor 2 enhanced intel speedstep technology based transitions may have inaccurate results
the performancemonitoring event that counts the number of instructions decoded may have inaccurate results
the timestamp counter is a 64bit counter that is read in two 32bit chunks the counter incorrectly advances and therefore the two chunks may go out of synchronization causing the read timestamp counter rdtsc instruction to report the wrong timestamp counter value
code segment limit violation may occur on 4 gigabyte limit check when the code stream wraps around in a way that one instruction ends at the last byte of the segment and the next instruction begins at 0x0
fst instruction combined with numeric and null segment exceptions may cause general protection faults to be missed and fp linear address fla mismatch
with smbase being relocated to a nonaligned address during smm entry the cs can be improperly updated which can lead to an incorrect smm handler
an instruction with lock data access that spans across two pages may given some rare internal conditions hang the system
processor clock modulation may be controlled via a processor register ia32_therm_control or via the stpclk signal while the processor clock is constantly being actively modulated at 125 and 25 duty cycles and there is a   pending unmasked fp exception es pending if you attempt a fp load or mmx technology mov instruction and the load has an longer than typical latency the processor can enter a livelock
write cycles of wc memory type do not selfsnoop this may result in data inconsistency  if the addresses of the wc data are aliased to wb memory type memory which has been cached in such a case the internal caches will not be updated with the wc data sent on the system bus
performance monitoring event that counts floating point compare exceptions may have inaccurate results
the reporting of data breakpoints on either fp or mmx technology loads is dependent upon the code faulting behavior prior to the execution of the load if there is a fault pending prior to the execution of the load and fp exceptions are enabled there is a chance that data breakpoint on successive fpmmx technology loads may be reported twice
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled  debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
sysenter and sysexit instructions may write incorrect rpl in the fp code segment selector fcs as a result of this the rpl field in fcs may be corrupted
this erratum has not been observed with commercially available software
the rdmsr and wrmsr instructions allow reading or writing of msrs model specific registers based on the index number placed in ecx the processor should reject access to any reserved or unimplemented msrs by generating gp0 however there are some invalid msr addressers for which the processor will not generate gp0 this erratum has not been observed with commercially available software
in some rare cases fault information generated as the result of instruction execution may be incorrect the result is an incorrect fp stack entry
the performance monitoring available bit in the miscellaneous processor features msr ia32_misc_enables7 was defined so that when it is cleared to a 0 rdmsrwrmsrrdpmc instructions would return all zeros for reads of and prevent any writes to performance monitoring related msrs currently it is possible to read from or write to performance monitoring related msrs when the performance monitoring available bit is cleared to a 0
a move mov to control register cr instruction where control register is cr0 cr3 or cr4 may generate a breakpoint report
under certain conditions as described in the software developers manual section outoforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
if the data from an fxsave stos or movs instruction crosses a page boundary from wb to uc memory type and this instruction is immediately followed by a second instruction that also issues a store to memory the final data stores from both instructions may occur in the wrong order
the processor is designed to signal an unrecoverable machine check exception mce as a consistency checking mechanism under a complex set of circumstances  involving multiple speculative branches and memory accesses there exists a one cycle long window in which the processor may signal a mce in the instruction fetch unit ifu because instructions previously decoded have been evicted from the ifu the one cycle long window is opened when an opportunistic fetch receives a partial  hit on a previously executed but not as yet completed store resident in the store buffer the resulting partial hit erroneously causes the eviction of a line from the ifu at a time when the processor is expecting the line to still be present if the mce for this particular ifu event is disabled execution will continue normally
in some rare cases popf and popfd instructions that set the trap flag tf bit in the eflags register causing the processor to enter singlestep mode may cause unpredictable processor behavior
the performance event counter returns an incorrect value on l2_lines_in event emon event 24h when the l2 cache is disabled
following a task switch to a double fault handler that was initiated while the processor was in virtual8086 vm86 mode the vm bit will be incorrectly cleared in eflags
the bits l03 and g03 enable breakpoints local to a task and global to all tasks respectively if one of these bits is set a breakpoint is enabled corresponding to the addresses in the debug registers dr0dr3 if at least one of these breakpoints is enabled any of these registers are disabled ie ln and gn are 0 and rwn for the disabled register is 00 indicating a breakpoint on instruction execution normally an instruction fetch will not cause an instructionbreakpoint fault based on a match with the address in the disabled registers however if the address in a disabled register matches the address of a code fetch which also results in a page fault an instruction breakpoint fault will occur
an sse or sse2 streaming store that results in a selfmodifying code smc event may cause unexpected behavior the smc event occurs on a full address match of code contained in l1 cache
a page whose pat memory type is uswc while the relevant mtrr memory type is uc the consolidated memory type may be treated as uc rather than wc as specified in ia32 intel architecture software developers manual
an ltr instruction may result in a system hang if all the following conditions are met   invalid data selector of the tr task register resulting with either gp general protection fault or np segment not present fault gdt global descriptor table is not 8bytes aligned data bp breakpoint is set on cache line containing the descriptor data when this erratum occurs the memory page may be as uc rather than wc this may have a negative performance impact
a load from memory type uswc may get its data internally forwarded from a pending store as a result the expected load may never be issued to the external bus
initializing the floating point state with either finit or fnint may not clear the x87 fpu operand data pointer offset and the x87 fpu operand data pointer selector both fields form the fpudatapointer saving the floating point environment with fstenv fnstenv or floating point state with fsave fnsave or fxsave before an intervening fp instruction may save uninitialized values for the fpudatapointer
an fstp instruction with a pdepte page directory entrypage table entry ad bit update followed by user mode access fault due to a code fetch to a page that has supervisor only access permission may result in erroneously setting a valid bit of an fp stack register the fp top of stack pointer is unchanged
if during the execution of a hlt instruction an external snoop causes an eviction from the instruction fetch unit ifu instruction cache the processor may on exit from the hlt state erroneously read stale data from the victim cache
invalid entries in the pagedirectorypointertable register pdptr that have the reserved bits set to one may cause a general protection gp exception
init may not flush a tlb entry when  the processor is in protected mode with paging enabled and the page global enable flag is set pge bit of cr4 register g bit for the page table entry is set tlb entry is present in tlb when init occurs
software that implements memory aliasing by having more than one linear addresses mapped to the same physical page with different cache types may cause the system to hang or to report a machine check exception mce this would occur if one of the addresses is noncacheable and used in a code segment and the other is a cacheable address if the cacheable address finds its way into the instruction cache and the noncacheable address is fetched in the ifu the processor may invalidate the non cacheable address from the fetch unit any microarchitectural event that causes instruction restart will be expecting this instruction to still be in the fetch unit and  lack of it will cause a system hang or an mce
a small window of opportunity exists where code fetches interleaved between different memory types may cause a machine check exception a complex set of microarchitectural boundary conditions is required to expose this window
when split io instruction writes occur adjacent to a retry of a local apic end of interrupt eoi request by the chipset a livelock condition may result the required sequences of events are  the processor issues a local apic eoi message the chipset responds with a retry because its downstream ports are full it expects the processor to return with the same eoi request the processor issues a split io write instruction instead the chipset responds with a retry because it expected the apic eoi   the processor insists the split io write instruction must be completed and issues write instruction again
memory accesses to flat data segments base  00000000h that occur above the 4 g limit 0ffffffffh may not signal a gp fault
performance monitoring for event cfh normally increments on saturating simd instruction retired regardless of dr7 programming if the linear address of a retiring memory store movdmovqmovntq instruction executed matches the address in dr3 the cfh counter may be incorrectly incremented
during the execution of an nmi interrupt handler if shutdown occurs followed by the init signal being triggered the processor will attempt initialization but fail soft reset
all performance monitoring counters in the ranges 21h3dh and 60h7fh may have inaccurate results up to 7
when the processor encounters a cs code segment limit violation a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced because of this erratum if rsm resume from system management mode returns to execution flow where a cs limit violation occurs the gp fault may be serviced before a higher priority interrupt or exception eg nmi nonmaskable interrupt debug breakdb machine check mc etc
with respect to the retirement of instructions stores to the uncacheable memory based apic register space are handled in a nonsynchronized way for example if an instruction that masks the interrupt flag eg cli is executed soon after an uncacheable write to the task priority register tpr that lowers the apic priority the interrupt masking operation may take effect before the actual priority has been lowered this may cause interrupts whose priority is lower than the initial tpr but higher than the final tpr to not be serviced until the interrupt enabled flag is finally set ie by sti instruction interrupts will remain pending and are not lost
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
an external a20m pin if enabled forces address bit 20 to be masked forced to zero to emulates realaddress mode address wraparound at 1 megabyte however if all of the following conditions are met address bit 20 may not be masked  paging is enabled a linear address has bit 20 set the address references a large page a20m is enabled
if any of the below circumstances occur it is possible that the load portion of the instruction will have executed before the exception handler is entered  if an instruction that performs a memory load causes a code segment limit violation if a waiting floatingpoint instruction or mmx instruction that performs a memory load has a floatingpoint exception pending if an mmx or sse instruction that performs a memory load and has either cr0em1 emulation bit set or a floatingpoint topofstack fp tos not equal to 0 or a dna exception pending
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect  note this issue would only occur when one of the 3 above mentioned debug support facilities are used
when the result of a floatingpoint operation is not exactly representable in the destination format 13 in binary form for example an inexactresult precision exception occurs when this occurs the pe bit bit 5 of the fpu status word is normally set by the processor under certain rare conditions this bit may not be set when this rounding occurs however other actions taken by the processor invoking the software exception handler if the exception is unmasked are not affected this erratum can only occur if the floatingpoint operation which causes the precision exception is immediately followed by one of the following instructions fst m32real fst m64real fstp m32real fstp m64real fstp m80real fist m16int fist m32int fistp m16int fistp m32int fistp m64int  note that even if this combination of instructions is encountered there is also a dependency on the internal pipelining and execution state of both instructions in the processor
when in v86 mode if a mov instruction is executed tofrom debug register a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
according to the processor specification attempting to load a null segment selector into the cs and ss segment registers should generate a general protection fault gp although loading a null segment selector to the other segment registers is allowed the processor will generate an exception when the segment register holding a null selector is used to access memory however the sysenter instruction can implicitly load a null value to the ss segment selector this can occur if the value in sysenter_cs_msr is between fff8h and fffbh when the sysenter instruction is executed this behavior is part of the sysentersysexit instruction definition the content of the system_cs_msr is always incremented by 8 before it is loaded into the ss this operation will set the null bit in the segment selector if a null result is generated but it does not generate a gp on the sysenter instruction itself an exception will be generated as expected when the ss register is used to access memory however the sysexit instruction will also exhibit this behavior for both cs and ss when executed with the value in sysenter_cs_msr between fff0h and fff3h or between ffe8h and ffebh inclusive
dr6 bs single step bit 14 flag may be incorrectly set when the tf trap flag bit 8 of the eflags register is set and a db debug exception occurs due to one of the following  dr7 gd general detect bit 13 being bit set int1 instruction code breakpoint
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values ie residual stack data as a result of processing the fault
when an unaligned access is performed on paging structure entries accessing a portion of two different entries simultaneously the processor may live lock
the invlpg instruction may not completely invalidate translation lookaside buffer tlb entries for large pages 2m4m when both of the following conditions exist  address range of the page being invalidated spans several memory type range registers mtrrs with different memory types specified invlpg operation is preceded by a page assist event page fault pf or an access that results in either a or d bits being set in a page table entry pte
if code segment limit is set close to the end of a code page then due to this erratum the memory page access bit a bit may be set for the subsequent page prior to general protection fault on code segment limit
when the processor is going into shutdown due to an rsm inconsistency failure eflags cr0 and cr4 may be incorrect in addition the exf4 signal may still be asserted this may be observed if the processor is taken out of shutdown by nmi
according to intel 64 and ia32 intel architecture software developers manual volume 3a methods of caching available wp write protected stores should drain the wc write combining buffers in the same way as uc uncacheable memory type stores do due to this erratum wp stores may not drain the wc buffers
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
the processor may temporarily hang in an hyperthreading technology enabled system if one logical processor executes a synchronization loop that includes one or more locks and is waiting for release by the other logical processor if the releasing logical processor is executing instructions that are within the detection range of the self modifying code smc logic then the processor may be locked in the synchronization loop until the arrival of an interrupt or other event
when a page is being accessed as either uncacheable uc or write combining wc and wb under certain bus and memory timing conditions the system may loop in a continual sequence of uc fetch implicit writeback and request for ownership rfo retries
when a floating point load which splits a 64byte cache line gets a floating point stack fault and a data breakpoint register maps to the high line of the floating point load internal boundary conditions exist that may prevent the data breakpoint from being captured
the mov cr3 instruction should perform reserved bit checking on the upper unimplemented address bits this checking range should match the address width reported by cpuid instruction 0x8000008 this erratum applies whenever pae is enabled
when transitioning from a 64bit host environment to a 32bit guest environment via a vmentry internal conditions in a processor with hyper threading enabled may cause a speculative pagetable walk to be prematurely terminated resulting in a processor hang and the assertion of ierr
if an x87 data instruction has been executed with a noncanonical effective address fxsave may store that noncanonical fp data pointer fdp value into the save image an fxrstor instruction executed with 64bit operand size may signal a general protection fault gp if the fdp or fp instruction pointer fip is in noncanonical form
in the event that a push esp instruction that faults is executed in compatibility mode the processor will incorrectly zero upper 32bits of rsp
if the page table base address included in the page map level4 table page directory pointer table pagedirectory table or page table exceeds the physical address range supported by the platform eg 36bit and it is less than the implemented address range eg 40bit the processor does not check if the address is invalid
if an fp instruction generates an unmasked exception with the eflagstf1 it is possible for external events to occur including a transition to a lower power state when resuming from the lower power state it may be possible to take the single step trap before the execution of the original fp instruction completes
if the btspebs buffer is defined such that the difference between btspebs buffer base and btspebs absolute maximum is not an integer multiple of the corresponding record sizes btspebs absolute maximum is less than a record size from the end of the virtual address space the record that would cross btspebs absolute maximum will also continue past the end of the virtual address space a btspebs record can be written that will wrap at the 4g boundary ia32 or 264 boundary em64t mode and write memory outside of the btspebs buffer
under limited circumstances while executing a rep movsstos string instruction with fast strings enabled it is possible for the value in cr2 to be changed as a result of an interim paging event normally invisible to the user any higher priority architectural event that arrives and is handled while the interim paging event is occurring may see the modified value of cr2
in ia32e mode using intel em64tenabled processors executing a repeating string instruction with the iteration count greater than or equal to 232 and a pending event may cause the rep stosmovs instruction to live lock and hang
on a processor supporting intel em64t if an instruction fetch wraps around the 4g boundary in compatibility mode the 64bit value of lip in the bts memory record will be incorrect upper 32 bits will be set to ffffffffh when they should be 0 if a pebs event occurs on an instruction whose last byte is at memory location ffffffffh the 64bit value of lip in the pebs record will be incorrect upper 32 bits will be set to ffffffffh when they should be 0
when using processors supporting intel virtualization technology and configured as dual or singleprocessorcapable ie not multiprocessor capable the processor should perform address checks using a maximum physical address width of 36 instead these processors will perform address checks using a maximum physical address width of 40
in a system supporting intel virtualization technology and intel extended memory 64 technology if the cr8store exiting bit in the processorbased vmexecution control field is set and the use tpr shadow bit is not set a mov from cr8 instruction executed by a virtual machine extensions vmx guest that causes a vm exit may generate an unexpected memory access
in systems supporting intel virtualization technology when machine checks are encountered during vm entryexit transitions the processor is expected to respond with a vm exit if a machine check occurs during vm entry or abort if a machine check occurs during vm exit as a result of this erratum when machine checks occur during vm entryexit transitions the processor will attempt to service the machine check which may lead to ierrshutdown or execution of the machine check handler dependent on the cr4mce setting
in a system supporting intel virtualization technology the processor may service a pended vm exit prior to completely exiting out of a low power state when the following sequences of events occur chipwide power down transition occurs and vm exit due to a vmlaunch vmresume sti popf popfd or iret instruction is pended and chipwide power down transition is interrupted by an intarget probe event
in a system supporting intel virtualization technology and intel em64t the blocking by sti bit of the interruptibilitystate field may be saved as 1 rather than 0 this erratum may occur when a sti instruction is executed directly prior to a mov to cr8 which results in a vm exit due to a reduction of the tpr shadow value below the tpr threshold
if two correctable l2 cache errors are detected in close proximity to each other a livelock may occur as a result of the processor being unable to resolve this condition
when a pending fp exception is ready to be taken a vm exit due to smi or init may not clear blocking by sti andor blocking by mov ss bits correctly in virtualmachine control structure vmcs as expected
if a system deasserts stpclk at a 25 or less duty cycle and the processor thermal control circuit tcc ondemand clock modulation is active the processor may hang this erratum does not occur under the automatic mode of the tcc
in a system supporting intel virtualization technology the processor may incorrectly vm exit under the following conditions interruptwindowexiting vmexecution control is set rflagsif1 chipwide powerdown transition requests occur when the processor is in waitforsipi or shutdown states
the lastexception record msrs lers may not get updated when machine check exceptions occur
incorrect msr data in bits 6332 may be observed in the following two cases when ecx contains 0xc0000084 and a vm entryexit writes the ia32_cr_lstar msr msr address 0xc0000082 bits 6332 of the data may be zeroed when ecx does not contain 0xc0000084 and a vm entryexit writes the ia32_cr_syscall_flag_mask msr msr address 0xc0000084 bits 6332 of the data may not be zeroed
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
in a system running at the 131 bus ratio rcnt0  addr 28 phase b may report incorrect information
in a system supporting intel virtualization technology executing vmptrld may cause a memory access to an address not referenced by the memory operand
on processors supporting intel virtualization technology executing a vmptrld or a vmread instruction outside of vmx mode may result in a load to an unexpected address
on a failed vmentry vm exit the vmcs pointer may have incorrect value
the bnr signal may not function properly during an enhanced halt or enhanced intel speedstep technology ratio transition
machine check status msrs may incorrectly report the following l2 cache ecc machinecheck errors when cache transactions are inflight and reset is asserted instruction fetch errors ia32_mc2_status with mca error code 153 l2 data write errors ia32_mc1_status with mca error code 145
processors supporting intel virtualization technology can execute vmcall from within the virtual machine monitor vmm to activate dualmonitor treatment of smis and smm due to this erratum if reserved bits are set to values inconsistent with vmx capability msrs vmcall may not vmfail
an external a20m pin if enabled forces address bit 20 to be masked forced to zero to emulates realaddress mode address wraparound at 1 megabyte however if all of the following conditions are met address bit 20 may not be masked paging is enabled a linear address has bit 20 set the address references a large page a20m is enabled
software which is written so that multiple agents can modify the same shared unaligned memory location at the same time may experience a memory ordering issue if multiple loads access this shared data shortly thereafter exposure to this problem requires the use of a data write which spans a cache line boundary
when two enabled mc0mc1 uncorrectable machine check errors are detected in the same bank in the same internal clock cycle the highest priority error will be logged in ia32_mc0_status  ia32_mc1_status register but the overflow bit may not be set
in ia32e mode it is possible to get an alignment check exception ac on the iret instruction even though alignment checks were disabled at the start of the iret this can only occur if the iret instruction is returning from cpl3 code to cpl3 code irets from cpl012 are not affected this erratum can occur if the eflags value on the stack has the ac flag set and the interrupt handlers stack is misaligned in ia32e mode rsp is aligned to a 16byte boundary before pushing the stack frame
in ia32e mode of the intel em64t processor control transfers through a call gate via the local descriptor table ldt that uses a 16byte descriptor the upper 8byte access may wrap and access an incorrect descriptor in the ldt this only occurs on an ldt with a limit0x10008 with a 16byte descriptor that has a selector of 0xfffc
the processor may issue transactions beyond the documented 3 front side bus fsb clocks and up to 6 fsb clocks after reset is asserted in the case of a warm reset a warm reset is where the chipset asserts reset when the system is running
processor front side bus fsb protocolsignal integrity machine checks may be reported if the transactions are initiated or inprogress during a warm reset a warm reset is where the chipset asserts reset when the system is running
in a system supporting intel virtualization technology the nmi blocking bit in the interruptioninformation field in the guest vmcs may be set incorrectly this erratum will happen if a vmexit occurs for a gp fault on an iret instruction due to an eip that violates the segment limit or is non canonical
vmlaunchvmresume instructions may not fail if the value of the host addressspace size vmexit control differs from the setting of ia32_eferlma
in a system supporting hyperthreading technology when one hardware thread is in a continuous loop executing bus locks plus other traffic the other hardware thread may be prevented from acquiring resources to also execute a lock
the processor may generate an unexpected memory access during the wrmsr instruction under certain conditions
some processors with 800 mhz front side bus fsb when used in combination with a motherboard based on the intel 945 chipset may observe fsb bit errors which may result in unpredictable system behavior
if a vm exit occurs while the processor is in ia32e mode and the host addressspace size vmexit control is 0 a vmx abort should occur due to this erratum the expected vmx aborts may not occur and instead the vm exit will occur normally the conditions required to observe this erratum are a vm entry that returns from smm with the ia32e guest vmentry control set to 1 in the smm vmcs and the host addressspace size vmexit control cleared to 0 in the executive vmcs
during system reset there is insufficient time for handshake between ich and gmch lvds logic as a result timing from panel backlight enable going low to lvds data going low tx and timing from lvds data going low to panel vcc enable going low t3 do not match the programmed values panel backlight enable lbklt_en panel vcc enable lvdd_en and lvds data lines go low at the same time
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
when in v86 mode if a mov instruction is executed tofrom a debug registers a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
with respect to the retirement of instructions stores to the uncacheable memory based apic register space are handled in a nonsynchronized way for example if an instruction that masks the interrupt flag for example cli is executed soon after an uncacheable write to the task priority register tpr that lowers the apic priority the interrupt masking operation may take effect before the actual priority has been lowered this may cause interrupts whose priority is lower than the initial tpr but higher than the final tpr to not be serviced until the interrupt enabled flag is finally set ie by sti instruction interrupts will remain pending and are not lost
an external a20m pin if enabled forces address bit20 to be masked forced to zero to emulates realaddress mode address wraparound at 1 megabyte however if all of the following conditions are met address bit20 may not be masked paging is enabled a linear address has bit20 set the address references a large page a20m is enabled
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
when the dts digital thermal sensor crosses one of its programmed thresholds it generates an interrupt and logs the event ia32_therm_status msr 019ch bits 97 due to this erratum if the dts reaches an invalid temperature as indicated ia32_therm_status msr bit31 it does not generate an interrupt even if one of the programmed thresholds is crossed and the corresponding log bits become set
software can enable dts thermal interrupts by programming the thermal threshold and setting the respective thermal interrupt enable bit when programming dts value the previous dts threshold may be crossed this will generate an unexpected thermal interrupt
returning back from smm mode into real mode while eflagsvm is set in smram may result in unpredictable system behavior
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected value ie residual stack data as a result of processing the fault
if an fp instruction generates an unmasked exception with the eflagstf1 it is possible for external events to occur including a transition to a lower power state when resuming from the lower power state it may be possible to take the single step trap before the execution of the original fp instruction completes
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception for example nmi nonmaskable interrupt debug breakdb machine check mc etc if the rsm attempts to return to a non canonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
if the btspebs buffer is defined such that the difference between btspebs buffer base and btspebs absolute maximum is not an integer multiple of the corresponding record sizes btspebs absolute maximum is less than a record size from the end of the virtual address space the record that would cross btspebs absolute maximum will also continue past the end of the virtual address space  a btspebs record can be written that will wrap at the 4g boundary ia32 or 264 boundary em64t mode and write memory outside of the btspebs buffer
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
the io_smi bit in smrams location 7fa4h is set to 1 by the cpu to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by a smi that is pending while a lower priority event is executing a rep io read a io read that redirects to mwait
when the freeze_lbrs_on_pmi ia32_debugctl msr 1d9h bit 11 is set future writes to ia32_debugctl msr may not occur in certain rare corner cases writes to this register by software or during certain processor operations are affected
when an l2 cache error occurs error code 0x010a or 0x110a reported in ia32_mci_status msr bits 150 the address is logged in the mca address register ia32_mci_addr msr under some scenarios the address reported may be incorrect
the performance monitoring event of outstanding bus requests will ignore the anythread bit ia32_perfevtsel0 msr 186h ia32_perfevtsel1 msr 187h bit 21 and will instead always count all transactions across all logical processors even when anythread is clear
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
a fixed or gp general purpose performance counter with the anythread bit ia32_fixed_ctr_ctrl_msr 38dh bit2 for ia32_fixed_ctr0 bit6 for ia32_fixed_ctr1 bit 10 for ia32_fixed_ctr2 ia32_perfevtsel0 msr 186h ia32_perfevtsel1 msr 187h bit 21 set may not count correctly when counting only os ring 0 events or only usr ring0 events the counters will count correctly if they are counting both os and usr events or if the anythread bit is clear
if a performance counter overflows and software does not clear the corresponding ovf overflow bit in ia32_perf_global_status msr 38eh then future overflows of that counter will not trigger pmi performance monitoring interrupt requests
the tlbs may contain both ordinary and largepage translations for a 4kbyte range of linear addresses this may occur if software modifies a pde pagedirectory entry that is marked present to set the ps bit this changes the page size used for the address range if the two translations differ with respect to page frame permissions or memory type the processor may use a page frame permissions or memory type that corresponds to neither translation
when a performance monitoring counter is configured for pebs precise event based sampling overflows of the counter can result in storage of a pebs record in the pebs buffer due to this erratum if the overflow occurs during probe mode it may be ignored and a new pebs record may not be added to the pebs buffer
if a transition from legacycompatibility mode to 64bit mode occurs and another branch event occurs before the first instruction executes for example an external interrupt or trap then any from address recorded by lbr last branch record btm branch trace message or bts branch trace store on that second event may incorrectly report the upper 32bits as zero
interrupts that are pending prior to the execution of the sti set interrupt flag instruction are normally serviced immediately after the instruction following the sti an exception to this is if the following instruction triggers a mf in this situation the interrupt should be serviced before the mf because of this erratum if following sti an instruction that triggers a mf is executed while stpclk enhanced intel speedstep technology transitions or thermal monitor events occur the pending mf may be serviced before higher priority interrupts
according to the intel 64 and ia32 architectures software developers manual volume 3a exception and interrupt reference if another exception occurs while attempting to call the doublefault handler the processor enters shutdown mode due to this erratum any benign faults while attempting to call doublefault handler will not cause a shutdown however contributory exceptions and page faults will continue to cause a triple fault shutdown
ia32_mc1_status msr 405h bit60 en error enabled is supposed to indicate whether the enable bit in the ia32_mc1_ctl msr 404h was set at the time of the last update to the ia32_mc1_status msr due to this erratum ia32_mc1_status msr bit60 instead reports the current value of the ia32_mc1_ctl msr enable bit
an interrupt delivered via lint0 pins when the apic is hardware disabled ia32_apic_base msr 1bh bit 11 is cleared will usually keep the pin asserted until after the interrupt is acknowledged however if lint0 is asserted and then de asserted before the interrupt is acknowledged and both of the following are true the apic is hardware disabled ia32_apic_base msr bit 11 is clear and the processor is in an inactive state that was requested by mwait io redirection vmentry or rsm  then the processor may operate incorrectly
in ia32e mode it is possible to get an alignment check exception ac on the iret instruction even though alignment checks were disabled at the start of the iret this can only occur if the iret instruction is returning from cpl3 code to cpl3 code irets from cpl012 are not affected this erratum can occur if the eflags value on the stack has the ac flag set and the interrupt handlers stack is misaligned in ia32e mode rsp is aligned to a 16byte boundary before pushing the stack frame
both hsync horizontal sync and vsync vertical sync signals are violating vesa video electronics standards association specification due to nonmonotonic slow rise time on both signals
during power up sequence transition to s0 state from g3 s3 s4 or s5 states when lvds low voltage differential signal power supply 18v source ramps up a glitch on lvds clocks lvd_a_clkp lvd_a_clkn and data lines lvd_a_dapap20 lvd_a_datan20 may be observed
when the cpuid instructions is executed with eax  80000002h 80000003h and 80000004h the returned brand string may be incorrect the model number in the brand string may be prefixed with a k instead of the expected d
the overflow bit should be set if the val bit ia32_mc2_status 409h bit 63 is set when a new error occurs due to this erratum the overflow bit ia32_mc2_status 409h bit 62 is only set when a prior uncorrected error as indicated by the uc bit ia32_mc2_status 409h bit 61 is present at the time the second error occurs
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80bit fp access load or store uses a 32bit address size in 64bit mode and the memory access wraps a 4gbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
an msr write that attempts to set the ia32_mcg_status msr 17ah mcip machine check in progress bit 2 will fail eg gp fault on wrmsr instead of setting the bit an msr write that specifies 0 for the mcip bit will function correctly
when either the ia32_mperf or ia32_aperf msr e7h e8h increments to its maximum value of 0xffff_ffff_ffff_ffff both msrs are supposed to synchronously reset to 0x0 on the next clock due to this erratum ia32_mperf may not be reset when ia32_aperf overflows instead ia32_mperf may continue to increment without being reset
under a precise set of conditions a processor waking from a cstate due to a pending external interrupt may not complete the exiting process and the system may hang
a subset of processors may experience circuit marginality issues when operating at high temperature due to this erratum a system hang may occur or the processor may proceed to reboot
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80bit fp access load or store occurs in a 16bit mode other than protected mode in which case the access will produce a segment limit violation the memory access wraps a 64kbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
when executing the ltr instruction with a null segment selector gp0 should be delivered without accessing the memory in the gdt global descriptor table due to this erratum such an execution of the ltr instruction in 64bit mode may access that memory side effects of this memory access eg a page fault or ept violation that occur may prevent the gp0 from being delivered
trefi average dram refresh interval is 7825us which exceeds the 78us stated in the ddr2ddr3 specification due to this erratum the processor will take more time to refresh rows example 641ms instead of 640ms to issue 8192 refreshes
the  fp data operand pointer is the  effective  address of the operand associated with the last noncontrol floatingpoint instruction executed by the machine if an 80bit floatingpoint access load or store occurs in a 16bit mode other than protected mode in which case the access will produce a segment limit violation the memory access wraps a 64kbyte boundary and the floatingpoint environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
there exist some differences in the reporting of code and data breakpoint matches between that specified by previous intel processor specifications and the behavior of the processor as described below case 1 the first case is for a breakpoint set on a movss or popss instruction when the instruction following it causes a debug register protection fault dr7gd  is already set enabling the fault the processor reports delayed data breakpoint matches from the movss or popss instructions by setting the matching dr6bi bits along with the debug register protection fault   dr6bd if additional breakpoint faults are matched during the call of the debug fault handler  the  processor sets the breakpoint match bits dr6bi to reflect the breakpoints matched by both the movss or popss breakpoint and the debug fault handler call the processor only sets dr6bd in either situation and does not set any of the dr6bi bits case 2 in the second breakpoint reporting failure case if a movss or popss instruction with a data breakpoint is followed by a store to memory which crosses a 4kbyte page boundary or causes the page table access or dirty ad bits to be modified the breakpoint information for the movss or popss will be lost previous processors retain this information under these boundary conditions case 3 if they occur after a movss or popss instruction the intn into and int3 instructions zero the dr6bi bits bits b0 through b3 clearing pending breakpoint information unlike previous processors case 4 if a data breakpoint and an smi system management interrupt occur simultaneously the smi will be serviced via a call to the smm handler and the pending breakpoint will be lost case 5 when an instruction that accesses a debug register is executed and a breakpoint is encountered on the instruction the breakpoint is reported twice case 6 unlike previous versions of intel architecture processors p6 family  processors will not set the bi bits for a matching disabled breakpoint unless at least one other breakpoint is enabled
in a 2way mp system if an application processor is waiting  for a  startup  inter processor interrupt startup_ipi then it will not service a flush pin assertion until it has received the startup_ipi
the bits l0 3 and g0 3 enable breakpoints local to a task and global to all tasks respectively if one of these bits is set a breakpoint is enabled corresponding to the addresses in the debug registers dr0dr3 if at least one of these breakpoints is enabled any of these registers are disabled ie ln and gn are 0 and rwn for the disabled register is 00 indicating a breakpoint on instruction execution normally an instruction fetch will not cause an instructionbreakpoint fault based on a match with the address in the disabled registers however if the address in a disabled register matches the address of a code fetch which also results in a page fault an instruction breakpoint fault will occur
for this erratum to occur the following conditions must be met machine check exceptions mces must be enabled a dataless transaction such as a write invalidate must be occurring simultaneously with a transaction which returns data a normal read the read data must contain a doublebit uncorrectable ecc error if these conditions are met the pentium iii processor will not be able to determine which transaction was erroneous and instead  of generating  an mce it will generate a binit
when the result of a floatingpoint operation is not exactly representable  in the destination format 13 in binary form for example an inexactresult precision exception occurs when this occurs the pe bit bit 5 of the fpu status word is normally set by the processor under certain rare conditions this bit may not be set when this rounding occurs however other actions taken by the processor invoking the software exception handler if the exception is unmasked are not affected this erratum can only occur if the floatingpoint operation which causes the precision exception is immediately followed by one of the following instructions fst m32real fst m64real fstp m32real fstp m64real fstp m80real fist m16int fist m32int fistp m16int fistp m32int fistp m64int   note that even if this combination of instructions is encountered there is also a dependency on the internal pipelining and execution state of both instructions in the processor
a system management interrupt smi will produce a branch trace message btm if btms are enabled however the from eip field of the btm used to determine the address of the instruction which was being executed when the smi was serviced will not have been updated for the smi so the field will report the same from eip as the previous btm
if an io instruction in ins rep ins out outs or rep outs is being executed  and if the data for this instruction becomes corrupted the pentium iii processor will signal a machine check exception mce if the instruction is directed at a device which is powered down the processor may also receive an assertion of smi since mces have higher priority the processor will call the mce handler and the smi assertion will remain pending however upon attempting to execute the first instruction of the mce handler the smi will be recognized and the processor will attempt to execute the smm handler if the smm handler is completed successfully it will attempt to restart the io instruction but will not have the correct machine state due to the call to the mce handler
if branch traps or branch trace messages btms are enabled alone both function as expected however if both are enabled only the btms will function and the branch traps will be ignored
if a system is running in  functional  redundancy  checking  frc  mode  and  the checker of the masterchecker pair encounters a hard failure while running the built in self test bist the checker will tristate all outputs without signaling an ierr
if a pair  of  pentium  iii processors  are  running  in functional redundancy checking frc mode and a catastrophic error condition causes binit to be asserted the checker in the masterchecker pair will enter shutdown the next bus  transaction from the master will then result in the assertion of frcerr
an  asynchronous  machine  check exception mce such as a binit event which  occurs during an access that splits a 4 kbyte  page boundary may leave some  internal registers in an indeterminate state thus the mce handler code may not always run successfully if an asynchronous mce has occurred previously
if a cache reply parity crp error cache address parity cap error or cache synchronous error cser occurs on an access to the pentium iii processors l2 cache the resulting machine check architectural error code mcacod will be logged with 01 in the ll field this value indicates an l1 cache error the value should be 10 indicating an l2 cache error note that l2 ecc errors have the correct value of 10 logged
the last branch record lbr and the last branch before exception record lber can   be used to determine the source and destination information for previous branches or exceptions the lbr contains the source and destination addresses for  the  last branch or exception and the lber contains similar information for the last branch taken before the last exception this information is typically used to determine the location of a branch which leads to execution of code which causes an exception however after a catastrophic bus condition which results in an assertion of binit and the reinitialization of the buses the value in the lber may be corrupted also   after either a call which results in a fault or a software interrupt the lber and lbr will be updated to the same value when the lber should not have been updated
when branch trace messages btms are enabled and such a message is generated   the btm may be corrupted when issued to the bus by the l1 cache if a new line of data is brought into the l1 data cache simultaneously though the new line being stored in the l1 cache is stored correctly and no corruption occurs in the data the information in the btm may be incorrect due to the internal collision of the data line and the btm
this erratum may occur when the pentium iii processor executes one of the following readmodifywrite arithmetic instructions and a page fault occurs during the store of the memory operand add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd in this case the eflags value pushed onto the stack of the page fault handler may reflect the status of the register after the instruction would have completed execution rather  than before it the following conditions are required for the store to generate a page fault and call the operating system page fault handler the store address entry must be evicted from the dtlb by speculative loads from other instructions that hit the same way of the dtlb before the store has completed dtlb eviction requires at least threeload operations that have linear address  bits 1512 equal to each other and address bits 3116 different from  each other in close physical proximity to the arithmetic operation the page table entry for the store address must have its permissions tightened during the very small window of time between the dtlb eviction and execution of   the store examples of page permission tightening include from present to not present or from readwrite to read only etc another processor without corresponding synchronization and tlb flush must cause the permission change
as documented the call instruction saves procedure linking information  in  the procedure stack and jumps to the called procedure specified with the destination target operand the target operand specifies the address of the first instruction in the called procedure this operand can be an immediate value a generalpurpose register or a memory location when accessing an absolute address indirectly using the  stack pointer esp as a base register the base value used is the value in the  esp register before the instruction executes however when accessing an absolute address directly using esp as the base register the base value used is the value of esp after the return value is pushed on the stack not the value in the esp register before the instruction executed
the memory type field for nonmemory transactions such as io and special cycles    are undefined although the memory type attribute for nonmemory operations logically should and usually does manifest itself as uc this feature is not designed into the implementation and is therefore inconsistent
it is possible for snoop traffic generated on the system bus while a processor is executing its l2 cache initialization routine to cause the initializing processor to hang
the fp data operand pointer as specified should be reset to zero upon power on or  reset by the processor due to this erratum the fp data operand pointer may be nonzero after power on or reset
an incorrect result may be calculated after the following circumstances occur a register has been zeroed with either a sub reg reg instruction or an xor reg reg instruction a value is moved with sign extension into the same registers lower 16 bits or a signed integer multiply is performed to the same registers lower 16 bits this register is then copied to an mmx technology register using the movd instruction prior to any other operations on the signextended value   specifically the sign may be incorrectly extended into bits 1631 of the mmx technology register only the mmx technology register is affected by this erratum the erratum only occurs when the three following steps  occur in the  order shown the erratum may occur with up to 40 intervening instructions that do not modify the signextended value between steps 2 and 3 xor eax  eax or sub eax eax movsx ax bl or movsx ax byte ptr memory address or movsx ax bx or movsx ax word ptr memory address or imul bl ax implicit opcode f6 5 or imul byte ptr memory address ax implicit opcode f6 5 or imul ax bx opcode 0f af r or imul ax word ptr memory address opcode 0f af r or imul ax bx 16 opcode 6b r ib or imul ax word ptr memory address 16 opcode 6b r ib or imul ax 8 opcode 6b r ib or imul ax bx 1024 opcode 69 r iw or imul ax word ptr memory address 1024 opcode 69 r iw or imul ax 1024 opcode 69 r iw or cbw movd mm0 eax note that the values for immediate bytewords are merely representative ie 8 16 1024 and that any value in the range for the size may be affected also note that this erratum may occur with eax replaced with any 32 bit generalpurpose register and ax with the corresponding 16bit version of that replacement bl or bx can be replaced with any 8bit or 16bit generalpurpose register the cbw and imul opcode f6 5 instructions are specific to the eax register only in the example eax is forced to contain 0 by the xor or sub instructions since the four types of the movsx or imul instructions and the cbw  instruction modify only bits 158 of eax by sign extending the lower 8 bits of eax bits 3116 of eax should always contain 0 this implies that when movd copies eax to mm0 bits 3116 of  mm0 should also be 0 under certain scenarios bits 3116 of mm0 are not 0 but are replicas of bit 15 the 16th bit of ax this is noticeable when the value in ax after  the movsx imul or cbw instruction is negative ie bit 15 of ax is a 1 when ax is positive bit 15 of ax is a 0 movd will always produce the correct answer if ax is negative bit 15 of ax is a 1 movd may produce the right answer  or the wrong answer depending on the point in time when the movd instruction is executed in relation to the movsx imul or cbw instruction
this erratum can occur with any of the following situations if an instruction that performs a memory load causes a code segment limit violation if a waiting floatingpoint instruction or mmx instruction that performs a memory load has a floatingpoint exception pending or if an mmx instruction that performs a memory load and has either cr0em 1 emulation bit set or a floatingpoint topofstack fp tos not equal to 0 or a dna exception pending if any of the above circumstances occur it is possible that the load portion of the instruction will have executed before the exception handler is entered
when the pentium iii processor executes a readmodifywrite rmw arithmetic instruction with memory as the destination it is possible for a page fault to occur during the execution of the store on the memory operand after the read operation  has completed but before the write operation completes if the memory targeted for the instruction is uc uncached memory will observe the occurrence of the initial load before the page fault handler and again if the instruction is restarted
the intel architecture software developers manual volume 3 system programming guide documents that for the mci_status msr bits 150 contain the mca machinecheck architecture error code field and bits 3116 contain the model specific error code field however for the mc2_status msr these bits have been reversed for the mc2_status msr bits 150 contain the modelspecific error code field and bits 3116 contain the mca error code field
this errata only affects multiprocessor systems  where  a  lock variable  address is  marked cacheable in one processor and uncacheable in any others the processors which have it marked uncacheable may stall indefinitely when accessing the lock variable the stall is only encountered if one processor has the lock variable cached and is attempting to execute a cache lock if the processor which has that address cached has it cached in its l2 only other processors meanwhile issue back to back accesses to that same address on the bus
when in v86 mode if a mov instruction is executed on debug registers a general protection exception gp should be generated as documented in the intel architecture software developers manual volume 3 system programming guide section 142 however in the case when the  general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
the  page  attribute  table  pat contains eight entries which must all be  initialized  and considered when setting up memory types for the pentium iii processor however in mode b or mode c paging the upper four entries do not  function correctly for 4kbyte pages specifically bit 7 of page table entries that translate addresses to 4kbyte pages should be used as the upper bit of a 3bit index to determine the pat entry that specifies the memory type for the page when mode b cr4pse  1 andor mode c cr4pae are enabled the processor forces this bit to zero when determining the memory type regardless of the value in the page table entry the upper four entries of the pat function correctly for 2mbyte and 4mbyte large pages specified by bit 12 of the page directory entry for those translations
if a misaligned data breakpoint is  programmed  to  the  same  cache  line  as  the memory location where the stack push of a near call is performed and any data breakpoints are enabled the processor will update the stack and esp appropriately but may skip the code at the destination of the call hence program execution will continue with the next instruction immediately following the call instead of the target of the call
the rdmsr and wrmsr instructions allow reading or writing of msrs model specific registers based on the index number placed in ecx the processor should reject access to any reserved or unimplemented msrs by generating gp0 however there are some invalid msr addresses for which the processor will not generate gp0
according to the ieee 11491 standard the extest  instruction  would  use  data typically loaded onto the latched parallel outputs of boundaryscan shiftregister stages using the samplepreload instruction prior to the selection of the extest instruction as a result of this erratum this method cannot be used to load the data onto the outputs
a task switch may be performed by executing a far jump through a task gate or to a   new task state segment tss directly normally when such a jump to a new tss occurs the dbit which indicates that the page referenced by a page table entry pte has been modified for the pte which maps the location of the previous tss will already be set and the processor will operate as expected however if the dbit is clear at the time of the jump to the new tss the processor will hang
if the processors general detect enable flag is set and an explicit call is made to the interrupt procedure via the int 1 instruction the general detect enable flag should be cleared prior to entering the handler as a result of this erratum the flag is not cleared prior to entering the handler if an access is  made to the debug registers while inside of the handler the state of the general detect enable flag will cause a second debug exception to be taken the second debug exception clears the general detect enable flag and returns control to the handler which is now able to access the debug registers
comissucomiss instructions compare the least significant pairs of packed single precision floatingpoint numbers and set the zf pf and cf bits in the eflags register accordingly the of sf and af bits are cleared under certain conditions when a memory location is loaded into cache the eflags may not get set
during  reads  of the l2 cache the processor may use certain l2 cache optimizations  that may result in a data transmission error
in  mp  systems  processors  may be sharing data in different cache lines referenced as line a and line b in the discussion below when this erratum occurs with the following example given for a 2way mp system with processors noted as p0 and p1 p0 contains a shared copy of line b in its l1 p1 has a shared copy of line a each processor must manage the necessary invalidation and snoop cycles before that processor can modify and source the results of any internal writes to the other processor there exists a narrow timing window when if p1 requests a coy of line b it may be supplied by p0 in an exclusive state which allows p1 to modify the contents of the line with no further external invalidation cycles in this narrow window p0 may also retire instructions that use the original data present before p1 performed the modification
when the processors apic space is accessed with a  misaligned locked  access  a  machine check exception is expected however the processors machine check architecture is unable to handle the misaligned locked access
a one clock window exists where a pending x87 fp exception that should be signaled   on the execution of a cvtps2pi cvtpi2ps or cvttps2pi instruction may be  deferred to the next waiting floatingpoint instruction or instruction that  would  change mmx register state
in an mp environment the following sequence of code  or similar code in  two  processors p0 and p1 may cause them to each enter an infinite loop livelock condition p0
the processors address  parity error detection circuit may fail to meet its frequency  timing specification under certain environmental conditions at the high end of the temperature specification andor the low end of the voltage range the processor may report false address parity errors
if  a processor is underclocked at a core  frequency to system bus frequency ratio of   21 and system bus ecc is enabled the system bus ecc detection and correction will negatively affect internal timing dependencies
when a maskmovq instruction is misaligned across a chunk boundary in a way that   one chunk has a mask of all 0s the processor will initiate two partial write transactions with one having all byte enables deasserted under these conditions the expected behavior of the processor would be to perform both write transactions but to deassert drdy during the transaction which has no byte enables asserted as a result of this erratum drdy is asserted even though no data is being transferred
writing a 1 to unimplemented bits in the rob_cr_bkuptmpdr6 msr offset 1e0h will result in a general protection fault gp
the pentium iii processor is designed to signal an unrecoverable machine check  exception mce as a consistency checking mechanism under a complex set of circumstances involving multiple speculative branches and memory accesses there exists a one cycle long window in which the processor may signal a mce in the instruction fetch unit ifu because instructions previously decoded have been evicted from the ifu the one cycle long window is opened when an opportunistic fetch receives a partial hit on a previously executed but not as yet completed store resident in the store buffer  the resulting partial hit erroneously causes the eviction  of a line from the ifu at a time when the processor is expecting the line to still be present if the mce for this particular ifu event is disabled execution will continue normally
the processor allows the measurement of the frequency and duration of numerous different internal and bus related events see intel architecture software developers manual volume 3 for more details the streaming simd extension sse architecture provides a mechanism to preload data into the l1 cache bypassing the l2 cache the number of these l1 preloads measured by the performance  monitoring logic will incorrectly be included in the count of l2_lines_in 24h events and l2_lines_out 26h events
a small window of time exists in which a snoop request originating from a bus agent   to a processor with one or more outstanding memory transactions may cause the processor to assert dbsy without issuing a corresponding bus transaction causing the processor to hang livelock the exact circumstances are complex and include the relative timing of internal processor functions with the snoop request from a bus agent
the system management base  smbase  register  7ef8h  stores  the  starting  address of the system management ram smram this register is used by the processor when it is in system management mode smm and its contents serve as the memory base for code execution and data storage the 32bit smbase register can normally be programmed to any value when programmed with an intarget probe itp however any attempt to set the lower 11 bits of smbase to anything other than zeros via the wrmsr instruction will cause the attempted write to fail
if an operating system executes a  task switch via a task state segment tss and   the tss is wholly or partially located within a clean page a and d bits clear and the gdt entry for the new tss is either misaligned across a cache line boundary or is in a clean page the accessed and dirty bits  for an incorrect page tabledirectory entry may be set
the act of one processor or system bus  master  writing  data  into  a  currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected instruction execution from the processor that is executing the modified code
if  the  processor performs  bist at  powerup  the  eax register is  normally cleared  0h when the processor passes the processor will erroneously report a nonzero value signaling a bist failure even if bist passes
post silicon characterization has demonstrated a greater than expected sensitivity to  noise on the processors smi input which may result in spurious smi interrupts
ecc can detect and correct up to four singlebit ecc errors per cache line  however   the processor will only detect and correct one singlebit ecc error per cache line while all ecc errors will be detected multiple single bit errors will be incorrectly reported as uncorrectable double bit errors rather than correctable single bit errors
the  l2_ld  29h and l2_m_lines_outm 27h performancemonitoring counters    are used to monitor l2 cache line activity these counters incorrectly count their respective events
an internal deadlock situation may occur in systems with multiple bus agents with a failure signature such that a processor either asserts dbsy without issuing the corresponding data or fails to respond to a snoop request from another bus agent should this erratum occur the affected processor ceases code execution and the system will hang the specific circumstances surrounding the occurrence of this erratum are a locked operation to the data cache unit dcu is in process a snoop occurs but cannot complete due to the ongoing locked operation the presence of the snoop prevents pending instruction fetch unit ifu requests from completing   the ifu requests are periodically restarted the continued ifu restart attempts create additional dcu snoops which prevent the inprocess locked operation from completing keeping the dcu locked
the l2_dbus_busy 22h performance monitoring counter is intended to count the number of cycles during which the l2 data bus is in use for some steppings of the processor the l2_dbus_busy counter will not be incremented during write cycles and therefore will only reflect the number of l2 data bus cycles resulting from cache reads
it is possible that a negative  sign bit may be incorrectly applied to the result of an    x87 floatingpoint operation if it is closely preceded by a streaming simd extensions sse multiply operation in order for this erratum to occur the streaming simd extensions multiply operation must result in an indefinite quiet notanumber qnan operations such as multiplying zero by infinity will result in an indefinite qnan result
intels 32bit instruction set architecture isa utilizes most of the available opcode space however some byte combinations remain undefined and are considered illegal instructions intel processors detect the  attempted execution of illegal instructions and signal an exception this exception is handled by operating system andor application software   under a complex set of internal and external conditions involving illegal instructions  a deadlock may occur within the processor the necessary conditions for  the  deadlock involve execution of the illegal instruction twopage table walks occur within a narrow timing window coincident with the illegal instruction
under the following scenario combined with a specific alignment of internal events the processor may enter a deadlock condition a store operation completes leaving a writecombining wc buffer  partially filled the target of a subsequent maskmovq instruction is split across a cache line the data in 2 above results in a hit to the data in the wc buffer in 1
an incorrect result may be calculated after the following circumstances occur a register has been zeroed with either a sub reg reg instruction or an xor reg reg instruction a value is moved with sign extension into the same registers lower 16 bits or a signed integer multiply is performed to the same registers lower 16 bits   the register is then copied to an mmx technology register using the movd or converted to single precision floatingpoint and moved to an mmx technology register using the cvtsi2ss instruction prior to any other operations on the sign extended value or inserted into an mmx technology register using the pinsrw instruction   specifically the sign may be incorrectly extended into bits 1631 of the mmx technology register in the case of the pinsrw instruction a nonzero value could be loaded into the mmx technology register this erratum only affects the mmx technology register   this erratum only occurs when the following three steps occur in the order shown this erratum may occur with up to 63 39 for precpuid 0x6bx intervening instructions that do not modify the signextended value between steps 2 and 3 xor eax  eax or sub eax eax  movsx ax bl or movsx ax byte ptr memory address or movsx ax bx or movsx ax word ptr memory address or imul bl ax implicit opcode f6 5 or imul byte ptr memory address ax implicit opcode f6 5 or imul ax bx opcode 0f af r or imul ax word ptr memory address opcode 0f af r or imul ax bx 16 opcode 6b r ib or imul ax word ptr memory address 16 opcode 6b r ib or imul ax 8 opcode 6b r ib or imul ax bx 1024 opcode 69 r iw or imul ax word ptr memory address 1024 opcode 69 r iw or imul ax 1024 opcode 69 r iw or cbw  movd mm0 eax or cvtsi2ss mm0 eax   note that the values for immediate bytewords are merely representative ie 8 16 1024 and that any value in the range for the size is affected also note that this erratum may occur with eax replaced with any 32bit generalpurpose register and ax with the corresponding 16bit version of that replacement bl or bx can be   replaced with any 8bit or 16bit generalpurpose register the cbw and imul opcode f6 5 instructions are specific to the eax register only   in the above example eax is forced to contain 0 by the xor or sub instructions since the four types of the movsx or imul instructions and the cbw instruction only modify bits 158 of eax by sign extending the lower 8 bits of eax bits 3116 of eax should always contain 0 this implies that when movd or cvtsi2ss copies eax to mm0 bits 3116 of mm0 should also be 0 in certain scenarios bits 3116 of mm0 are not 0 but are replicas of bit 15 the 16th bit of ax this is noticeable when the value in ax after the movsx imul or cbw instruction is negative ie bit 15 of ax is a 1   when ax is positive bit 15 of ax is 0 movd or cvtsi2ss will produce the correct answer if ax is negative bit 15 of ax is 1 movd or cvtsi2ss may produce the right answer or the wrong answer depending on the point in time when the movd or cvtsi2ss instruction is executed in relation to the movsx imul or cbw instruction the pinsrw instruction can fail to correctly load a zero when used with a partial register zeroing instruction sub or xor mov di 0ffff8914h xor eax eax add ax di xor ah ah pinsrw mm1 eax 00h in this case the programmer expects mm1 to contain 0014h in its least significant word this erratum would cause mm1 to contain 8914h the number of intervening instructions between steps 4 and 5 is the same as noted in the sign extension  example above between steps 2 and 3
if flush is  asserted after stpclk is asserted the  cache  flush operation will not occur until after stpclk is deasserted furthermore the pending  flush  will  prevent the processor from entering the sleep state since the flush operation must complete prior to the processor entering the sleep state
under a system specific set of initial parametric conditions a very small number of pentium iii processors cpuid 068xh may be susceptible to entering an internal test mode during processor poweron the symptom of this test mode is a failure to assert ads during a processor poweron
a floatingpoint instruction that causes a pending floatingpoint exception es1 is normally signaled by the processor on the next waiting fpmmx technology instruction in the following set of circumstances the exception may be delayed or  the fsw register may contain a wrong value the excepting floatingpoint instruction is followed by an instruction that accesses memory across a page 4kbyte boundary or its access results in the update of a page table dirtyaccess bit the memory accessing instruction is immediately followed by a waiting floating point or mmx technology instruction the waiting floatingpoint or mmx technology instruction retires during a one cycle window that coincides with a sequence of internal events related to instruction cache line eviction
thermtrip is a signal on the pentium iii processor that is asserted when the     core reaches a critical temperature during operation as detailed in the processor specification the pentium iii processor may not assert thermtrip until a much higher temperature than the one specified is reached
a small window  of  time  exists in which internal timing  conditions in the  processor cache logic may result in the eviction of an l2 cache line marked in the invalid state
during a l2 flush operation using the flush pin it is possible that a read request  from a bus agent or other processor to a valid line will leave the line in the shared state s instead of the invalid state i as expected after flush operation before the flush operation is completed another snoop request to invalidate the line from another agent or processor could be ignored again leaving the line in the shared state
the internal selector portion of the respective register tr ldtr may get corrupted  if during a small window of ltr or lldt system instruction execution the following sequence of events occur speculative write to a segment register that might follow the ltr or lldt instruction the read segment descriptor of ltrlldt operation spans a page 4 kbytes boundary or causes a page fault
init may not flush a tlb entry when the processor is in protected mode with paging enabled and the page global enable flag is set pge bit of cr4 register g bit for the page table entry is set tlb entry is present in tlb when init occurs
following a task switch to a double fault  handler  that  was  initiated  while  the processor was in virtual8086 vm86 mode the vm bit will be incorrectly cleared in eflags
in the event that software implements memory aliasing by having two page directory entries pdes point to a common page table entry pte and the accessed and dirty bits for the two pdes are allowed to become inconsistent the processor may become deadlocked
software that implements memory aliasing by having more than one linear addresses mapped to the same physical page with different cache types may cause the system to hang this would occur if one of the addresses is noncacheable used in code segment and  the other a cacheable address  if the cacheable address finds its way  in instruction cache and noncacheable address is fetched in ifu the processor may invalidate the noncacheable address from the fetch unit any microarchitectural event that causes instruction restart will expect this instruction to still be in fetch unit and lack of it will cause system hang
when an operating  system executes  a  task switch via a task state segment tss   the cr3 register is always updated from the new task tss in the mode c paging once the cr3 is changed the processor will attempt to load the pdptrs if the cr3 from the target task tss or task switch handler tss is not valid then the new pdptr   will not be loaded this will lead to the reporting of invalid tss fault instead of the expected double fault
a small window of opportunity  exists  where  code  fetches  interleaved  between  different memory types may cause a machine check exception a complex set of microarchitectural boundary conditions is required to expose this window
at the beginning of the iret instruction execution in vm86 mode the lower 16 bits of the esp register are saved as the old stack value when a fault occurs these 16 bits are moved into the 32bit esp effectively clearing the upper 16 bits of the esp
if the apic icr interrupt control register is written with a new interrupt command  while the delivery status bit from a previous interrupt command is set to 1 send pending the interrupt message may not be sent out by the processor
when operating at the high temperature low supply voltage corner of the processor specification if there is a store pending in the processors fill buffer and simultaneously a load operation misses the l1 cache but results in a hit to the l2 cache then it is possible that incorrect data may be returned to satisfy the load operation
during boundary scan bclk is not sampled high when slp is asserted low
the internal control register bit responsible for operation of the thermtrip circuit functionality may power up in a noninitialized state as a result thermtrip may  be incorrectly asserted during deassertion of reset at nominal operating temperatures when thermtrip is asserted as a result of this erratum the processor may shut down internally and stop execution but in few cases continue to execute
if the  processor enters  a  sleep  state  upon assertion of cpuslp signal  and  if the core to system bus multiplier is an odd bus fraction then the processor may not resume from the cpu sleep state upon the deassertion of cpuslp signal
under a complex set of conditions there exists a oneclock window following a write   to the cr3 register wherein it is possible for the itlb fill buffer to obtain a stale page translation based on the stale cr3 data this stale translation will persist until the  next write to the cr3 register the next page fault or execution of a certain class of instructions including cpuid or iretd with privilege level change
if all of the following events happen in sequence it is possible for the system or  application to hang or to execute with incorrect data the execution of an instruction with an opcode that requires the processor to stall the issue of microinstructions in the flow from the microcode sequence logic block to the instruction decode block a stallms condition less than 63 39 for precpuid 0x6bx microinstructions later the execution of a mispredictable branch instruction jcc loopcc ret near  call near indirect jmp ecx0 or jmp near indirect   the conditional branch in event 2 is mispredicted and furthermore the mispredicted path of execution must result in either an itlb miss or an  instruction cache miss this needs to briefly stall the issue of microinstructions again immediately after the conditional branch until that branch prediction is corrected by the jump execution block a 2nd stallms condition along the correct path of execution the next instruction must contain a 3rd stallms condition at a precisely aligned point in the execution of the instruction  clts popss lss or mov to ss a jmp far instruction must execute within the next 63 microinstructions 39 pre cpuid 0x6bx the intervening microinstructions must not have any events or faults when the instruction from event 2 retires the stallms condition within the event 5 instruction fails to operate correctly and instructions in the shadow of the jmp  far instruction could be unintentionally executed
when a nonzero write occurs to the upper 32 bits of sysenter_eip_msr or sysenter_esp_msr the processor should indicate a general protection fault by flagging gp due to this erratum the processor does not flag gp
a lockable instruction with memory operand that spans across two pages may given  some rare internal conditions hang the system
a fast rep movs operation will continue to be handled in fast mode when the string operation crosses a page boundary into an uncacheable uc memory type also if  the fast string operation crosses a page boundary into a wc memory region the processor will not self snoop the wc memory region this may eventually result in incorrect data for the wc portion of the operation if those cache lines were previously cached as wb through aliasing and modified
if the data from an fxsave stos or movs instruction crosses a page boundary from wb to uc memory type and this instruction is immediately followed by a second instruction that also issues a store to memory the final data stores from both instructions may occur in the wrong order
in some rare  cases popf and popfd instructions that set the trap flag tf bit in    the eflags register causing the processor to enter singlestep mode may cause unpredictable processor behavior
code segment limit violation  may occur on 4 gigabyte  limit check when the  code  stream wraps around in a way that one instruction ends at the last byte of the segment and the next instruction begins at 0x0
fst instruction combined with numeric and null segment exceptions may cause general protection faults to be missed and fp linear address fla mismatch
with smbase being relocated to a nonaligned address during smm entry the cs can be improperly updated which can lead to an incorrect smm handler
a page  whose  pat memory type  is uswc  while the relevant mtrr memory type is  uc the consolidated memory type may be treated as uc rather than wc  as  specified in ia32 intel architecture software developers manual
an ltr instruction may result in a system hang if all the following conditions are met invalid data selector of the tr task register resulting with either gp general protection fault or np segment not present fault gdt global descriptor table is not 8bytes aligned gdt global descriptor table is not 8bytes aligned data bp breakpoint is set on cache line containing the descriptor data
a load from memory type uswc  may  get  its  data  internally  forwarded  from  a pending store as a result the expected load may never be issued to the external  bus
an fxsave after fninit without an intervening fp instruction may save uninitialized values for fdp and fds
an fstp instruction with an pdepte page directory entrypage table entry ad bit update followed by user mode access fault due to a code fetch to a page that has supervisor only access permission may result in erroneously setting a valid bit of an  fp stack register the fp top of stack pointer is unchanged
invalid entries in the pagedirectorypointertable register pdptr that have the reserved bits set to one may cause a general protection gp exception
if  a  local  interrupt is pending  when the  lvt entry is written an interrupt may be  taken on the new interrupt vector even if the mask bit is set
a jump to a busy tss taskstate segment may cause a ts invalid tss  exception instead of a gp fault general protection exception
with respect to  the  retirement  of instructions stores to the uncacheable memory  based apic register space are handled in a nonsynchronized way for example if an instruction that masks the interrupt flag eg cli is executed soon after an uncacheable write to the task priority register tpr that lowers the apic priority  the interrupt masking operation may take effect before the actual priority has been lowered this may cause interrupts whose priority is lower than the initial tpr but higher than the final tpr to not be serviced until the interrupt enabled flag is finally set ie by sti instruction interrupts will remain pending and are not lost
an external a20m pin if enabled forces address bit 20 to be masked forced to zero  to emulates realaddress mode address wraparound at 1 megabyte however if all of the following conditions are met address bit 20 may not be masked paging is enabled a linear address has bit 20 set the address references a large page a20m is enabled
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering  their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
init may not flush a tlb entry when   the processor is in protected mode with paging enabled and the page global enable flag is set pge bit of cr4 register g bit for the page table entry is set tlb entry is present in tlb when init occurs
dr6 bs single step bit 14 flag may be incorrectly set when the tf trap flag bit 8 of the eflags register is set and a db debug exception occurs due to one of the following dr7 gd general detect bit 13 being bit set int1 instruction code breakpoint the dr6 bs single step bit 14 flag may be incorrectly set
the enter instruction is used to create  a  procedure  stack  frame  due  to  this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values ie residual stack data as a result of processing the fault
when an unaligned access is performed on paging structure entries accessing a portion of two different entries simultaneously the processor may live lock
the invlpg instruction may not completely invalidate translation lookaside buffer tlb entries for large pages 2m4m when both of the following conditions exist address range of the page being invalidated spans several memory type range registers mtrrs with different memory types specified invlpg operation is preceded by a page assist event page fault pf or an access that results in either a or d bits being set in a page table entry pte
if code segment limit is set close to the end of a code page then due to this erratum   the memory page access bit a bit may be set for the subsequent page prior to general protection fault on code segment limit
when the processor is going into shutdown due  to an rsm  inconsistency failure  eflags cr0 and cr4 may be incorrect in addition the exf4 signal may still be asserted this may be observed if the processor is taken out of shutdown by nmi
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
during a processor shutdown transaction when lock is asserted and if a defer is received during a snoop phase and the locked transaction is pipelined on the front side bus fsb lock may unexpectedly deassert
when correctable singlebit ecc errors occur in the l2 cache the address is logged in the mca address register mci_addr under some scenarios the address reported may be incorrect
the ler msr may be unexpectedly updated if the resultant value of the zero flag zf is zero after executing the following instructions verr zf0 indicates unsuccessful segment read verification verw zf0 indicates unsuccessful segment write verification lar zf0 indicates unsuccessful access rights load lsl zf0 indicates unsuccessful segment limit load
performance monitoring for event cfh normally increments on saturating simd instruction retired regardless of dr7 programming if the linear address of a retiring memory store movdmovqmovntq instruction executed matches the address in dr3 the cfh counter may be incorrectly incremented
in normal operation sysret will restore the value of rflags from r11 the value previously saved upon execution of the syscall instruction due to this erratum the rflagsrf bit will be unconditionally cleared after execution of the sysret instruction
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault for example page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
interrupts that are pending prior to the execution of the sti set interrupt flag instruction are serviced immediately after the sti instruction is executed because of this erratum if following sti an instruction that triggers a mf is executed while stpclk enhanced intel speedstep technology transitions or thermal monitor 1 events occur the pending mf may be serviced before higher priority interrupts
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
with respect to the retirement of instructions stores to the uncacheable memory based apic register space are handled in a nonsynchronized way for example if an instruction that masks the interrupt flag for example cli is executed soon after an uncacheable write to the task priority register tpr that lowers the apic priority the interrupt masking operation may take effect before the actual priority has been lowered this may cause interrupts whose priority is lower than the initial tpr but higher than the final tpr to not be serviced until the interrupt enabled flag is finally set that is by sti instruction interrupts will remain pending and are not lost
software can enable dts thermal interrupts by programming the thermal threshold and setting the respective thermal interrupt enable bit when programming dts value the previous dts threshold may be crossed this generates an unexpected thermal interrupt
performancemonitoring counter pmh_page_walk is used to count the number of page walks resulting from data translation lookaside buffer dtlb and instruction translation lookaside itlb misses under certain conditions this counter may be incorrect
the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may contain incorrect values after any of the following either stpclk nmi nonmaskable interrupt or external interrupts cmp or test instructions with an uncacheable memory operand followed by a conditional jump stipop ssmov ss instructions followed by cmp or test instructions and then by a conditional jump
the inst_retired performance monitor may miscount retired instructions as follows repeat string and repeat io operations are not counted when a hardware interrupt is received during or after the last iteration of the repeat flow vmlaunch and vmresume instructions are not counted hlt and mwait instructions are not counted the following instructions if executed during hlt or mwait events are also not counted rsm from a cstate smi during an mwait instruction rsm from an smi during a hlt instruction
the cpu_clk_unhalted performance monitor with mask 1 counts bus clock cycles instead of counting the core clock cycles at the maximum possible ratio the maximum possible ratio is computed by dividing the maximum possible core frequency by the bus frequency
an external a20m pin if enabled forces address bit 20 to be masked forced to zero to emulates realaddress mode address wraparound at 1 megabyte however if all of the following conditions are met address bit 20 may not be masked paging is enabled a linear address has bit 20 set the address references a large page a20m is enabled
software which is written so that multiple agents can modify the same shared unaligned memory location at the same time may experience a memory ordering issue if multiple loads access this shared data shortly thereafter exposure to this problem requires the use of a data write which spans a cache line boundary
code segment limit violation may occur on 4gigabyte limit check when the code stream wraps around in a way that one instruction ends at the last byte of the segment and the next instruction begins at 0x0
when the result of a floatingpoint operation is not exactly representable in the destination format 13 in binary form for example an inexactresult precision exception occurs when this occurs the pe bit bit 5 of the fpu status word is normally set by the processor under certain rare conditions this bit may not be set when this rounding occurs however other actions taken by the processor invoking the software exception handler if the exception is unmasked are not affected this erratum can only occur if one of the following fst instructions is one or two instructions after the floatingpoint operation which causes the precision exception fst m32real fst m64real fstp m32real fstp m64real fstp m80real fist m16int fist m32int fistp m16int fistp m32int fistp m64int fisttp m16int fisttp m32int fisttp m64int  note even if this combination of instructions is encountered there is also a dependency on the internal pipelining and execution state of both instructions in the processor
the resume from system management mode rsm instruction does not flush global pages from the data translation lookaside buffer dtlb prior to reloading the saved architectural state
if code sequentially executes off the end of the positive canonical address space falling through from address 00007fffffffffff to non canonical address 0000800000000000 under some circumstances the code fetch will be converted to a canonical fetch at address ffff800000000000
processors supporting intel virtualization technology can execute vmcall from within the virtual machine monitor vmm to activate dualmonitor treatment of smis and smm due to this erratum if reserved bits are set to values inconsistent with vmx capability msrs vmcall may not vmfail
under certain conditions as described in the intel 64 and ia32 architectures software developers manual section outoforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
the following bus transaction performance monitor events are supposed to count all local transactions bus_trans_ io event 6ch  will not count io level reads resulting from package resolved cstate bus_trans_any event 70h  will not count stopgrants
if any of the below circumstances occur it is possible that the load portion of the instruction is executed before the exception handler is entered if an instruction that performs a memory load causes a code segment limit violation if a waiting x87 floatingpoint fp instruction or mmx technology instruction that performs a memory load has a floatingpoint exception pending if an mmx or ssesse2sse3ssse3 extensions sse instruction that performs a memory load and has either cr0em1 emulation bit set or a floatingpoint topofstack fp tos not equal to 0 or a dna exception pending
in 32bit mode memory accesses to flat data segments base  00000000h that occur above the 4g limit 0ffffffffh may not signal a gp fault
when the processor is going into shutdown state the upper 32 bits of the instruction pointer may be incorrect this may be observed if the processor is taken out of shutdown state by nmi
a gp fault is not generated on writing to ia32_misc_enable 34 bit in a processor which does not support execute disable functionality
when performing fast string rep movs or rep stos commands with data structures ecxdata size larger than the supported address size structure 64 kb for 16bit address size and 4 gb for 32bit address size some addresses may be processed more than once after an amount of data greater than or equal to the address size structure has been processed external events such as interrupts will cause the ecx registers to be increment by a value that corresponds to 64 kb for 16bit address size and 4 gb for 32bit address size
the following events may be counted as instructions that contain a load by the mem_load_retired performance monitor events and may be counted as loads by the inst_retired mask 01h performance monitor event prefetch instructions x87 exceptions on fst and fbstp instructions breakpoint matches on loads stores and io instructions stores which update the a and d bits stores that split across a cache line vmx transitions any instruction fetch that misses in the itlb
when a far transfer switches the processor from 32bit mode to ia32e mode the upper 32 bits of the from source addresses reported through the btms branch trace messages or btss branch trace stores may be incorrect
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
when an mce occurs during execution of a rdmsr instruction for msrs actual frequency clock count ia32_aperf or maximum frequency clock count ia32_mperf the current and subsequent rdmsr instructions for these msrs may contain incorrect data
logical processors normally resume program execution following the mwait when another logical processor performs a write access to a wb cacheable address within the address range used to perform the monitor operation due to this erratum a logical processor may not resume execution until the next targeted interrupt event or os timer tick following a locked store that spans across cache lines within the monitored address range
rep cmps compare string and scas scan string instructions in 64bit mode may terminate before the count in rcx reaches zero if the initial value of rcx is greater than or equal to 0x100000000
if a fxsavefxrstor instruction stores to the end of the segment causing a wrap to a misaligned base address alignment  0x10h and one of the following conditions is satisfied 32bit addressing obtained by using addresssize override when in 64bit mode 16bit addressing in legacy or compatibility mode  then depending on the wraparound point one of the below saved values may be corrupted fpu instruction pointer offset fpu instruction pointer selector fpu operand pointer selector fpu operand pointer offset
prefetchh instruction execution after a split load and dependent upon ongoing store operations may lead to processor livelock
prefetcht0 prefetcht1 prefetcht2 and prefetchnta instructions may not be executed when alignment check is enabled
the upper 32 bits of the fpu data operand pointer may incorrectly be set to all 1s instead of the expected value of all 0s in the fxsave memory image if all of the following conditions are true the processor is in 64bit mode the last floating point operation was in compatibility mode bit 31 of the fpu data operand pointer is set an fxsave instruction is executed
when a logical processor writes to a nondirty page and another logicalprocessor either writes to the same nondirty page or explicitly sets the dirty bit in the corresponding page table entry complex interaction with internal processor activity may cause unpredictable system behavior
performance monitoring events that count the number of cycles the divider is busy and no other execution unit operation or load operation is in progress may not be accurate
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect  note this issue would only occur when one of the 3 above mentioned debug support facilities are used
when a logical processor encounters an error resulting in shutdown nonbootstrap processors in the package may be unexpectedly disabled
if a syscall instruction follows immediately after eflagstf was updated and ia32_fmasktf bit 8 is cleared then under certain circumstances syscall may behave according to the previous eflagstf
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception eg nmi nonmaskable interrupt debug breakdb machine check mc etc if the rsm attempts to return to a non canonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
following a task switch to any fault handler that was initiated while the processor was in vm86 mode if there is an additional fault while servicing the original task switch then the vm bit will be incorrectly cleared in eflags data segments will not be pushed and the processor will not return to the correct mode upon completion of the second fault handler via iret
ia32_fmask msr 0xc0000084 is reset during init
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
a taskstate segment tss task switch may incorrectly set the lbr_from value to the lbr_to value
the io_smi bit in smrams location 7fa4h is set to 1 by the cpu to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by a nonio instruction smi is pending while a lower priority event interrupts a rep io read an io read that redirects to mwait in systems supporting intel virtualization technology a fault in the middle of an io operation that causes a vm exit
init may not flush a tlb entry when the processor is in protected mode with paging enabled and the page global enable flag is set pge bit of cr4 register g bit for the page table entry is set tlb entry is present in tlb when init occurs
memory type aliasing occurs when a single physical page is mapped to two or more different linear addresses each with different memory type memory type aliasing with the memory types wb and wt may cause the processor to perform incorrect operations leading to unpredictable behavior
updating a page table entry by changing rw us or p bits without tlb shootdown as defined by the 4 step procedure in propagation of page table and page directory entry changes to multiple processors in volume 3a of the intel 64 and ia32 architectures software developers manual in conjunction with a complex sequence of internal processor microarchitectural events may lead to unexpected processor behavior
stpclk is asserted to enable the processor to enter a lowpower state under some circumstances when stpclk becomes active the bts branch trace store message may be either lost and not written or written with corrupted branch address to the debug store area
when in v86 mode if a mov instruction is executed tofrom a debug register a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
this erratum may occur when the processor executes one of the following read modifywrite arithmetic instructions and a page fault occurs during the store of the memory operand add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd in this case the eflags value pushed onto the stack of the page fault handler may reflect the status of the register after the instruction would have completed execution rather than before it the following conditions are required for the store to generate a page fault and call the operating system page fault handler the store address entry must be evicted from the dtlb by speculative loads from other instructions that hit the same way of the dtlb before the store has completed dtlb eviction requires at least threeload operations that have linear address bits 1512 equal to each other and address bits 3116 different from each other in close physical proximity to the arithmetic operation the page table entry for the store address must have its permissions tightened during the very small window of time between the dtlb eviction and execution of the store examples of page permission tightening include from present to not present or from readwrite to read only etc 3 another processor without corresponding synchronization and tlb flush must cause the permission change
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
when the dts digital thermal sensor crosses one of its programmed thresholds it generates an interrupt and logs the event ia32_therm_status msr 019ch bits 9 7 due to this erratum if the dts reaches an invalid temperature as indicated ia32_therm_status msr bit31 it does not generate an interrupt even if one of the programmed thresholds is crossed and the corresponding log bits become set
in 64bit mode cmpsb lodsb or scasb executed with a repeat prefix and count greater than or equal to 248 may terminate early early termination may result in one of the following the last iteration not being executed signaling of a canonical limit fault gp on the last iteration
returning back from smm mode into real mode while eflagsvm is set in smram may result in unpredictable system behavior
vmlaunchvmresume instructions may not fail if the value of the host address space size vmexit control differs from the setting of ia32_eferlma
in ia32e mode it is possible to get an alignment check exception ac on the iret instruction even though alignment checks were disabled at the start of the iret this can only occur if the iret instruction is returning from cpl3 code to cpl3 code irets from cpl012 are not affected this erratum can occur if the eflags value on the stack has the ac flag set and the interrupt handlers stack is misaligned in ia32e mode rsp is aligned to a 16byte boundary before pushing the stack frame
in addition an assist event may be counted when daz denormalsarezeros and ftz flushtozero flags are turned on even though no actual assist occurs
cpl current privilege levelqualified bts branch trace store may report incorrect branchfrom instruction address under the following conditions either bts_off_os 9 or bts_off_usr 10 is selected in ia32_debugctlc msr 1d9h privilegelevel transitions occur between cpl  0 and cpl 0 or vice versa
performance monitoring counter configured to sample pebs precise event based sampling events at a certain privilege level may count samples at the wrong privilege level
after a pebs precise eventbased sampling event the pebs index is compared with the pebs threshold and the index is incremented with every event if pebs index is equal to the pebs threshold a pmi performance monitoring interrupt should be issued due to this erratum the pmi may be delayed by one pebs event
ia32_perf_global_status msr 38eh bit 62 when set indicates that a pebs precise eventbased sampling overflow has occurred and a pmi performance monitor interrupt has been sent due to this erratum this bit is not set unless ia32_debugctl msr 1d9h bit 12 which stops all performance monitor counters upon a pmi is also set
dr6 bs single step bit 14 flag may be incorrectly set when the tf trap flag bit 8 of the eflags register is set and a db debug exception occurs due to one of the following dr7 gd general detect bit 13 being bit set int1 instruction code breakpoint
if an asynchronous machine check occurs during an interrupt call through gate far ret or iret and in the presence of certain internal conditions esp may be corrupted
in a system supporting intel virtualization technology the bs bit bit 14 of the pendingdebugexceptions field in the guest state area will be incorrectly set when all of the following conditions occur  the processor is running in vmx nonroot as a 64 bit mode guest the cr8load existing vmexecution control is 0 and the use tpr shadow vmexecution is 1 both btf singlestep on branches bit 1 of the ia32_debugctl msr 1d9h register and the tf trap flag bit 8 of the rflags register are set mov cr8 reg attempts to program a tpr task priority register value that is below the tpr threshold and causes a vmexit
b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may not be properly cleared when the following sequence happens pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist followed by code breakpoint
when btm branch trace message or bts branch trace store is enabled a software interrupt may result in the overwriting of btmbts branchfrom instruction address by the lbr last branch record branchfrom instruction address
during a series of rep repeat store instructions a store may try to dispatch to memory prior to the actual completion of the instruction this behavior depends on the execution order of the instructions the timing of a speculative jump and the timing of an uncacheable memory store all types of rep store instructions are affected by this erratum
the simd_inst_retired event c7h is used to track retired sse instructions due to this erratum the processor may also count other types of instructions resulting in values higher than the number of actual retired sse instructions
performance monitoring events 0cbh with an event mask value of 02h or 08h mem_load_retiredl1_line_miss or mem_load_retiredl2_line_miss may under count the cache miss events
when data of store to wt memory is used by two subsequent loads of one thread and another thread performs cacheable write to the same address the first load may get the data from external memory or l2 written by another core while the second load will get the data straight from the wt store
moves tofrom control registers are supposed to ignore reww and the 66h operand size prefix in systems supporting intel virtualization technology when the processor is operating in vmx nonroot operation and use tpr shadow vmexecution control is set to 1 a mov instruction from cr8 with a 16 bit operand size rexw 0 and 66h prefix will only store 16 bits and leave bits 6316 at the destination register unmodified instead of storing zeros in them
in ia32e mode if a movss or popss instruction with a debug breakpoint is followed by the sysret instruction incorrect information may exist in the debug status register dr6
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
when nontemporal data is accessed by multiple read operations in one thread while another thread performs a cacheable write operation to the same address the data stored may be observed in wrong program order ie later load operations may read older data
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values ie residual stack data as a result of processing the fault
cpuid leaf 0ah reports the architectural performance monitoring version that is available in eax70 due to this erratum cpuid reports the supported version as 2 instead of 1
when an unaligned access is performed on paging structure entries accessing a portion of two different entries simultaneously the processor may live lock
when intel virtualization technology is enabled microcode updates are allowed only during vmx root operations attempts to apply microcode updates while in vmx non root operation should be silently ignored due to this erratum the processor may allow microcode updates during vmx nonroot operations if not explicitly prevented by the host software
the invlpg instruction may not completely invalidate translation lookaside buffer tlb entries for large pages 2m4m when both of the following conditions exist address range of the page being invalidated spans several memory type range registers mtrrs with different memory types specified invlpg operation is preceded by a page assist event page fault pf or an access that results in either a or d bits being set in a page table entry pte
if code segment limit is set close to the end of a code page then due to this erratum the memory page access bit a bit may be set for the subsequent page prior to general protection fault on code segment limit
updating a page directory entry or page map level 4 table entry or page directory pointer table entry in ia32e mode by changing rw us or p bits without immediate tlb shootdown as described by the 4 step procedure in propagation of page table and page directory entry changes to multiple processors in volume 3a of the intel 64 and ia32 architectures software developers manual in conjunction with a complex sequence of internal processor microarchitectural events may lead to unexpected processor behavior
invalid instructions due to undefined opcodes or instructions exceeding the maximum instruction length due to redundant prefixes placed before the instruction may lead under complex circumstances to unexpected behavior
when the processor is going into shutdown due to an rsm inconsistency failure eflags cr0 and cr4 may be incorrect in addition the exf4 signal may still be asserted this may be observed if the processor is taken out of shutdown by nmi
macro_instsdecoded performance monitoring counter event 0aah umask 01h counts the number of macro instructions decoded but not necessarily retired the event is undercounted when the decoded instructions are a complete loop iteration that is decoded in one cycle and the loop is streamed by the lsd loop stream detector as described in the optimizing the front end section of the intel 64 and ia32 architectures optimization reference manual
3 both the vif virtual interrupt flag and vip virtual interrupt pending flags of the eflags register are set
performance monitoring event simd_uop_type_execmul event select 0b3h umask 01h counts the number of simd packed multiply microops executed the count for pmuludq microops might be lower than expected no other instruction is affected
when a performance monitoring counter is configured for pebs precise event based sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
one of the following simultaneous exception conditions is present following the code transition code db and code pf code segment limit violation gp and code pf
performance counter msr_perf_fixed_ctr2 msr 30bh that counts cpu_clk_unhaltedref clocks should count these clock cycles at a constant rate that is determined by the maximum resolved boot frequency as programmed by bios due to this erratum the rate is instead set by the maximum coreclock to bus clock ratio of the processor as indicated by hardware
according to intel 64 and ia32 architectures software developers manual volume 3a methods of caching available wp write protected stores should drain the wc write combining buffers in the same way as uc uncacheable memory type stores do due to this erratum wp stores may not drain the wc buffers
when performing fast string rep stos commands with data structures ecxdata size larger than the supported address size structure 64k for 16bit address size and 4g for 32bit address size some addresses may be processed more than once after an amount of data greater than or equal to the address size structure has been processed external events such as interrupts will cause the ecx registers to be incremented by a value that corresponds to 64k bytes for 16 bit address size and 4g bytes for 32 bit address size
performance monitoring event br_inst_retired c4h counts retired branch instructions due to this erratum two of its subevents mistakenly count for cpuid instructions as well those sub events are br_inst_retiredpred_not_taken umask 01h and br_inst_retiredany umask 00h
performance monitoring event misalign_mem_ref 05h is used to count the number of memory accesses that cross an 8byte boundary and are blocked until retirement due to this erratum the performance monitoring event misalign_mem_ref also counts other memory accesses
the monitor instruction is used to arm the address monitoring hardware for the subsequent mwait instruction the hardware is triggered on subsequent memory store operations to the monitored address range due to this erratum rep stosmovs fast string operations to the monitored address range may prevent the actual triggering store to be propagated to the monitoring hardware
executing an instruction stream containing invalid instructionsdata may generate a false level one data cache parity machinecheck exception
the tlb translation lookaside buffer may indicate a wrong memory type on a memory access to a large page 2m4m byte following the recovery from a gp general protection fault due to a wrmsr to one of the ia32_mtrr_physmaskn msrs with reserved bits set
when precise eventbased sampling pebs is configured with performance monitoring interrupt pmi on pebs buffer overflow enabled and last branch record lbr freeze on pmi enabled by setting freeze_lbrs_on_pmi flag bit 11 to 1 in ia32_debugctl msr 1d9h the lbr stack is frozen upon the occurrence of a hardware pmi request due to this erratum the lbr freeze may occur too soon ie before the hardware pmi request
logging of a branch record or a pebs preciseeventbasedsampling record to the ds debug store save area that overlaps with the apic access page may lead to unpredictable behavior
vtpr write accesses should not cause apicaccess vm exits but instead should cause data to be written to the virtualapic page due to this erratum a vtpr write access during event delivery may cause an apicaccess vm exit with no data being written to the virtualapic page
the processor may show an erroneous bist builtin self test result in bit 17 of eax register when coming out of reset
a livelock may be observed in rare conditions when instruction fetch causes multiple level one data cache snoops
software that implements memory aliasing by having more than one linear addresses mapped to the same physical page with different cache types may cause the system to hang or to report a machine check exception mce this would occur if one of the addresses is noncacheable and used in a code segment and the other is a cacheable address if the cacheable address finds its way into the instruction cache and the noncacheable address is fetched in the ifu the processor may invalidate the non cacheable address from the fetch unit any microarchitectural event that causes instruction restart will be expecting this instruction to still be in the fetch unit and lack of it will cause a system hang or an mce
under certain conditions as described in the software developers manual section outoforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor may perform rep movs or rep stos as write combining stores referred to as fast strings for optimal performance fxsave may also be internally implemented using write combining stores due to this erratum stores of a wb write back memory type to a cache line previously written by a preceding fast stringfxsave instruction may be observed before stringfxsave stores
as specified in section vm exits induced by the tpr shadow in the intel 64 and ia32 architectures software developers manual volume 3b a vm exit occurs immediately after any vm entry performed with the use tpr shadow activate secondary controls and virtualize apic accesses vmexecution controls all set to 1 and with the value of the tpr shadow bits 74 in byte 80h of the virtualapic page less than the tprthreshold vmexecution control field due to this erratum such a vm exit will clear bit 0 blocking by sti and bit 1 blocking by movpop ss of the interruptibilitystate field of the gueststate area of the vmcs bit 0  blocking by sti and bit 1  blocking by movpop ss should be left unmodified
memory type aliasing occurs when a single physical page is mapped to two or more different linear addresses each with different memory types memory type aliasing with a cacheable memory type and wc write combining may cause the processor to perform incorrect operations leading to memory ordering violations for wc operations
rsm instruction execution under certain conditions triggered by a complex sequence of internal processor microarchitectural events may lead to processor hang or unexpected instruction execution results
the intel 64 and ia32 architectures software developers manual volume 3b system programming guide part 2 specifies that following a vmentry failure during or after loading guest state the state of blocking by nmi is what it was before vm entry if nonmaskable interrupts nmis are blocked and the virtual nmis vm execution control set to 1 this erratum may result in nmis not being blocked after a vmentry failure during or after loading guest state
according to the intel 64 and ia32 architectures software developers manual volume 3a exception and interrupt reference if another exception occurs while attempting to call the doublefault handler the processor enters shutdown mode however due to this erratum only contributory exceptions and page faults will cause a triple fault shutdown whereas a benign exception may not
ia32_mc1_status msr 405h bit60 en error enabled is supposed to indicate whether the enable bit in the ia32_mc1_ctl msr 404h was set at the time of the last update to the ia32_mc1_status msr due to this erratum ia32_mc1_status msr bit60 instead reports the current value of the ia32_mc1_ctl msr enable bit
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80bit fp access load or store uses a 32bit address size in 64bit mode and the memory access wraps a 4gbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
under an unlikely and complex sequence of conditions in 64bit mode a register ip relative instruction result may be incorrect
rf resume flag bit 16 of the eflagsrflags register is used to restart instruction execution without getting an instruction breakpoint on the instruction following a debug breakpoint exception due to this erratum in a system supporting intel virtualization technology when a vm exit occurs due to virtual apicaccess advanced programmable interrupt controlleraccess the eflagsrflags saved in the vmcs virtualmachine control structure may contain an rf value of 0
in systems supporting intel virtualization technology if a vmcall failure occurs due to a corrupt monitor segment mseg subsequent vm exits may load machine state incorrectly
the fixed function performance counters that count the number of core cycles and reference cycles when the core is not in a halt state are not cleared when the processor is reset
bios may contain the option to disable cmp core multiple processing disabling cmp configures a processor for single core operation due to this erratum a multicore processor operating with cmp disabled may not be able to enter intel enhanced deeper sleep if a sipi startup interprocessor interrupt is sent to the disabled processor
the logical processor may hang if an instruction performs a vtpr access and the next instruction to be executed is located on a different code page
intel adaptive thermal monitor has the ability to use multiple frequencyvoltage operating points to cool the processor while maintaining a high level of performance if intel dynamic front side bus frequency switching is active activation of the intel adaptive thermal monitor may transition the processor to the correct operating point voltage but not frequency this may occur if 1 the softwareos requests to go to a higher performance enhanced intel speedstep technology operating point during the thermal monitor activation period 2 an entry into c4 state or intel enhanced deeper sleep interrupts the transition between the intel dynamic front side bus frequency switching frequency and the targeted thermal monitor operating point frequency
the gigabit ethernet gigabit ethernet controllers software defined pin aux1 when used as the ieee1588 v2 auxiliary device connection for external clock synchronization may miss incoming pulses
the sata transmit buffers have been designed to maximize performance including a variety of routing scenarios as a result the sata transmit levels may exceed the maximum motherboard transmit tx connector and the device receive rx connector voltage specifications as defined in section 721 of the serial ata specification for both sata gen1 15 gbs and gen2 3 gbs speeds
disabling one uart universal asynchronous receiver transmitter by setting bit 0 or bit 1 in the uart_cont register bus 0 device 31 function 0 offset 80h will incorrectly disable both uarts
if a usb fullspeed transaction is started near the end of a microframe the soc may receive more than 189 bytes for the next microframe
when the local apic is configured for virtual wire mode b the system may hang the local apic supports 8259 virtual wire a and symmetric interrupt modes
the pcie receiver circuits may violate zrxhighimpdcpos as defined in section 4345 of the pci express base specification revision 30 this applies to the 25 gbs and the 5 gbs transfer rates
the pcie root port rootcapcrssv bus 0 device 14 function 0 offset 5eh bit 0 field indicates that the root port is capable of returning crs configuration request retry status completion status to software due to this erratum the default value of this bit is set to 1 incorrectly indicating that crs is supported
upon receipt of an unexpected completion the pcie root port bus 0 device 14 function 0 may log a receiver overflow error in addition to an unexpected completion error
during bios enumeration the legacy smbus controller indicates a 32 bytes bar size while the design allocation size is 2kb
systems may fail to boot if the processors gigabit ethernet controllers associated configuration eeprom is not properly configured or has not been installed on the platform
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
the processors supporting the intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
the processor may fail to detect a cs limit violation on fetching the first instruction after vm entry if the first byte of that instruction is outside the cs limit but the last byte of the instruction is inside the limit
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
due to this erratum a pebs precise event base sampling record generated after an operation which changes csbase may contain an incorrect address in the eventingip field
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by clearing the ia32_perf_global_ctrl msr 38fh due to this erratum when freeze_perfmon_on_pmi is enabled and two or more pmcs overflow within a small window of time and pmi is requested then subsequent pmc overflows may not be logged in ia32_perf_global_status msr 38eh
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
a redirection of the rsm instruction to probe mode may not generate the lbr last branch record record that would have been generated by a nonredirected rsm instruction
during resume from global suspend the rmh controller may not send sof soon enough to prevent a device from entering suspend again a collision on the port may occur if a device initiated remote wake occurs before the rmh controller sends sof  note
ag3e after g3 enable pin strap is correctly written to the gen_pmcon1ag3e register bit bus 0 device 31 function 0 offset 44h bit 0 after a poweron but may not be correctly utilized during poweron sequencing
the default behavior of the soc pcie electrical idle detection circuit does not guarantee detection of 100mhz toggling signal as recommended by the implementation note in pcie 30 base specification section 42622
pcie elasticity buffer errors may be observed by the ltssm link training status state machine outside of the configl0 states
a pcie root port may incorrectly determine a tlp transaction layer packet is poisoned and logs an error in the pcistsdpe field bus 0 devices 14 function 0 offset 06h bit 15 and if the associated pcicmdper field bus 0 devices 14 function 0 offset 04h bit 6 is set the pcistsmdpe bus 0 devices 14 function 0 offset 06h bit 8 field
an interrupt programmed in the io apic to be triggered by a rising edge may be lost if the irq line is deasserted prior to the interrupt delivery to the core
a processor pcie link may hang while exiting the l1 link power state
a masked unsupported request error occurring simultaneously with a detected internal parity or unexpected completion error within the pcie root complex may prevent the escalation of internally detected errors to the rcec root complex event collector for interrupt generation
when the gigabit ethernet controller function 0 is disabled that function should be replaced by a dummy function due to this erratum the dummy functions address space is not compatible with the processor system fabric
if the address of the last data byte transferred ie buffer base address  length  1 in an smbus master transaction modulo 16 is inclusively between 0 and 7 the smbus controller may spuriously detect a parity error
interrupts that target a logical processor whose local apic is either in the process of being hardware disabled by clearing by bit 11 in the ia32_apic_base_msr or software disabled by clearing bit 8 in the spuriousinterrupt vector register at offset 0f0h from the apic base are neither delivered nor discarded
the dts digital thermal sensor cannot report a value below 27c for skus c2308 and c2508
the pcu platform control unit in soc may not be able to process concurrent accesses to the gpio registers due to this erratum read instructions may return 0xffffffff and write instructions may be dropped
after pcie flow control initialization completes successfully the link enters the dl_active state and additional flow control initialization packets should not be received due to this erratum the processor may fail to discard flow control initialization packets inadvertently received while in dl_active state
during boot the gigabit ethernet controller loads a configuration image due to this erratum when booting from acpi state g3 mechanical off with wakeonlan support disabled the configuration image may not load correctly leading to non functional gigabit ethernet interfaces
an msr write which sets ia32_perf_global_ovf_ctrl msr 390h bits 1 andor 0 may not clear the corresponding bits of ia32_perf_global_status msr 38eh if neither ia32_pmc0 nor ia32_pmc1 are enabled at the time of the msr write and at least one of the fixedfunction performance counters is enabled
on an smi systemmanagement interrupt the processor stores the rip of the next instruction in smram systemmanagement ram due to this erratum an smi that occurs while the processor is in 64bit mode with a nonzero value in the cs segment base may result in an incorrect rip being stored in smram
the over error overflow indication in bit 62 of the ia32_mc0_status msr 401h may not be set if ia32_mc0_statusmcacod bits 150 held a value of 0x3 external error when a second machine check occurred in the mc0 bank additionally the over indication may not be set if the second machine check has an mcacod value of 0x810 0x820 or 0x410 regardless of the first error
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
writing the general control register may cause the top swap mechanism to become incorrectly configured resulting in unreliable boot behavior
the invvpid and mov to cr3 instructions may fail to invalidate tlb entries that were created using ept pagingstructure entries in which bit 8 was set
the boundary scan chain is not functional in c2308 and c2508 series processors
rdtsc instructions executed in close proximity may return the same value at high cpu frequencies
when a cpuid instruction is executed with eax  0ah architectural performance monitoring leaf the value returned in edx may incorrectly set bit 14 cpuid leaf 0ah edx bit 14 is reserved and should be zero
in some cases an uncorrectable memory ecc error is not logged in ia32_mc5_status but instead is logged in ia32_mc0_status msr 401h
the boundary scan chain is not functional if soft straps are configured to disable sata 2 andor sata 3
an apicaccess vm exit or a vm exit due to an ept extended page table violation or an ept misconfiguration that occurs during execution of the intn instruction in virtual 8086 mode eflagsvm  1 with virtualmode extensions cr4vme  1 may save an incorrect value for rflags in the gueststate area of the vmcs
clearing bit 5 of a logical processors ia32_mc0_ctl msr 400h may incorrectly block notifying other logical processors of any local machine check
certain internal conditions may cause one or more usb ports to fail at system power on
the lpc_clkrun pin should be an inputopen drain output signal as stated for the clkrun signal in section 2 of the intel low pin count lpc interface specification revision 11 due to this erratum if the signal is configured to be an output signal the buffer may drive an active high level
if a performance counter overflow or pebs precise event based sampling record generation is unable to trigger a pmi performance monitoring interrupt due to the pmi lvt local vector table entrys mask bit being set the pmi should be dropped due to this erratum the pmi may instead be pended and may be taken after the pmi lvt entry mask bit is cleared
when an overflow indication in ia32_perf_global_status msr 38eh is cleared via either the logging of a pebs precise event based sampling record or an msr write to ia32_perf_global_ovf_ctrl msr 390h a simultaneous counter overflow may not set its corresponding overflow bit
certain malformed ipv6 extension headers are not processed correctly
the soc lpc_clkout0 andor lpc_clkout1 signals low pin count bus clock outputs may stop functioning
access to unimplemented isp image signal processor registers should result in a software error due to this erratum the transaction may not complete
quad word 64 bit data transactions to access two adjacent 32bit registers of soc internal devices may cause system hang
due to this erratum only aligned dword accesses to gpio registers function correctly this erratum applies to gpio registers whether in mmio space or io space
the csi camera serial interface ecc error correcting code implementation may not correctly handle singlebit errors in the ecc field and may incorrectly flag as doublebit errors
usb device mode is supported by the soc via the ulpi utmi low pin interface bus the ulpi bus may exhibit read timing marginalities resulting in a hold time violation
the pme_en bit 8 and pme_status bit 15 in xhcis pci pmcsr bus 0 device 20 function 0 offset 0x74 do not comply with the pci specification
use of an asynchronous abort command to recover from an emmc transfer error or use of a high priority interrupt stop_transmission command may result in a hang
if the encoding for the type field for a superspeed packet is set to a reserved value and the encoding for the subtype field is set to ack the xhci may accept the packet as a valid acknowledgement transaction packet instead of ignoring the packet note the usb 30 specification requires that a device never set any defined fields to reserved values
the xhci does not transition to the ssinactive usb 30 ltssm link training and status state machine state after a superspeed device fails to enter u3 upon three consecutive attempts note the usb 30 specification requires a superspeed device to enter u3 when directed
sdio sd card and emmc controllers should not indicate the support of optional suspendresume feature documented in the sd host controller standard specification version 30 due to this erratum the default value in the capabilities register offset 040h incorrectly indicates to the software that this feature is supported
this erratum impacts sdio sd card and emmc sd host controllers auto cmd error status register offset 03ch bits 71 may be incorrectly set for softwareissued commands for example cmd13 that generate errors when issued close to the transmission of an auto cmd12 command in addition the error interrupt status register bits offset 032h are similarly affected
this erratum impacts sdio sd card and emmc sd host controllers when software reset is asserted registers such as sdma system address  argument 2 offset 00h in sd host controller are not cleared failing to comply with the sd host controller specification 30
sd card interface io circuitry is not optimized for platform conditions during operation at 33 v
the clock and power control of the sd card controller are not linked therefore the sd card controller does not automatically disable the sd card clock when the sd card power is disabled
when acg auto clock gating is enabled in sd and sdio controllers the reset sequence may take longer than expected possibly resulting in a software timeout
if a device is attached while the platform is in s3 or s4 and the device is assigned the highest assignable slot id upon resume the xhci may attempt to access an unassigned main memory address
the usb 30 host and device controllers lfps low frequency periodic signal detect threshold is higher than the usb 30 specification maximum of 300 mv
the xhci controller does not return a value of 0 for slot id in the command completion event trb transfer request block for a set latency tolerance value command note this violates the command completion event trb description in section 6422 of the extensible host controller interface for universal serial bus xhci specification revision 10
if a superspeed device sends a dph data packet header to the xhci with a data length field that specifies less data than is actually sent in the dpp data packet payload the xhci will accept the packet instead of discarding the packet as invalid note the usb 30 specification requires a device to send a dpp matching the amount of data specified by the dph
the xhci may incorrectly handle a request from a lowspeed or fullspeed device when all the following conditions are true the sum of the packet fragments equals the length specified by the td transfer descriptor the td length is less than the mps max packet size for the device the last packet received in the transfer is 0 or babble bytes
during resume from global suspend the rmh controller may not send sof soon enough to prevent a device from entering suspend again a collision on the port may occur if a device initiated remote wake occurs before the rmh controller sends sof note intel has only observed this issue when two usb devices on the same rmh controller send remote wake within 30 ms window while rmh controller is resuming from global suspend
if a usb fullspeed inbound isochronous transaction with a packet length 190 bytes or greater is started near the end of a microframe the soc may see more than 189 bytes in the next microframe
if software violates usb periodic scheduling rules for fullspeed isochronous traffic by overscheduling the rmh may not handle the error condition properly and return a completion split with more data than the length expected
if the eop of the last packet in a usb isochronous split transaction transaction 189 bytes is dropped or delayed 3 ms or longer the following may occur if there are no other pending lowspeed or fullspeed transactions the rmh will not send sof or keepalive devices connected to the rmh will interpret this condition as idle and will enter suspend if there is other pending lowspeed or fullspeed transactions the rmh will drop the isochronous transaction and resume normal operation
the integrated usb rmh incorrectly prioritizes fullspeed and lowspeed asynchronous retries over dispatchable periodic transfers
a usb lowspeed transaction may be retried more than three times and a usb full speed transaction may be retried less than three times if all of the following conditions are met a usb lowspeed transaction with errors or the first retry of the transaction occurs near the end of a microframe and there is not enough time to complete another retry of the lowspeed transaction in the same microframe there is pending usb fullspeed traffic and there is enough time left in the microframe to complete one or more attempts of the fullspeed transaction both the lowspeed and fullspeed transactions must be asynchronous bulk control and must have the same direction either in or out note per the usb ehci specification a transaction with errors should be attempted a maximum of three times if it continues to fail
the usb rmh think time may exceed its declared value in the rmh hub descriptor register of 8 fullspeed bit times
if two or more usb fulllowspeed devices are connected to the ehci usb controller the devices are not suspended and one device is removed one or more of the devices remaining in the system may be affected by the disconnect
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
the processor may fail to detect a cs limit violation on fetching the first instruction after vm entry if the first byte of that instruction is outside the cs limit but the last byte of the instruction is inside the limit
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
due to this erratum a pebs precise event base sampling record generated after an operation which changes csbase may contain an incorrect address in the eventingip field
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by clearing the ia32_perf_global_ctrl msr 38fh due to this erratum when freeze_perfmon_on_pmi is enabled and two or more pmcs overflow within a small window of time and pmi is requested then subsequent pmc overflows may not be logged in ia32_perf_global_status msr 38eh
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
the sd bus power bit in power control register bus 0 device 17 function 0 offset 029h is not connected to any soc io pin that can reset the sdio bus power due to this erratum sdio device poweronreset cannot be controlled by power control register sdio controller may fail to comply with sd host controller specification version 300
the dr device removable bit in the portsc registers of the two usb hsic ports incorrectly indicates that devices on these ports may be removed
the isp image signal processor may not be able to process concurrent accesses
setting the sdio controllers host control 2 register asynchronous interrupt enable bus 0 device 17 function 0 offset 03eh bit 14 to 1 before the signal voltage switch sequence completion may result in sdio card initialization failure
if software modifies a paging structure entry while the processor is using the entry for linear address translation the processor may erroneously use the old value of the entry to form a translation in a tlb or an entry in a paging structure cache and then update the entrys new value to set the accessed flag or dirty flag this will occur only if both the old and new values of the entry result in valid translations
due to this erratum when an emmc host controller software reset is requested by setting bit 0 of the software reset register offset 2fh the command response register offset 10h and adma error status register offset 54h are not cleared this does not comply with the sd host controller specification 30
when lpe low power engine audio is active the hdaudio controller can be disabled due to this erratum the lpe audio is dependent on hdaudio controller being enabled
the usb device mode controller may initiate speed change to high speed data rate immediately following a reset of a discrete ulpi utmi low pin interface compliant phy physical layer device
the usb ulpi specification allocates 112 bit times for the usb device mode controller to respond to requests due to this erratum the socs device mode controller may exceed this specification
when operating at superspeed rates the pending_hp_timer is used to detect lost or corrupted acknowledgements the usb30 specification requires a usb port to transition to the ssinactive state on the fourth consecutive timeout due to this erratum the usb device mode controller in device mode will continue to enter recovery state and not enter the ssinactive state
one or more fulllowspeed usb devices on the same rmh controller may be affected if the devices are not suspended and either a software issues a port reset or b software issues a clear tt buffer request to a port executing a split fulllowspeed asynchronous out command the small window of exposure for fullspeed device is around 15 microseconds and around 12 microseconds for a lowspeed device
upon usb device mode controller superspeed u1 lowpower state exit the lfps lowfrequency periodic signaling signal may be transmitted for less than the 600ns required by usb30 specification
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
if the monitor trap flag vmexecution control is 1 and vm entry is performing event injection an mtf vm exit should be delivered immediately after the vm entry due to this erratum delivery of the mtf vm exit may be delayed by one instruction if the event being injected is a software interrupt and if the guest state being loaded has rflagsvm  cr4vme  1 in this case the mtf vm exit is delivered following the first instruction of the software interrupt handler
when freeze_lbrs_on_pmi flag bit 11 in ia32_debugctl msr 1d9h is set the lbr last branch record stack is frozen on a hardware pmi performance monitoring interrupt request when freeze_perfmon_on_pmi flag bit 12 in ia32_debugctl msr is set a pmi request clears each of the enable fields of the ia32_perf_global_ctrl msr 38fh to disable counters due to this erratum when freeze_lbrs_on_pmi andor freeze_perfmon_on_pmi is set in ia32_debugctl msr and the local apic is disabled or the pmi lvt is masked the lbr stack andor performance counters freeze on pmi may not function correctly
mipi mobile industry processor interface csi camera serial interface dphy may drop packets if the mipi csi clock frequency is below 80mhz and if camera sensor uses thsexit less than 200ns
smis are routed using the pmc power management controller smi_sts and smi_en registers however the usb smi enable usb_smi_en and usb status usb_sts fields only reflect smis for the ehci usb controller smis triggered by the xhci controllers usblegctlsts mechanism are not available
the sd card specification rev 301 addendum 1 specifies a relaxed ncrc number of clocks to cyclic redundancy check timing specification for uhsi ddr50 mode due to this erratum the sd host controller is not fully compatible with this relaxed timing specification
when a usb 30 or usb 20 hub with numerous active fullspeed fs or lowspeed ls periodic endpoints attached is removed and then reconnected to an usb xhci port the xhci controller may fail to fully refresh its cache of trb records the controller may read and execute a stale trb and place a pointer to it in a transfer event trb
under certain conditions generally involving extended simultaneous video and hd audio playback andor recording glitches distortion or persistent muting of the audio stream may occur due to improper processing of input stream data or response packets
the pcie specification requires the ltssm to enter detect within 20 ms of the end of fundamental reset due to this erratum the soc may violate this specification
sata transmit buffers have been designed to maximize performance and robustness over a variety of routing scenarios as a result the sata transmit signaling voltage levels may exceed the maximum motherboard tx connector and device rx connector voltage specifications as defined in section 7223 of the serial ata specification rev 31 this issue applies to gen 1 15 gbs and gen 2 3 gbs
the pcie root ports may return an unsupported request ur completion with an incorrect lower address field in response to a memory read if any of the following occur bus master enable is disabled in the pcie root ports command register pcicmd bit 2 0 address type at field of the transaction layer packet tlp header is nonzero the requested upstream address falls within the memory range claimed by the secondary side of the bridge requester id with bus number of 0
the max luminance voltage on the vga video outputs may range from 640 mv to 810mv the vesa specification range is 665 mv to 770mv with linearity inldnl of up to 3 lsb the vesa linearity specification is 1 lsb
when acg auto clock gating is enabled in sd controller sdclk may get turned off before voltage switch sequence is complete possibly resulting in an initialization failure
under certain conditions the soc may not complete initialization either during a reset issued while the system is running or from the g3 mechanically off global system state
the pcu platform control unit in soc may not be able to process concurrent accesses to the gpio registers due to this erratum read instructions may return 0xffffffff and write instructions may be dropped
during boot the system should be able to handle smis system management interrupt due to this erratum boot may not complete when smi occurs during boot
interrupts that target a logical processor whose local apic is either in the process of being hardware disabled by clearing bit 11 in the ia32_apic_base_msr or software disabled by clearing bit 8 in the spuriousinterrupt vector register at offset 0f0h from the apic base are neither delivered nor discarded
for l2 cache errors with ia32_mci_statusmcacod bits 150 value 0000_0001_0000_1010b the address reported in ia32_mci_addr msr may not be the address that caused the machine check
due to this erratum writing certain pmc power management controller registers with 8bit 16bit or nonnaturally aligned 32bit transfers may cause write1clear bits in adjacent fields to be unexpectedly cleared the affected registers are prsts vlv_pm_sts gen_pmcon1 s0ix_wake_sts pm1_sts_en gpe0a_sts smi_sts alt_gpio_smi uprwc tco_sts
hsic port0  port1 are dedicated to hsic devices while usb port0  port3 can be used for usb devices due to this erratum a traffic interrupt is caused on hsic port0 or hsic port1 when a port reset is issued by the driver on usb2 host port0 or usb2 host port1 respectively
when the cpuid instruction is executed with eax  80000002h 80000003h and 80000004h the frequency reported in the brand string may be truncated while the published frequency is rounded for example a processor with a frequency of 14999ghz may be reported as 149ghz in the brand string instead of the published frequency of 15ghz
the contents of several usb xhci host capability registers may be invalid after an s3 resume registers impacted by this erratum are hccparams hcsparams1 hcparams3 usb2_phy_pmc usb_pgc and xltp_ltv1
the over error overflow indication in bit 62 of the ia32_mc0_status msr 401h may not be set if ia32_mc0_statusmcacod bits 150 held a value of 0x3 external error when a second machine check occurred in the mc0 bank additionally the over indication may not be set if the second machine check has an mcacod value of 0x810 0x820 or 0x410 regardless of the first error
an msr write which sets ia32_perf_global_ovf_ctrl msr 390h bits 1 andor 0 may not clear the corresponding bits of ia32_perf_global_status msr 38eh if neither ia32_pmc0 nor ia32_pmc1 are enabled at the time of the msr write and at least one of the fixedfunction performance counters is enabled
on an smi systemmanagement interrupt the processor stores the rip of the next instruction in smram systemmanagement ram due to this erratum an smi that occurs while the processor is in 64bit mode with a nonzero value in the cs segment base may result in an incorrect rip being stored in smram
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
writing the general control register may cause the top swap mechanism to become incorrectly configured resulting in unreliable boot behavior
when an emmc embedded multimedia card lpe low power engine xdci usb device mode controller sdio secure digital input output or sd secure digital controller memory transaction encounters an unexpectedly long latency this may cause the controller to hang
if bios disables either the sdio or the sdcard but not both and follows the recommended sequence of placing the disabled controller in d3 the remaining enabled controller may stop functioning and hang the system if bios doesnt put the disabled controller in d3 the enabled controller will operate normally but entry to the s0ix low power state is blocked
usb device mode is supported by the soc via the ulpi utmi low pin interface bus the ulpi bus may exhibit read timing marginalities resulting in a hold time violation
ept extended page tables translates guestphysical addresses to physical addresses using ept paging structures bit 8 of each ept pagingstructure entry is available to software and should be ignored by the processor due to this erratum the invvpid and mov to cr3 instructions may fail to invalidate tlb entries that were created using ept pagingstructure entries in which bit 8 was set
when a cpuid instruction is executed with eax  0ah architectural performance monitoring leaf the value returned in edx may incorrectly set bit 14 cpuid leaf 0ah edx bit 14 is reserved and should be zero
when changing the processor frequency the soc may fail to update the usb descriptor prior to xhci consuming the descriptor when in isoc mode
certain internal conditions may cause the dsignal of one or more usb ports to get stuck at 33v during system poweron
an apicaccess vm exit or a vm exit due to an ept extended page table violation or an ept misconfiguration that occurs during execution of the intn instruction in virtual 8086 mode eflagsvm  1 with virtualmode extensions cr4vme  1 may save an incorrect value for rflags in the gueststate area of the vmcs
clearing bit 5 of a logical processors ia32_mc0_ctl msr 400h may incorrectly block notifying other logical processors of any local machine check
certain internal conditions may cause the system to reboot immediately after a shutdown
abnormal idle waveform 666ps observed intermittently during boot time before window logon screen on sata_tx signal under gen 1 speed mode
under certain conditions where activity is high for several years the lpc usb low speed and full speed and sd card circuitry may stop functioning in the outer years of use
the ilb_lpc_clkrun pin should be an inputopen drain output signal as stated for the clkrun signal in section 2 of the intel low pin count lpc interface specification revision 11 due to this erratum if the signal is configured to be an output signal the buffer may drive an active high level
xhci host controller may not respond following system software setting bit 11 the host controller reset hcrst of the usb command register xhcibar80h
a machine check error signaled by the memory subsystem may cause the processor to enter shut down state instead of delivering a machine check exception mc
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
a redirection of the rsm instruction to probe mode may not generate the lbr last branch record record that would have been generated by a nonredirected rsm instruction
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by clearing the ia32_perf_global_ctrl msr 38fh due to this erratum when freeze_perfmon_on_pmi is enabled and two or more pmcs overflow within a small window of time and pmi is requested then subsequent pmc overflows may not be logged in ia32_perf_global_status msr 38eh
the processor may fail to detect a cs limit violation on fetching the first instruction after vm entry if the first byte of that instruction is outside the cs limit but the last byte of the instruction is inside the limit
due to this erratum a pebs precise event base sampling record generated after an operation which changes csbase may contain an incorrect address in the eventingip field
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired errata
when freeze_lbrs_on_pmi flag bit 11 in ia32_debugctl msr 1d9h is set the lbr last branch record stack is frozen on a hardware pmi performance monitoring interrupt request when freeze_perfmon_on_pmi flag bit 12 in ia32_debugctl msr is set a pmi request clears each of the enable fields of the ia32_perf_global_ctrl msr 38fh to disable counters due to this erratum when freeze_lbrs_on_pmi andor freeze_perfmon_on_pmi is set in ia32_debugctl msr and the local apic is disabled or the pmi lvt is masked the lbr stack andor performance counters freeze on pmi may not function correctly
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
the over error overflow indication in bit 62 of the ia32_mc0_status msr 401h may not be set if ia32_mc0_statusmcacod bits 150 held a value of 0x3 external error when a second machine check occurred in the mc0 bank additionally the over indication may not be set if the second machine check has an mcacod value of 0x810 0x820 or 0x410 regardless of the first error errata
the fupfar flow update packet for far transfer generated by rtit real time instruction trace on a far transfer instruction should contain the linear address of the first byte of the next sequential instruction after the far transfer instruction due to this erratum far transfer instructions with more than 3 prefixes may incorrectly include an address between the first byte of the far transfer instruction and the last byte of the far transfer instruction
after an rtit real time instruction trace packet that exceeds the limit specified by pkt_mask in rtit_packet_count msr 77ch bits 1716 the psb packet stream boundary packet should be sent immediately due to this erratum the psb packet may be delayed by one packet
if an rtit real time instruction trace tracestop condition is detected while rtit_statusbuffer_overflow msr 769h bit 3 is set the processor may not clear rtit_ctltraceactive msr 768h bit 13 and tracing will continue after the overflow resolves such a case will be evident if the tracestop packet is inserted before overflow is resolved as indicated by the fupbuffovf flow update packet for buffer overflow packet
when rtit real time instruction trace suffers an internal buffer overflow packet generation stops temporarily after which a fupbuffovf flow update packet for buffer overflow is sent to indicate the lip that follows the instruction upon which tracing resumes in some cases however this packet will be immediately followed by a fuptip flow update packet for target ip which was generated by a branch instruction that executed during the overflow the ip payload of this fuptip will be the lip of the instruction upon which tracing resumes
when rtit real time instruction trace is enabled with rtit_ctlcyc_acc msr 768h bit 1 set to 1 all cyc cycle count packets have a payload value that is one less than the number of cycles that have actually passed note that for cyc packets with a payload value of 0 the correct value may be 0 or 1
during poweron when the soc is used in device mode instead of host mode the usb dd line may have a 2 sec glitch to 33 v
due to this erratum the rgb666 format support on the soc has restrictions on the horizontal resolution for single link mipi dsi display serial interface the horizontal resolution must be evenly divisible by 4 for dual link mipi dsi onehalf the horizontal resolution plus the overlapping pixels must be evenly divisible by 4 errata
jedec standard jesd2093 requires a maximum power ramp duration tinit0 of 20ms due to this erratum the soc may not comply with the tinit0 specification
due to this erratum hdmi highdefinition multimedia interface and dvi digital visual interface ports may send data out at an incorrect rate that is different than the one requested when using certain pixel frequencies
mipi dphy specification v11 section 911 requires minimum tr rise time and tf fall time of 150ps for data rates of less than 1gbps due to this erratum the soc may exhibit rise time and fall time marginality on a mipi dsi interface with an 80 ohm or 100 ohm impedance
the xhci controller may not reset its split transaction error counter if a highspeed usb hub propagates a malformed bit from a lowspeed or fullspeed usb device exhibiting nonusb specification compliant signal quality
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
stick parity bit lcr5 line control register hsuart0_bar0 offset 0ch bit 5 for hsuart0 and hsuart1_bar0 offset 0ch bit 5 for hsuart1 does not follow the 16550 specified behavior instead the parity bit is always logic 0
access to undocumented unimplemented mmio space should result in a software error due to this erratum an access to undocumented unimplemented mmio space may not complete
after processing a usb wake event the usb xhci controller may not reenter d3 state
the preset_value cmd12_err_stat_host_ctrl_2 csr at bus 0 device 18 function 0 mmio offset 3ch bit 31 does not change the sd card sdio bus transfer frequency as required by the sd host controller standard specification version 30
under certain complex 3d render pipeline conditions the graphics subsystem may experience an incorrect pixel alpha component in the render target
when a complex microarchitectural condition occurs concurrently with the generation of a rtit realtime instruction trace psb packet stream boundary packet the packets that immediately follow the psb could precede or overwrite some older packets this erratum applies to no more than 21 packets immediately following the psb errata
usb 30 debug port may hang when removing the usb debug device note this issue has only been observed infrequently during usb debug connector unplug events
moving the cursor rapidly towards the edges of the display connected to pipec may result in loss of display display flickering or other display artifact requiring a display pipe restart
the pcu platform control unit in soc may not be able to process concurrent accesses to the gpio registers due to this sighting read instructions may return 0xffffffff and write instructions may be dropped
device mode may not be functional when connected to usb 1x host or hub
clearing pwm_enable field bit 31 in pwmctrl registers bus 0 device 30 function 12 offset 10h should disable pwm pulse width modulation output however due to this erratum the pwm10 signals may remain enabled after clearing pwm_enable under certain conditions
at power on leakage from the v1p05a power rail to the v1p8a power rail may result in raising the v1p8a rail to about 400mv prior to that rail being powered
the protocol speed id count psic field incorrectly reports a value of 3 psic should report 6 indicating ssic support
if usb 20 device supports hardware lpm and causes the host to initiate l1 then the host may inadvertently generate a transaction error during the hardware lpm entry process
usb 20 ports may not function after the system is powered on
if a performance counter overflow or pebs precise event based sampling record generation is unable to trigger a pmi performance monitoring interrupt due to the pmi lvt local vector table entrys mask bit being set the pmi should be dropped due to this erratum the pmi may instead be pended and may be taken after the pmi lvt entry mask bit is cleared
when an overflow indication in ia32_perf_global_status msr 38eh is cleared via either the logging of a pebs precise event based sampling record or an msr write to ia32_perf_global_ovf_ctrl msr 390h a simultaneous counter overflow may not set its corresponding overflow bit
some systems may hang shortly after a cold reset this will lead to timeout and a warm reset which causes the boot to take an additional 5 seconds if global reset is not implemented as specified by the platform design guide the warm reset may lead to a system shutdown
the processor may not wake after a sleep state entered with mwait target cstate of c6 and sub cstate of 2 or a target cstate deeper than c6 is requested
lpc serr events are incorrectly propagated to trigger the nmi interrupt when the see field of the pcie_reg_command register bus 0 device 31 function 0 offset 4h is cleared this erratum only affects systems with attached lpc devices that signal serr events
the usb 30 host controller may incorrectly detect lfps low frequency periodic signal on certain soc parts
when subjected to eft electric fast transient events the xhci host controller usb 20 interface may not meet ce certification requirements according to iec 6100044 connected to a usb device with an unshielded cable on a usb2 root port
the system may hang when ddr dynamic selfrefresh is enabled
when the system enters s0i3 sleep state the contents of usb3 phy configuration registers may change sometimes
an access to xhci configuration space within 1ms of setting the xhci hcrst host controller reset bit of the usb command register xhcibar offset 80h bit 1 or a second setting of the hcrst bit within 120ms may cause the xhci host controller to fail to respond
under certain conditions where s0ix is not implemented and activity is high for several years the lpc rtc and sd card may stop functioning in the outer years of use
a read from the apicaccess page that splits a cacheline boundary should cause an apicaccess vm exit due to this erratum the processor may redirect such accesses to the virtualapic page without causing an apicaccess vm exit
due to this erratum a pebs precise event base sampling record generated after an operation that changes the csbase may contain an incorrect address in the eventingip field
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes errata subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
a supervisormode data access through a usermode page should cause a pf if cr4smap supervisormode access prevention is 1 and eflagsac is 0 due to this erratum a guest supervisor mode access to the apicaccess page may cause an apicaccess vm exit instead of a pf due to smap
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by setting ctr_frz bit 49 in ia32_perf_global_status msr 38eh due to this erratum if freeze_perfmon_on_pmi is enabled pmc overflows that occur within a few cycles of a pmi being pended may not be logged in ia32_perf_global_status msr
due to this erratum a performance monitoring counter configured to count offcore_response1 event b7h umask 02h uses msr_offcore_rsp0corewb msr 1a6h bit 3 instead of the expected msr_offcore_rsp1corewb msr 1a7h bit 3
a debug exception should be generated on a read which accesses an address specified by a breakpoint address register dr0dr3 and its lenn field in dr7 configured to monitor data reads due to this erratum under complex micro architectural conditions the processor may not trigger a debug exception on a memory read that spans a cacheline boundary
cr3115 are used to locate the pagedirectorypointer table only in pae paging mode when using intel pt processor trace those bits of cr3 are compared to ia32_rtit_cr3_match msr 572h when ia32_rtit_ctlcr3filter msr 570h bit 7 is set independent of paging mode
if intel pt processor trace encounters an internal buffer overflow and generates an ovf overflow packet just as ia32_rtit_ctl msr 570h bit 0 traceen is cleared errata or during a far transfer that causes ia32_rtit_statuscontexten1 msr 571h to be cleared the ovf may be followed by a tippgd target instruction pointer  packet generation disable packet
certain intel pt processor trace packets including fups flow update packets should be issued only between tippge target ip packet  packet generation enable and tippgd target ip packet  packet generation disable packets when outside a tippgetippgd pair as a result of ia32_rtit_statusfilteren0 msr 571h being cleared an ovf overflow packet may be unexpectedly followed by a fup
an l2 eviction may affect the offcore_rsp1 and offcore_rsp2 events configured to count corewb when the eviction is caused by an access made by a different core sharing the l2 cache
due to this erratum a fbstp whose memory access causes an exception eg pf or gp or vm exit eg ept violation may unexpectedly update fop fip fdp fswie or fswpe fswes is not affected by this erratum
when performance monitoring counters are frozen due to ia32_perf_global_statusctr_frz msr 38eh bit 59 being set a pebs processor event based sampling record may still be generated for counter 0 when the event specified by ia32_perfevtsel0 msr 186h occurs
ia32_perf_global_inuse msr 392h bit 62 is reserved however due to this erratum it may sometimes be read as 1
in certain bistl tx compliance test setups on sata interface the first 10b in the mftp mid frequency test pattern ie 333h inserted by jbert has disparity mismatch with the previous 10b ie 363h of previous hftp high frequency test pattern block 333h has negative beginning disparity while 363h has positive ending disparity when soc detects disparity mismatch it does not recompute the running disparity based on the received 333h
sdemmc dma transfers using 32bit addressing mode may lead to unpredictable system behavior
vdd2 power rail cannot operate at 135v
the soc sata host controller oob out of band host responses oob transmit gap and oob transmit burst length do not pass serial ata interoperability program revision 143 unified test document version 101 tests oob03ab oob05 and oob06ab
a single machine check event may incorrectly set over bit 62 of ia32_mc4_status msr 411h the affected mca events are unsupported idi opcode mcacod 0x0408 mscod 0x0000 wbmto access to mmio mcacod 0x0408 mcacod 0x0003 and clflush to mmio mcacod 0x0408 mcacod 0x0004
the shadow register for ddr3l mr2 d_cr_tqoffsetmr_value is only 10 bits whereas the mr2 register in dram devices is 11 bits
setting crstb bit 0 at intel hd audio base address  8 to zero when opening and closing audio streams may result in audio glitches
if usb 20 device supports hardware lpm low power mode and causes the host to initiate l1 then the host may inadvertently generate a transaction error during the hardware lpm entry process
xhci violates usb 3 specification for tu3wakeupretrydelay which dictates time to initiate the u3 wakeup lfps handshake signaling after an unsuccessful lfps handshake xhci employs 12us for tu3wakeupretrydelay instead of 100ms as defined per spec
invalid instruction fields on flash invalid instructions registers flill  fcbah  004h flill1  fcbah  008h in flash descriptor contains opcodes that flash controller should protect against spi flash transactions will fail unless nonzero op code is written to the invalid instruction fields errata
usb specification requires 1ms resume reflection time from platform to the device indicating usb resumewake due to this erratum soc implementation violates the usb2 timing specification
due to this erratum the soc may fail to correctly execute the d3 entry flow or the d3 exit flow for certain integrated pcie functions
pm1_sts_enwak_sts offset 0h bit 15 is supposed to be set to 1 only upon exit from a valid sleep state due to this erratum this bit gets set to 1 by a valid and enabled wake source during s0 and s0ix
one use of the monitormwait instruction pair is to allow a logical processor to wait in a sleep state until a store to the armed address range occurs due to this erratum stores to the armed address range may not trigger mwait to resume execution
if the bme bus master enable bit in the isp image signal processor device 3 pci configuration space is deasserted while the camera device is processing an image the system may hang
when disabled or placed in d3 state by bios the sd card and sdio storage controllers may not be power gated unless this is done prior to the emmc controller being disabled or placed in d3 state
reading an intel th trace hub register bus 0 device 0 function 2 offset is register specific may fail after attempting to write an undefined intel th register location undefined locations are those not documented in the intel trace hub developers manual
if pcicmd_pcistsbme bus configured by bios device 3 function 0 offset 4h bit 2 is deasserted without first stopping the isp camera driver the system may hang
an inv_wait_dsc invalidation wait descriptor with if0 do not generate an interrupt on completion and sw0 do not write statusword on completion will prevent vtd from processing subsequent commands
vtd engines that do not advertise svm shared virtual memory capability should treat the 32bit registers at vtdbar offsets 0xdc 0xe0 0xe4 0xe8 and 0xec as reserved and readonly due to this erratum these registers are writeable
due to this erratum the sequence used to change vtd event interrupt service routine configuration for fault events and for invalidation events may not work as expected specifically reading one of the associated configuration registers does not serialize vtd event interrupts as a result vtd event interrupts that were issued using the previous interrupt service configuration may be delivered after software has observed the interrupt service configuration to be updated errata
under certain platform configurations and conditions when the soc asserts thermtrip_n it may not meet the volmax specification
the xhci host controller may fail to respond due to an internal race condition if consecutive xhci host controller resets are performed
accesses to a tpm device attached on fast spi bus will not succeed unless a flash device is also attached on fast spi bus
after processing a usb 30 wake event the usb xhci controller may not reenter d3 state
updating or disabling xhci controller driver will disable xhci rtd3 power gating preventing the soc from entering s0ix sleep states
intel th trace hub pti parallel trace interface pattern generator feature is used to test the connectivity between pti port and trace capture hardware due to this erratum once enabled the pattern generator may hang if the width is decreased
the rtitcnt field bits1916 of the sthcap1 csr offset 04004h from mtb_bar does not indicate the correct number of channels supported by intel trace hub for intel processor trace
when both msi message signaled interrupts and legacy intx are enabled by the camera device intx is asserted rather than issuing the msi in violation of the pci local bus specification
under certain conditions where activity is high for several years the lpc rtc sd card and gpio termination circuitry may stop functioning in the outer years of use
due to this erratum only aligned dword accesses to gpio registers function correctly this erratum applies to gpio registers whether in mmio space or io space
quad word 64 bit data transactions to access two adjacent 32 bit registers of soc internal devices that do not support such transactions may cause system hang
the pcie specification requires the ltssm link training and status state machine to enter detect within 20 ms of the end of fundamental reset due to this erratum the soc may violate this specification
the usb 30 host and device controllers lfps low frequency periodic signal detect threshold is higher than the usb 30 specification maximum of 300 mv
the xhci controller does not return a value of 0 for slot id in the command completion event trb transfer request block for a set latency tolerance value command note this violates the command completion event trb description in section 6422 of the extensible host controller interface for universal serial bus xhci specification revision 10
sata transmit buffers have been designed to maximize performance and robustness over a variety of routing scenarios as a result the sata transmit signaling voltage levels may exceed the maximum motherboard tx connector and device rx connector voltage specifications as defined in section 7223 of the serial ata specification rev 31 this issue applies to gen 1 15 gbs and gen 2 3gbs
the pme_en bit 8 and pme_status bit 15 in xhcis pci pmcsr bus 0 device 20 function 0 offset 0x74 do not comply with the pci specification
if a device is attached while the platform is in s3 or s4 and the device is assigned the highest assignable slot id upon resume the xhci may attempt to access an unassigned main memory address
if a superspeed device sends a dph data packet header to the xhci with a data length field that specifies less data than is actually sent in the rsm data packet payload the xhci will accept the packet instead of discarding the packet as invalid note the usb 30 specification requires a device to send a dpp matching the amount of data specified by the dph
if the encoding for the type field for a superspeed packet is set to a reserved value and the encoding for the subtype field is set to ack the xhci may accept the packet as a valid acknowledgement transaction packet instead of ignoring the packet note the usb 30 specification requires that a device never set any defined fields to reserved values
the xhci does not transition to the ssinactive usb 30 ltssm link training and status state machine state after a superspeed device fails to enter u3 upon three consecutive attempts note the usb 30 specification requires a superspeed device to enter u3 when directed
the xhci may incorrectly handle a request from a lowspeed or fullspeed device when all the following conditions are true the sum of the packet fragments equals the length specified by the td transfer descriptor the td length is less than the mps max packet size for the device the last packet received in the transfer is 0 or babble bytes
the pcie root ports may return an unsupported request ur completion with an incorrect lower address field in response to a memory read if any of the following occur bus master enable is disabled in the pcie root ports command register pcicmd bit 2 0 address type at field of the transaction layer packet tlp header is nonzero the requested upstream address falls within the memory range claimed by the secondary side of the bridge requester id with bus number of 0
during resume from global suspend the rmh controller may not send sof soon enough to prevent a device from entering suspend again a collision on the port may occur if a device initiated remote wake occurs before the rmh controller sends sof note intel has only observed this issue when two usb devices on the same rmh controller send remote wake within 30 ms window while rmh controller is resuming from global suspend
the smbus data hold time may be less than the 300 ns minimum defined by the bay traildm soc system on chip external design specification eds
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
the processor may fail to detect a cs limit violation on fetching the first instruction after vm entry if the first byte of that instruction is outside the cs limit but the last byte of the instruction is inside the limit
freeze_perfmon_on_pmi bit 12 in the ia32_debugctl msr 1d9h is erroneously cleared during delivery of an smi systemmanagement interrupt
due to this erratum a pebs precise event base sampling record generated after an operation which changes csbase may contain an incorrect address in the eventingip field
when enabled freeze_perfmon_on_pmi bit 12 in ia32_debugctl msr 1d9h freezes pmcs performance monitoring counters on a pmi performance monitoring interrupt request by clearing the ia32_perf_global_ctrl msr 38fh due to this erratum when freeze_perfmon_on_pmi is enabled and two or more pmcs overflow within a small window of time and pmi is requested then subsequent pmc overflows may not be logged in ia32_perf_global_status msr 38eh
an execution of movntdqa that loads from wc write combining memory may appear to pass an earlier locked instruction to a different cache line
performance monitor instructions retired event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to track the number of instructions retired due to this erratum certain situations may cause the counters to increment when no instruction has retired or to not increment when specific instructions have retired
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
the dr device removable bit in the portsc registers of the two usb hsic ports incorrectly indicates that devices on these ports may be removed
if software modifies a paging structure entry while the processor is using the entry for linear address translation the processor may erroneously use the old value of the entry to form a translation in a translation lookaside buffer tlb or an entry in a paging structure cache and then update the entrys new value to set the accessed flag or dirty flag this will occur only if both the old and new values of the entry result in valid translations
the max luminance voltage on the vga video outputs may range from 640 mv to 810mv the vesa specification range is 665 mv to 770mv with linearity inldnl of up to 3 lsb the vesa linearity specification is 1 lsb
sdio sd card and emmc controllers should not indicate the support of optional suspend resume feature documented in the sd host controller standard specification version 30 due to this erratum the default value in the capabilities register offset 040h incorrectly indicates to the software that this feature is supported
this erratum impacts sdio sd card and emmc sd host controllers auto cmd error status register offset 03ch bits 71 may be incorrectly set for softwareissued commands for example cmd13 that generate errors when issued close to the transmission of an auto cmd12 command in addition the error interrupt status register bits offset 032h are similarly affected
this erratum impacts sdio sd card and emmc sd host controllers when software reset is asserted registers such as sdma system address  argument 2 offset 00h in sd host controller are not cleared failing to comply with the sd host controller specification 30
use of an asynchronous abort command to recover from an emmc transfer error or use of a high priority interrupt stop_transmission command may result in a hang
the clock and power control of the sd card controller are not linked therefore the sd card controller does not automatically disable the sd card clock when the sd card power is disabled
when acg auto clock gating is enabled in sd and sdio controllers the reset sequence may take longer than expected possibly resulting in a software timeout
the sd bus power bit in power control register bus 0 device 17 function 0 offset 029h is not connected to any soc io pin that can reset the sdio bus power due to this erratum sdio device poweronreset cannot be controlled by power control register sdio controller may fail to comply with sd host controller specification version 300
setting the sdio controllers host control 2 register asynchronous interrupt enable bus 0 device 17 function 0 offset 03eh bit 14 to 1 before the signal voltage switch sequence completion may result in sdio card initialization failure
if the monitor trap flag vmexecution control is 1 and vm entry is performing event injection an mtf vm exit should be delivered immediately after the vm entry due to this erratum delivery of the mtf vm exit may be delayed by one instruction if the event being injected is a software interrupt and if the guest state being loaded has rflagsvm  cr4vme  1 in this case the mtf vm exit is delivered following the first instruction of the software interrupt handler
when freeze_lbrs_on_pmi flag bit 11 in ia32_debugctl msr 1d9h is set the lbr last branch record stack is frozen on a hardware pmi performance monitoring interrupt request when freeze_perfmon_on_pmi flag bit 12 in ia32_debugctl msr is set a pmi request clears each of the enable fields of the ia32_perf_global_ctrl msr 38fh to disable counters due to this erratum when freeze_lbrs_on_pmi andor freeze_perfmon_on_pmi is set in ia32_debugctl msr and the local apic is disabled or the pmi lvt is masked the lbr stack andor performance counters freeze on pmi may not function correctly
smis are routed using the pmc power management controller smi_sts and smi_en registers however the usb smi enable usb_smi_en and usb status usb_sts fields only reflect smis for the ehci usb controller smis triggered by the xhci controllers usblegctlsts mechanism are not available
the sd card specification rev 301 addendum 1 specifies a relaxed ncrc number of clocks to cyclic redundancy check timing specification for uhsi ddr50 mode due to this erratum the sd host controller is not fully compatible with this relaxed timing specification
under certain conditions generally involving extended simultaneous video and hd audio playback andor recording glitches distortion or persistent muting of the audio stream may occur due to improper processing of input stream data or response packets
when a usb 30 or usb 20 hub with numerous active fullspeed fs or lowspeed ls periodic endpoints attached is removed and then reconnected to an usb xhci port the xhci controller may fail to fully refresh its cache of trb records the controller may read and execute a stale trb and place a pointer to it in a transfer event trb
when the cpuid instruction is executed with eax  80000002h 80000003h and 80000004h the frequency reported in the brand string may be truncated while the published frequency is rounded for example a processor with a frequency of 2166667ghz may be reported as 216ghz in the brand string instead of the published frequency of 217ghz
under certain conditions the soc may not complete initialization either during a reset issued while the system is running or from the g3 mechanically off global system state
the pcu platform control unit in soc may not be able to process concurrent accesses to the gpio registers due to this erratum read instructions may return 0xffffffff and write instructions may be dropped
during boot the system should be able to handle smis system management interrupt due to this erratum boot may not complete when smi occurs during boot
interrupts that target a logical processor whose local apic is either in the process of being hardware disabled by clearing bit 11 in the ia32_apic_base_msr or software disabled by clearing bit 8 in the spuriousinterrupt vector register at offset 0f0h from the apic base are neither delivered nor discarded
for l2 cache errors with ia32_mci_statusmcacod bits 150 value 0000_0001_0000_1010b the address reported in ia32_mci_addr msr may not be the address that caused the machine check
the contents of several usb xhci host capability registers may be invalid after an s3 resume registers impacted by this erratum are hccparams hcsparams1 hcparams3 usb2_phy_pmc usb_pgc and xltp_ltv1
writing the general control register may cause the top swap mechanism to become incorrectly configured resulting in unreliable boot behavior
when an emmc embedded multimedia card lpe low power engine xdci usb device mode controller sdio secure digital input output or sd secure digital controller memory transaction encounters an unexpectedly long latency this may cause the controller to hang
if bios disables either the sdio or the sdcard but not both and follows the recommended sequence of placing the disabled controller in d3 the remaining enabled controller may stop functioning and hang the system if bios doesnt put the disabled controller in d3 the enabled controller will operate normally but entry to the s0ix lowpower state is blocked
when changing the processor frequency the soc may fail to update the usb descriptor prior to xhci consuming the descriptor when in isoc mode
certain internal conditions may cause the d signal of one or more usb ports to get stuck at 33v during system poweron
an apicaccess vm exit or a vm exit due to an ept extended page table violation or an ept misconfiguration that occurs during execution of the intn instruction in virtual8086 mode eflagsvm  1 with virtualmode extensions cr4vme  1 may save an incorrect value for rflags in the gueststate area of the vmcs
extended audio playback with the lpe low power engine may result in a system hang if the soc concurrently enters c6 or deeper sleep states
lpc serr events are incorrectly propagated to trigger the nmi interrupt when the see field of the pcie_reg_command register bus 0 device 31 function 0 offset 4h is cleared this erratum only affects systems with attached lpc devices that signal serr events
when a complex microarchitectural condition occurs concurrently with the generation of a rtit realtime instruction trace psb packet stream boundary packet the packets that immediately follow the psb could precede or overwrite some older packets this erratum applies to no more than 21 packets immediately following the psb
access to unimplemented isp image signal processor registers should result in a software error due to this erratum the transaction may not complete
the fupfar flow update packet for far transfer generated by rtit real time instruction trace on a far transfer instruction should contain the linear address of the first byte of the next sequential instruction after the far transfer instruction due to this erratum far transfer instructions with more than 3 prefixes may incorrectly include an address between the first byte of the far transfer instruction and the last byte of the far transfer instruction
after an rtit real time instruction trace packet that exceeds the limit specified by pkt_mask in rtit_packet_count msr 77ch bits 1716 the psb packet stream boundary packet should be sent immediately due to this erratum the psb packet may delayed by one packet
if an rtit real time instruction trace tracestop condition is detected while rtit_statusbuffer_overflow msr 769h bit 3 is set the processor may not clear rtit_ctltraceactive msr 768h bit 13 and tracing will continue after the overflow resolves such a case will be evident if the tracestop packet is inserted before overflow is resolved as indicated by the fupbuffovf flow update packet for buffer overflow packet
when rtit real time instruction trace suffers an internal buffer overflow packet generation stops temporarily after which a fupbuffovf flow update packet for buffer overflow is sent to indicate the lip that follows the instruction upon which tracing resumes in some cases however this packet will be immediately followed by a fuptip flow update packet for target ip which was generated by a branch instruction that executed during the overflow the ip payload of this fuptip will be the lip of the instruction upon which tracing resumes
when rtit real time instruction trace is enabled with rtit_ctlcyc_acc msr 768h bit 1 set to 1 all cyc cycle count packets have a payload value that is one less than the number of cycles that have actually passed note that for cyc packets with a payload value of 0 the correct value may be 0 or 1
when rtit real time instruction trace is enabled indicated by triggeren in bit 2 of the rtit_status msr 769h transitioning from 0 to 1 the first mtc mini time counter packet may be sent at the wrong time
when an overflow indication in ia32_perf_global_status msr 38eh is cleared via either the logging of a pebs precise event based sampling record or an msr write to ia32_perf_global_ovf_ctrl msr 390h a simultaneous counter overflow may not set its corresponding overflow bit
xhci host controller may not respond following system software setting bit 11 the host controller reset hcrst of the usb command register xhcibar80h
if a performance counter overflow or precise event based sampling pebs record generation is unable to trigger a performance monitoring interrupt pmi due to the pmi local vector table lvt entrys mask bit being set the pmi should be dropped due to this erratum the pmi may instead be pended and may be taken after the pmi lvt entry mask bit is cleared
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
the invlpg instruction may not completely invalidate translation lookaside buffer tlb entries for large pages 2m4m when both of the following conditions exist address range of the page being invalidated spans several memory type range registers mtrrs with different memory types specified invlpg operation is preceded by a page assist event page fault pf or an access that results in either a or d bits being set in a page table entry pte
when data of store to wt memory is used by two subsequent loads of one thread and another thread performs cacheable write to the same address the first load may get the data from external memory or l2 written by another core while the second load will get the data straight from the wt store
when nontemporal data is accessed by multiple read operations in one thread while another thread performs a cacheable write operation to the same address the data stored may be observed in wrong program order ie later load operations may read older data
if code segment limit is set close to the end of a code page then due to this erratum the memory page access bit a bit may be set for the subsequent page prior to general protection fault on code segment limit
code pf page fault exception is normally handled in lower priority order relative to both code db debug exception and code segment limit violation gp general protection fault due to this erratum code pf may be handled incorrectly if all of the following conditions are met a pde page directory entry is modified without invalidating the corresponding tlb translation lookaside buffer entry code execution transitions to a different code page such that both the target linear address corresponds to the modified pde the pte page table entry for the target linear address has an a accessed bit that is clear one of the following simultaneous exception conditions is present following the code transition code db and code pf code segment limit violation gp and code pf
when a performance monitoring counter is configured for pebs precise event based sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
the monitor instruction is used to arm the address monitoring hardware for the subsequent mwait instruction the hardware is triggered on subsequent memory store operations to the monitored address range due to this erratum rep stosmovs fast string operations to the monitored address range may prevent the actual triggering store to be propagated to the monitoring hardware
performance monitoring event misalign_mem_ref 05h is used to count the number of memory accesses that cross an 8byte boundary and are blocked until retirement due to this erratum the performance monitoring event misalign_mem_ref also counts other memory accesses
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
code segment limit violation may occur on 4 gigabyte limit check when the code stream wraps around in a way that one instruction ends at the last byte of the segment and the next instruction begins at 0x0
with respect to the retirement of instructions stores to the uncacheable memory based apic register space are handled in a nonsynchronized way for example if an instruction that masks the interrupt flag for example cli is executed soon after an uncacheable write to the task priority register tpr that lowers the apic priority the interrupt masking operation may take effect before the actual priority has been lowered this may cause interrupts whose priority is lower than the initial tpr but higher than the final tpr to not be serviced until the interrupt enabled flag is finally set that is by sti instruction interrupts will remain pending and are not lost
a taskstate segment tss task switch may incorrectly set the lbr_from value to the lbr_to value
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
when a far transfer switches the processor from 32bit mode to ia32e mode the upper 32 bits of the from source addresses reported through the btms branch trace messages or btss branch trace stores may be incorrect
when correctable singlebit ecc errors occur in the l2 cache the address is logged in the mca address register mci_addr under some scenarios the address reported may be incorrect
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception eg nmi nonmaskable interrupt debug breakdb machine check mc etc if the rsm attempts to return to a noncanonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
according to intel 64 and ia32 intel architecture software developers manual volume 3a methods of caching available wp write protected stores should drain the wc write combining buffers in the same way as uc uncacheable memory type stores do due to this erratum wp stores may not drain the wc buffers
when the processor is going into shutdown due to an rsm inconsistency failure eflags cr0 and cr4 may be incorrect in addition the exf4 signal may still be asserted this may be observed if the processor is taken out of shutdown by nmi
if any of the below circumstances occur it is possible that the load portion of the instruction will have executed before the exception handler is entered if an instruction that performs a memory load causes a code segment limit violation if a waiting x87 floatingpoint fp instruction or mmx technology mmx instruction that performs a memory load has a floatingpoint exception pending if an mmx or ssesse2sse3ssse3 extensions sse instruction that performs a memory load and has either cr0em1 emulation bit set or a floatingpoint top ofstack fp tos not equal to 0 or a dna exception pending
the inst_retired performance monitor may miscount retired instructions as follows repeat string and repeat io operations are not counted when a hardware interrupt is received during or after the last iteration of the repeat flow vmlaunch and vmresume instructions are not counted hlt and mwait instructions are not counted the following instructions if executed during hlt or mwait events are also not counted rsm from a cstate smi during an mwait instruction rsm from an smi during a hlt instruction
returning back from smm mode into real mode while eflagsvm is set in smram may result in unpredictable system behavior
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
interrupts that are pending prior to the execution of the sti set interrupt flag instruction are normally serviced immediately after the instruction following the sti an exception to this is if the following instruction triggers a mf in this situation the interrupt should be serviced before the mf because of this erratum if following sti an instruction that triggers a mf is executed while stpclk enhanced intel speedstep technology transitions or thermal monitor events occur the pending mf may be serviced before higher priority interrupts
the ler msr may be unexpectedly updated if the resultant value of the zero flag zf is zero after executing the following instructions verr zf0 indicates unsuccessful segment read verification verw zf0 indicates unsuccessful segment write verification lar zf0 indicates unsuccessful access rights load lsl zf0 indicates unsuccessful segment limit load
init may not flush a tlb entry when the processor is in protected mode with paging enabled and the page global enable flag is set pge bit of cr4 register g bit for the page table entry is set tlb entry is present in tlb when init occurs
software can enable dts thermal interrupts by programming the thermal threshold and setting the respective thermal interrupt enable bit when programming dts value the previous dts threshold may be crossed this will generate an unexpected thermal interrupt
software which is written so that multiple agents can modify the same shared unaligned memory location at the same time may experience a memory ordering issue if multiple loads access this shared data shortly thereafter exposure to this problem requires the use of a data write which spans a cache line boundary
in 32bit mode memory accesses to flat data segments base  00000000h that occur above the 4g limit 0ffffffffh may not signal a gp fault
if an asynchronous machine check occurs during an interrupt call through gate far ret or iret and in the presence of certain internal conditions esp may be corrupted
cpuid leaf 0ah reports the architectural performance monitoring version that is available in eax70 due to this erratum cpuid reports the supported version as 2 instead of 1
b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may not be properly cleared when the following sequence happens pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist followed by code breakpoint
according to the fsb front side bus protocol specification no fsb cycles should be issued by the processor once a stopgrant special cycle has been issued to the bus if xtpr update transactions are enabled by clearing the ia32_misc_enablesbit 23 at the time of stopclock assertion an xtpr update transaction cycle may be issued to the fsb after the processor has issued a stop grant acknowledge transaction
performance counter ia32_fixed_ctr2 msr 30bh event counts cpu reference clocks when the core is not in a halt state this event is not affected by core frequency changes eg p states tm2 transitions but counts at the same frequency as the timestamp counter ia32_time_stamp_counter msr 10h due to this erratum the ia32_fixed_ctr2 will not function properly when the noninteger coretobus ratio multiplier feature is used and when a nonzero value is written to ia32_ fixed_ctr2 noninteger coretobus ratio enables additional operating frequencies this feature can be detected by ia32_platform_id msr 17h bit 23
a livelock may be observed in rare conditions when instruction fetch causes multiple level one data cache snoops
software that implements memory aliasing by having more than one linear addresses mapped to the same physical page with different cache types may cause the system to hang or to report a machine check exception mce this would occur if one of the addresses is noncacheable and used in a code segment and the other is a cacheable address if the cacheable address finds its way into the instruction cache and the non cacheable address is fetched in the ifu the processor may invalidate the non cacheable address from the fetch unit any microarchitectural event that causes instruction restart will be expecting this instruction to still be in the fetch unit and lack of it will cause a system hang or an mce
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor may perform rep movs or rep stos as write combining stores referred to as fast strings for optimal performance fxsave may also be internally implemented using write combining stores due to this erratum stores of a wb write back memory type to a cache line previously written by a preceding fast stringfxsave instruction may be observed before stringfxsave stores
as specified in section vm exits induced by the tpr shadow in the intel 64 and ia32 architectures software developers manual volume 3b a vm exit occurs immediately after any vm entry performed with the use tpr shadow activate secondary controls and virtualize apic accesses vmexecution controls all set to 1 and with the value of the tpr shadow bits 74 in byte 80h of the virtualapic page less than the tprthreshold vmexecution control field due to this erratum such a vm exit will clear bit 0 blocking by sti and bit 1 blocking by movpop ss of the interruptabilitystate field of the gueststate area of the vmcs bit 0  blocking by sti and bit 1  blocking by movpop ss should be left unmodified
memory type aliasing occurs when a single physical page is mapped to two or more different linear addresses each with different memory types memory type aliasing with a cacheable memory type and wc write combining may cause the processor to perform incorrect operations leading to memory ordering violations for wc operations
if a logical processor is in vmx nonroot operation and in the waitforsipi state an occurrence of a startup ipi sipi causes a vm exit due to this erratum such vm exits always save zero into the rip field of the gueststate area of the virtualmachine control structure vmcs instead of the value of rip before the sipi was received
the intel 64 and ia32 architectures software developers manual volume 3b system programming guide part 2 specifies that following a vmentry failure during or after loading guest state the state of blocking by nmi is what it was before vm entry if nonmaskable interrupts nmis are blocked and the virtual nmis vmexecution control set to 1 this erratum may result in nmis not being blocked after a vmentry failure during or after loading guest state
under some rare conditions when multiple streaming load instructions movntdqa are mixed with nonstreaming loads that split across cache lines the processor may hang
if instructions from at least three different ways in the same instruction cache set exist in the pipeline combined with some rare internal state selfmodifying code smc or crossmodifying code may not be detected andor handled
if the tlb translation gets evicted while completing a cacheline split load operation under rare scenarios the processor may hang
updating a page table entry by changing rw us or p bits even when transitioning these bits from 0 to 1 without keeping the affected linear address range coherent with all tlb translation lookaside buffers and pagingstructures caches in the processor in conjunction with a complex sequence of internal processor microarchitectural events and store operations may lead to unexpected processor behavior
according to the intel 64 and ia32 architectures software developers manual volume 3a exception and interrupt reference if another exception occurs while attempting to call the doublefault handler the processor enters shutdown mode due to this erratum any benign faults while attempting to call doublefault handler will not cause a shutdown however contributory exceptions and page faults will continue to cause a triple fault shutdown
the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may contain incorrect values after any of the following either stpclk nmi nonmaskable interrupt or external interrupts cmp or test instructions with an uncacheable memory operand followed by a conditional jump stipop ssmov ss instructions followed by cmp or test instructions and then by a conditional jump
under a rare set of timing conditions and address alignment of instructions in a short nested loop sequence software that contains multiple conditional jump instructions and spans multiple 16byte boundaries may cause a machine check exception or a system hang
ia32_mc1_status msr 405h bit60 en error enabled is supposed to indicate whether the enable bit in the ia32_mc1_ctl msr 404h was set at the time of the last update to the ia32_mc1_status msr due to this erratum ia32_mc1_status msr bit60 instead reports the current value of the ia32_mc1_ctl msr enable bit
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
if a fault occurs during delivery of a software interrupt intn in virtual8086 mode when virtual mode extensions are in effect and that fault causes a vm exit incorrect data may be saved into the vmcs specifically information about the software interrupt may not be reported in the idtvectoring information field in addition the interruptabilitystate field may indicate blocking by sti or by mov ss if such blocking were in effect before execution of the intn instruction or before execution of the vm entry instruction that injected the software interrupt
if a vm exit occurs while the processor is in ia32e mode and the host addressspace size vmexit control is 0 a vmx abort should occur due to this erratum the expected vmx aborts may not occur and instead the vm exit will occur normally the conditions required to observe this erratum are a vm entry that returns from smm with the ia 32e guest vmentry control set to 1 in the smm vmcs and the host addressspace size vmexit control cleared to 0 in the executive vmcs
if bit 14 freeze_while_smm_en is set in the ia32_debugctl field in the guest state area of the vmcs vm entry may fail as described in section vmentry failures during or after loading guest state of intel 64 and ia32 architectures software developers manual volume 3b system programming guide part 2 the exit reason will be 80000021h and the exit qualification will be zero note that the freeze_while_smm_en bit in the guest ia32_debugctl field may be set due to a vmwrite to that field or due to a vm exit that occurs while ia32_debugctlfreeze_while_smm_en1
when xfeature_enabled_mask register xcr0 bit 1 sse is 1 a vm entry executed with the use tpr shadow vmexecution control set to 1 may use the wrong address to access data on the virtualapic page
in response to an init reset initiated either via the init pin or an ipi inter processor interrupt the processor should leave msr values unchanged due to this erratum ia32_lstar msr c0000082h which is used by the ia32e syscall instruction is being cleared by an init reset
when a cpuid instruction is executed with eax  8000_0002h 8000_0003h or 8000_0004h the returned eax ebx ecx andor edx values may be incorrect
if a vmm is using global page entries cr4pge is enabled and any present page directories or pagetable entries are marked global then on a vm entry the instruction tlb translation lookaside buffer entries caching global page translations of the vmm may not be invalidated in addition if a guest is using global page entries then on a vm exit the instruction tlb entries caching global page translations of the guest may not be invalidated
an xrstor instruction will cause nonspeculative accesses to xsave memory area locations containing the fcwfsw and fopftw floating point registers even though the 64bit restore mask specified in the edxeax register pair does not indicate to restore the x87 fpu state
writing peci_ctl msr platform environment control interface control register will not update the peci_ctl msr 5a0h instead it may corrupt the cpuid feature flags
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
the xfeature_enabled_mask register xcr0 bits 639 are reserved and must be 0 consequently the xrstor instruction should cause a generalprotection exception if any of the corresponding bits in the xstate_bv field in the header of the xsave xrstor area is set to 1 due to this erratum a logical processor may fail to cause such an exception if one or more of these reserved bits are set to 1
bits 632 of the headerxstate_bv are reserved and must be 0 due to this erratum the xsave instruction may erroneously modify one or more of these bits
the store operations done as part of the xsave instruction may cause a store ordering violation with older store operations the store operations done to save the processor context in the xsave instruction flow when xsave is used to store only the sse context may appear to execute before the completion of older store operations
when two logical processors are accessing the same data that is crossing a cacheline boundary without serialization with a specific set of processor internal conditions it is possible to have an ordering violation between memory store and load operations
some of the b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may be incorrectly set for nonenabled breakpoints when the following sequence happens mov or pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist another instruction after the fp instruction completes successfully a breakpoint occurs due to either a data breakpoint on the preceding instruction or a code breakpoint on the next instruction due to this erratum a nonenabled breakpoint triggered on step 1 or step 2 may be reported in b0b3 after the breakpoint occurs in step 4
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
if vm entry is executed with the nmiwindow exiting vmexecution control set to 1 a vm exit with exit reason nmi window should occur before execution of any instruction if there is no virtualnmi blocking no blocking of events by mov ss and no blocking of events by sti if vm entry is made with no virtualnmi blocking but with blocking of events by either mov ss or sti such a vm exit should occur after execution of one instruction in vmx nonroot operation due to this erratum the vm exit may be delayed by one additional instruction
under an unlikely and complex sequence of conditions in 64bit mode a register ip relative instruction result may be incorrect
a transition into c1e or enhanced intel speedstep technology event may cause the local apic timer to stop counting and not generate an apic timer interrupt
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception for example nmi nonmaskable interrupt debug breakdb machine check mc and so forth if the rsm attempts to return to a noncanonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
performance monitoring counter simd_inst_retired event c7h is used to track retired sse instructions due to this erratum the processor may also count other types of instructions resulting in higher than expected values
if any of the below circumstances occur it is possible that the load portion of the instruction will have executed before the exception handler is entered if an instruction that performs a memory load causes a code segment limit violation if a waiting x87 floatingpoint fp instruction or mmx technology mmx instruction that performs a memory load has a floatingpoint exception pending if an mmx or ssesse2sse3ssse3 extensions sse instruction that performs a memory load and has either cr0em1 emulation bit set or a floatingpoint top ofstack fp tos not equal to 0 or a dna exception pending
when in v86 mode if a mov instruction is executed tofrom a debug registers a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values that is residual stack data as a result of processing the fault
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault for example page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
in 32bit mode memory accesses to flat data segments base  00000000h that occur above the 4g limit 0ffffffffh may not signal a gp fault
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
when a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled dr7g0g3 and dr7l0l3 the dr6b0b3 flags may be incorrect
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
a processor write to the address range armed by the monitor instruction may not immediately trigger the monitoring hardware consequently a vm exit on a later mwait may incorrectly report the monitoring hardware as armed when it should be reported as unarmed due to the write occurring prior to the mwait
the performance monitor event segment_reg_loads event 06h counts instructions that load new values into segment registers the value of the count may be inaccurate
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
while coming out of cold reset or exiting from c6 if the processor encounters an instruction longer than 15 bytes which causes a gp and a code breakpoint is enabled on that instruction an iq instruction queue parity error may be incorrectly logged resulting in an mce machine check exception
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
according to the intel 64 and ia32 architectures software developers manual volume 3a system programming guide the ratio of ia32_mperf msr e7h to ia32_aperf msr e8h should reflect actual performance while tm1 or ondemand throttling is activated due to this erratum ia32_mperf msr stops counting while tm1 or ondemand throttling is activated and the ratio of the two will indicate higher processor performance than actual
if an uncorrectable ecc error or parity error occurs on the mirrored channel before an uncorrectable ecc error or parity error on the other channel can be resolved the intel quickpath memory controller will hang without an uncorrectable ecc or parity error being logged
when a correctable patrol scrub ecc error occurs simultaneously with a correctable system read ecc error on different memory channels ia32_mci_status and ia32_mci_misc should log the system read error due to this erratum ia32_mci_misc may incorrectly contain the patrol scrub error information and the ia32_mci_addr may not be correct
during self refresh entry the memory controller may issue more refreshes than permitted by tthrot_opref bits 2919 in mc_channel_012_refresh_timing csr
when either the ia32_mperf or ia32_aperf msr e7h e8h increments to its maximum value of 0xffff_ffff_ffff_ffff both msrs are supposed to synchronously reset to 0x0 on the next clock this synchronous reset does not work instead both msrs increment and overflow independently
if a local interrupt is pending when the lvt entry is written an interrupt may be taken on the new interrupt vector even if the mask bit is set
under a specific set of conditions mmx stores movd movq movntq maskmovq which cause memory access faults gp ss pf or ac may incorrectly update the x87 fpu tag word register this erratum will occur when the following additional conditions are also met the mmx store instruction must be the first mmx instruction to operate on x87 fpu state that is the x87 fp tag word is not already set to 0x0000 for movd movq movntq stores the instruction must use an addressing mode that uses an index register this condition does not apply to maskmovq
when the xapic timer is automatically reloaded by counting down to zero in periodic mode the xapic timer may slip in its synchronization with the external clock the xapic timer may be shortened by up to one xapic timer tick
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
some of the b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may be incorrectly set for nonenabled breakpoints when the following sequence happens mov or pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist another instruction after the fp instruction completes successfully a breakpoint occurs due to either a data breakpoint on the preceding instruction or a code breakpoint on the next instruction due to this erratum a nonenabled breakpoint triggered on step 1 or step 2 may be reported in b0b3 after the breakpoint occurs in step 4
following an exit from core c6 previously logged tlb translation lookaside buffer errors in ia32_mci_status may be cleared
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
software did not invalidate tlb entries for the page between the first modification of the paging structures and the string instruction in this case the load in the later iteration may cause a page fault that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page
if all logical processors in a core are in c6 an extint delivery mode interrupt is pending in the xapic and interrupts are blocked with eflagsif0 the interrupt will be processed after c6 wakeup and after interrupts are reenabled eflagsif1 however the pending interrupt event will not be cleared
if an xapic timer event is enabled and while counting down the current count reaches 1 at the same time that the processor thread begins a transition to a low power c state the xapic may generate two interrupts instead of the expected one when the processor returns to c0
if core c6 is entered after the start of an interrupt service routine but before a write to the apic eoi end of interrupt register and the core is woken up by an event other than a fixed interrupt source the core may drop the eoi transaction the next time apic eoi register is written and further interrupts from the same or lower priority level will be blocked
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
normally each instruction clears the changes in dr6 debug status register caused by the previous instruction however the instruction following a mov ssrm mov to the stack segment selector or pop ss pop stack segment selector instruction will not clear the changes in dr6 because data breakpoints are not taken immediately after a mov ssrm or pop ss instruction due to this erratum any dr6 changes caused by a mov ssrm or pop ss instruction may be cleared if the following instruction is a store
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
the ia32_perf_global_ctrl msr 38fh bits 3432 may be incorrectly set to 7h after reset the correct value should be 0h
ecc errors should be injected on every write that matches the address set in the mc_channel_012_addr_match csrs due to this erratum if there are two back toback writes that match mc_channel_012_addr_match the 2nd write will not have the error injected
performance monitoring counter mem_inst_retiredstores event 0bh umask 02h is used to track retired instructions which contain a store operation due to this erratum the processor may also count other types of instructions including wrmsr and mfence
if software sends a logical cluster broadcast ipi using a destination shorthand of 00b no shorthand and writes the cluster portion of the destination field of the interrupt command register to all ones while not using all 1s in the mask portion of the destination field target cores in a sleep state that are identified by the mask portion of the destination field may not be woken up this erratum does not occur if the destination shorthand is set to 10b all including self or 11b all excluding self
the state updated by a faulting fxrstor instruction may vary from one execution to another
when redundancy is lost in the 2dpc 2 dimms per channel configuration mc_smi_spare_dimm_error_status csr bits 1312 redundancy_loss_failing_dimm may indicate the incorrect failing dimm id the 2dpc configuration is indicated when mc_channel_01_dimm_init_params csr bit 24 three_dimms_present is 0
when issueonce bit 25 in the mc_scrub_control register device 3 function 2 offset 4ch is set the memory controller should issue one patrol scrub due to this erratum scrubbing requests continue to be issued
the type of memory aliasing contributing to this erratum is the case where two different logical processors have the same code page mapped with two different memory types specifically if one code page is mapped by one logical processor as writeback and by another as uncacheable and certain instruction fetch timing conditions occur the system may experience unpredictable behavior
under certain circumstances a general purpose performance counter ia32_pmc04 c1h  c4h may count at core frequency or not count at all instead of counting the programmed event
thermal throttling on a channel that is in lockstep mode affects all channels in order to maintain lockstep requirements if throttling parameters are modified at different times during runtime throttling on one channel is likely to be out of phase with throttling on other channels throttling which is out of phase will result in more throttling than anticipated if the throttling duty cycle exceeds 50 certain phase relationships can result in persistent memory traffic blockage
jtag commands that are executed at the same time as a peci platform environment control interface access may cause unexpected behavior in addition the peci command may take longer to complete or may not complete
when a ia32_perfevtselx msr is programmed to count the offcore_response_0 event eventb7h selections in the offcore_rsp_0 msr 1a6h determine what is counted the following two selections do not provide accurate counts when counting nt nontemporal stores offcore_rsp_0 msr bit 14 is set to 1 local_dram and bit 7 is set to 1 other nt stores to local dram are not counted when they should have been offcore_rsp_0 msr bit 9 is set to other_core_hit_snoop and bit 7 is set to 1 other nt stores to local dram are counted when they should not have been
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
zqcl commands are used during initialization to calibrate ddr3 termination a zqcl command can be issued by writing 1 to the mc_channel_012_mc_dimm_init_cmddo_zqcl device 456 function 0 offset 15 bit15 field and it targets the ddr3 rank specified in the rank field bits75 of the same register if the zqcl commands are not issued in increasing populated rank order then zq calibration may not complete causing the system to hang
if asr_present mc_channel_012_refresh_throttle_sup port csr function 0 offset 68h bit 0 auto self refresh present is clear which indicates that high temperature operation is not supported on the dram the memory controller will not enter selfrefresh if software has ref_2x_now bit 4 of the mc_closed_loop csr function 3 offset 84h set this scenario may cause the system to hang during c3c6 entry
when backtoback uncorrected machine check errors occur that would both be logged in the ia32_mc3_status msr 40ch the ia32_mc3_statusmscod bits 3116 field may reflect the status of the most recent error and not the first error the rest of the ia32_mc3_status msr contains the information from the first error
a corrected cache hierarchy data or tag error that is reported with ia32_mci_statusmcacod bits 150 with value of 000x_0001_xxxx_xx01 where x stands for zero or one and a yellow thresholdbased error status indication bits 5453 equal to 10b may be overwritten by a corrected error with a no tracking indication 00b or green indication 01b
the performance monitor events dcache_cache_ld event 40h and dcache_cache_st event 41h count cacheable loads and stores that hit the l1 cache due to this erratum in addition to counting the completed loads and stores the counter will incorrectly count speculative loads and stores that were aborted prior to completion
the performance monitor event instr_retired event c0h should count the number of instructions retired and mem_inst_ retired event 0bh should count the number of load or store instructions retired however due to this erratum they may undercount
on processors supporting intel 64 architecture the ps bit page size bit 7 is reserved in pml4es and pdptes if the translation of the linear address of a memory access encounters a pml4e or a pdpte with ps set to 1 a page fault should occur due to this erratum ps of such an entry is ignored and no page fault will occur due to its being set
it is possible that an address range which is being monitored via the monitor instruction could be written without triggering the monitor hardware a read from the monitored address range which is issued as uncacheable for example having the cr0cd bit set may prevent subsequent writes from triggering the monitor hardware a write to the monitored address range which is issued as uncacheable may not trigger the monitor hardware and may prevent subsequent writes from triggering the monitor hardware
bist results should only be reported in eax the first time a logical processor wakes up from the waitforsipi state due to this erratum intel interconnect bist intel ibist intel results may be additionally reported after initsipi sequences and when waking up rlps from the senter sleep state using the getsecwakeiup command
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
if vm entry is executed with the nmiwindow exiting vmexecution control set to 1 a vm exit with exit reason nmi window should occur before execution of any instruction if there is no virtualnmi blocking no blocking of events by mov ss and not blocking of events by str if vm entry is made with no virtualnmi blocking but with blocking of events by either mov ss or sti such a vm exit should occur after execution of one instruction in vmx nonroot operation due to this erratum the vm exit may be delayed by one additional instruction
when multiple performance counters are set to generate interrupts on an overflow and more than one counter overflows at the same time only one interrupt should be generated however if one of the counters set to generate an interrupt on overflow is the ia32_fixed_ctr2 msr 30bh counter multiple interrupts may be generated when the ia32_fixed_ctr2 overflows at the same time as any of the other performance counters
the cstate autodemotion feature allows the processor to make intelligent power and performance tradeoffs regarding the osrequested cstate under certain operating system and workload specific conditions the cstate autodemotion feature may be overly aggressive in demoting os csate requests to a csate with higher power and lower exit latency
if a second reset is initiated during the poweron processor reset cycle the lbrs last branch records may not be properly initialized
the processor can be configured to issue a pmi performance monitor interrupt upon overflow of the ia32_fixed_ctr0 msr 309h a single pmi should be observed on overflow of ia32_fixed_ctr0 however multiple pmis are observed when this erratum occurs this erratum only occurs when ia32_fixed_ctr0 overflows and the processor and counter are configured as follows intel hyperthreading technology is enabled ia32_fixed_ctr0 local and global controls are enabled ia32_fixed_ctr0 is set to count events only on its own thread ia32_fixed_ctr_ctrl msr 38dh bits2  0 pmis are enabled on ia32_fixed_ctr0 ia32_fixed_ctr_ctrl msr bit3  1 freeze_on_pmi feature is enabled ia32_debugctl msr 1d9h bit12  1
when a vm exit occurs due to a lidt lgdt sidt or sgdt instruction with a 32bit operand bit 11 of the vmexit instruction information field should be set to 1 due to this erratum this bit is instead cleared to 0 indicating a 16bit operand
performance monitor events store_blocksnot_sta and store_blockssta should only increment the count when a load is blocked by a store due to this erratum the count will be incremented whenever a load hits a store whether it is blocked or can forward in addition this event does not count for specific threads correctly
when a performance monitoring counter is configured for pebs precise event based sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
during powerup the processor may improperly assert the peci platform environment control interface pin this condition is cleared as soon as bus clock starts toggling however if the peci host also referred to as the master or originator incorrectly determines this asserted state as another peci host initiating a transaction it may release control of the bus resulting in a permanent tristate condition
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
in periodic mode the apic timer ccr currentcount register is supposed to be automatically reloaded from the initialcount register when the count reaches 0 consequently software would never be able to observe a value of 0 due to this erratum software may read 0 from the ccr when the timer has counted down and is in the process of rearming
the form address associated with the lbr last branch record btm branch trace message or bts branch trace store may be incorrect for the first branch after an enchanced intel speedstep technology transition tstates c1e c1 enhanced or adaptive thermal throttling
when a performance monitor counter is configured to count fp_assists event f7h and to trigger pebs precise event based sampling the processor does not create a pebs record when the counter overflows
msr_turbo_ratio_limit msr 1adh is designed to describe the maximum intel turbo boost technology potential of the processor on some processors a nonzero intel turbo boost technology value will be returned for nonexistent core configurations
when the l1 cache is operating in 16k redundant parity mode and a parity error occurs on both halves of the duplicated cache on the same cacheline an uncorrectable error should be logged due to this erratum the uncorrectable error will be recorded as correctable however a machine check exception will be appropriately taken in this case
if the apic timer divide configuration register offset 03e0h is written at the same time that the apic timer current count register offset 0390h reads 1h it is possible that the apic timer will deliver two interrupts
peci reads which target machine check msrs in the processor core may either be directed to a different core than intended or report that the data is not available
under certain complex microarchitectural conditions the simultaneous occurrence of a pagesplit lock and several data accesses that are split cacheline boundaries may lead to processor livelock
during package c6 transitions internal signaling noise may cause the ddrx_cke signal to become asserted during selfrefresh these assertions may result in memory bit errors upon exiting from the package c6 state due to this erratum the ddrx_cke signals can be driven during times in which the ddr3 jedec specification requires that they are idle
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80 bit fp access load or store uses a 32bit address size in 64bit mode and the memory access wraps a 4gbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80 bit fp access load or store occurs in a 16bit mode other than protected mode in which case the access will produce a segment limit violation the memory access wrap a 64kbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
the processor may hang if there is a spurious prochot pin assertion during a warm reset the hang may occur even if the minimum hold time specification for prochot is not met or voltage regulator based throttling is not enabled
in a two socket platform with package c6 enabled the tsc time stamp counter crosssocket values should remain synchronous if the conditions specified in the processor ac timing waveforms section of the intel xeon 5600 series emts electrical mechanical and thermal specifications are met due to this erratum the tsc may become out of sync between the processor packages after a warm reset even if the reset deassertion requirements are met
under normal circumstances an operation fails if it attempts to modify a reserved bit of a modelspecific register msr due to this erratum and for some nonarchitectural msrs such an attempt may cause unpredictable system behavior
when demand andor patrol scrub are enabled along with write major mode and a persistent stream of correctable memory ecc errors occurs the processor may exhibit unexpected behavior
the io_smi bit bit 0 in the io state field at smram offset 7fa4h is set to 1 by the processor to indicate a system management interrupt smi is either taken immediately after a successful io instruction or is taken after a successful iteration of a rep io instruction due to this erratum the setting of the io_smi bit may be lost this may happen under a complex set of internal conditions with intel hyper threading technology enabled and has not been observed with commercially available software
when redundancy is lost in mirroring mode the failing dimms cannot be identified correctly if mc_smi_spare_dimm_error_status csr bits 1312 redundancy_loss_failing_dimm are 00b
if bios disables one or more cores by writing to the csr_desired_cores device 0 function 0 offset 80h peci platform environment control interface reads to machine check registers may receive data from a core which was not the intended target of the read or may receive unexpected data
the x87 fsw fpu status word may be corrupted if execution of a floatingpoint store instruction fst fstp fist fistp fisttp causes a page fault in vmx nonroot operation
on a subset of processors the clocking circuitry may be sensitive to fluctuations in vtt voltage during stressful testing andor operating conditions and may result in unpredictable system behavior
the vmx virtualmachine extensions are controlled by the vmcs virtualmachine control structure if cr0cd is set on any logical processor of a core operations using the vmcs may not function correctly such operations include the vmread and vmwrite instructions as well as vm entries and vm exits
hardware prefetches that miss the l1 data cache but cannot be processed immediately due to resource conflicts will count and then retry this may lead to incorrectly incrementing the l1d_prefetchmiss event 4eh umask 02h event multiple times for a single miss
the dtlb physicals are left intact however the physicals needs to be flushed to ensure proper smrr operation
if the load ia32_perf_global_ctrl vmexit control is 1 a vm exit should load the ia32_perf_global_ctrl msr 38fh from the ia32_perf_global_ctrl field in the gueststate area of the vmcs due to this erratum such a vm exit may instead clear bits 3432 of the msr loading only bits 310 from the vmcs
section checks on guest nonregister state of volume 3b specifies consistency checks that vm entry should perform for bit 14 bs indicating a pending singlestep exception of the pending debug exception field in gueststate area of the vmcs these checks enforce the consistency of that bit with other fields in the gueststate area due to this erratum vm entry may fail to perform these checks
on a subset of processors during package c6 transitions internal circuit marginality may cause ddr3 jedec specification violations these violations may result in control and data signal errors upon exiting from package c6 state
if the vmclear instruction is executed with a pointer to the currentvmcs virtual machine control structure the currentvmcs pointer becomes invalid as expected a subsequent execution of the vmptrld load pointer to virtualmachine control structure instruction may erroneously overwrite the four bytes at physical address 0000008fh
under very specific timing conditions if software tries to disable a perfmon counter through msr ia32_perf_global_ctrl 0x38f or through the percounter event select eg msr 0x186 and the counter reached its overflow state very close to that time then due to this erratum the overflow status indication in msr ia32_perf_global_stat 0x38e may be left set with no way for software to clear it
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so thatthere is a valid translation for the page eg by setting to 1 the present bitin one of the pagingstructure entries used to translate the page software on another logical processor observes this modification eg byaccessing a linear address on the page or by reading the modified paging structure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs astore to a linear address on the page in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page eg with bit 0 clear in thepagefault error code indicating that the fault was caused by a not present page intel has not observed this erratum with any commercially available software
when an l1 data cache error is logged in ia32_mci_status150 which is the mca error code field with a cache error type of the format 0000 0001 rrrr ttll the ll field may be incorrectly encoded as 01b instead of 00b
if the processor throttles due to either high temperature thermal conditions or due to an explicit operating system throttling request tt1 while executing getsecsenter or getsecsexit instructions then under certain circumstances the processor may hang intel has not been observed this erratum with any commercially available software
perfmon event load_hit_presw_prefetch event 4ch umask 01h should count load instructions hitting an ongoing software cache fill request initiated by a preceding software prefetch instruction due to this erratum this event may also count when there is a preceding ongoing cache fill request initiated by a locking instruction
under specific internal conditions when using freeze perfmon on pmi feature bit 12 in ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h if two or more perfmon fixed counters overflow very closely to each other the overflow may be mishandled for some of them this means that the counters overflow status bit in msr_perf_global_status msr 38eh may not be updated properly additionally pmi interrupt may be missed if software programs a counter in samplingmode pmi bit is set on counter configuration
when a 2byte opcode of a conditional branch opcodes 0f8xh for any value of x instruction resides in 16bit codesegment and is associated with invalid vex prefix it may sometimes signal a gp fault illegal instruction length  15bytes instead of a ud illegal opcode fault
normally a logical processor that entered the shutdown state will remain in that state until a break event nmi smi init occurs due to this erratum if cr4mce machine check enable is 0 and a branchtrace message or branchtrace store is pending at the time of a machine check the processor may not remain in shutdown state in addition if the processor was in vmx nonroot operation when it improperly woke from shutdown state a subsequent vm exit may save a value of 2 into the activitystate field in the vmcs indicating shutdown even though the vm exit did not occur while in shutdown state
a task switch may load the ldtr local descriptor table register with an incorrect segment descriptor if the ldt local descriptor table segment selector in the new tss specifies an inaccessible location in the gdt global descriptor table
when using ddr3 rdimm memory and exiting from the c6 low power state with memory in selfrefresh the cs chip select signals may remain in tristate during tstab clk stabilization time thus violating the jedec standard definition of the sste32882 registering clock driver with parity and quad chip selects for ddr3 rdimm applications as detailed in the jedec specification the cs signals should transition from tristate to high to exit the clock stopped power down mode
when an ilp initiating logical processor executes getsec with either the senter or enteraccs leaf function the processor should check the mcip machine check in progress bit in the ia32_mcg_status msr 17ah to determine if any machine check exception is being processed if a machine check is in progress the ilp should generate a general protection exception due to this erratum the general protection exception is not generated
if software executes an instruction with an opcode of the form 66 0f 38 8x where x is in the range 0 to 6 the processor may unexpectedly perform a load operation the data loaded is not used the load occurs even if the instruction causes a vm exit or a fault including an invalidopcode exception if the vmxon instruction has been executed successfully the load is from the physical address in the vmxon pointer plus 408h otherwise it is from physical address 407h the affected opcodes include the invept and invvpid instructions as well as five invalid opcodes
under specific internal conditions when using freeze perfmon on pmi feature bit 12 in ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h if two or more perfmon fixed counters overflow very closely to each other the overflow may be mishandled for some of them this means that the counters overflow status bit in msr_perf_global_status msr 38eh may not be updated properly additionally pmi interrupt may be missed if software programs a counter in samplingmode pmi bit is set on counter configuration
if vm entry is made with the virtual nmis and nmiwindow exiting vmexecution controls set to 1 and if there is no virtualnmi blocking after vm entry a vm exit with exit reason nmi window should occur immediately after vm entry unless the vm entry put the logical processor in the waitfor sipi state due to this erratum such vm exits do not occur if the vm entry put the processor in the shutdown state
executions of the invvpid instruction outside 64bit mode with the invvpid type individualaddress invalidation ignore bits 6332 of the linear address in the invvpid descriptor and invalidate translations for bits 310 of the linear address
under certain complex microarchitectural conditions closely spaced data accesses that are split across cacheline boundaries may lead to a processor hang
under very specific timing conditions if software tries to disable a perfmon counter through msr ia32_perf_global_ctrl 0x38f or through the percounter event select eg msr 0x186 and the counter reached its overflow state very close to that time then due to this erratum the overflow status indication in msr ia32_perf_gloal_stat 0x38e may be left set with no way for software to clear it
if the vmcs link pointer is valid in the vmcs vm entry instructions should check that the 32 bits referenced by that pointer contains the processors vmcs revision identifier and fail if it does not due to this erratum vmresume may omit this check and thus not cause vm entry to fail in some cases
if software has used vmxpreemption timer and subsequently leaves vmx operation this erratum may lead to unpredictable behavior including a system hang intel has not observed this erratum with any commercially available softwareusing vmxoff then an init signal may result in unpredictable behavior
apic timer interrupts intended to awaken from core c3 may be lost under certain timing conditions
in cases when a wbinvd instruction evicts a line containing an address or data parity error mcacod of 0x124 and mscod of 0x10 the address of this error should be logged in the mci_addr register due to this erratum the logged address may be incorrect even though mci_statusaddrv bit 63 is set
an apic timer interrupt can be lost when it aligns precisely with an internal cpu counter overflow condition the overflow condition occurs once about every 90 minutes
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
if cr0cd1 the mtrrs and pat should be ignored and the uc memory type should be used for all memory accesses due to this erratum a logical processor in vmx operation will operate as if cr0cd0 even if that bit is set to 1
under a complex set of internal and platform conditions the execution unit on a small subset of intel xeon processor x5675 x5690 and x5687 may not complete some instructions correctly
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
when 32bit paging is in use the processor should use a page directory located at the 32bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
when a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to update the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated after a uc error is logged
if a processor supports eoibroadcast suppression a write to the local apics eoi register does not generate a broadcast eoi even if the interrupt is leveltriggered if bit 12 of the local apics svr spuriousinterrupt vector register is set at the time of the write due to this erratum the local apic decides whether to generate a broadcast eoi based on the value that bit 12 of the svr had at the time at which the most recent interrupt was delivered or the time of the most recent write to the eoi register whichever is later
if an io instruction in ins out or outs results in an smi systemmanagement interrupt the processor will set the io_smi bit at offset 7fa4h in smram this interrupt should be delivered immediately after execution of the io instruction so that the software handling the smi can cause the io instruction to be reexecuted due to this erratum it is possible for another event eg a nonmaskable interrupt to be delivered before the smi that follows the execution of an in or ins instruction
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
in multiprocessor configurations txterrorcode error information may be lost across bios acm calls due to a synchronization problem
early server bios acm releases do not support the new reset tpm auxiliary indices function esi  0x02
the platform may assert reset only to the processor to change ddr speed or make another configuration change if cold reset or warm reset is asserted to the processor with secrets in memory without resetting the ioh the bios acm will hand off to bios with memory locked
if bios has set tpm locality 0 to be active bios acm scheck may reset tpm locality 0 to inactive
if bios policy autopromotion fails txtacmcrashcode and txtspad may have incorrect values
the bios acm may incorrectly write error codes to txterrorcode offset 0030h instead of txtbiosacmerrorcode offset 0328h
with the affected npw nonproduction worthy bios acms the measured launch environment eg virtual machine monitor or operating system may boot when the mle launch control policy disallows npw boot
with the affected bios acms tpm trusted platform module platform configuration register pcr17 may not be extended with the bios acm version or nonproduction worthy bit
in multiprocessor configurations under certain race conditions the bios acm may exit to bios with tpm locality 3 activated
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executing when an enhanced intel speedstep technology transitions an intel turbo boost technology transitions or a thermal monitor events occurs the mf may be taken before pending interrupts are serviced
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
if xbegin is executed immediately after an execution of mov to ss or pop ss a transactional abort occurs and the logical processor restarts execution from the fallback instruction address if execution of the instruction at that address causes a debug exception bits 30 of the dr6 register may contain an incorrect value
if cpuideax07h ecx0ebxbmi1 bit 3 is 1 then opcode bytes f3 0f bc should be interpreted as tzcnt otherwise they will be interpreted as rep bsf due to this erratum opcode bytes f3 0f bc may execute as tzcnt even if cpuideax07h ecx0ebxbmi1 bit 3 is 0
if the processor is directed to enter pcie pollingcompliance at 50 gts or 80 gts transfer rates it should use the link control 2 compliance presetdeemphasis field bits 1512 to determine the correct deemphasis level due to this erratum when the processor is directed to enter pollingcompliance from 25 gts transfer rate it retains 25 gts deemphasis values
the smsw instruction is illegal within an intel software guard extensions intel sgx enclave and an attempt to execute it within an enclave should result in a ud invalidopcode exception due to this erratum the instruction executes normally within an enclave and does not cause a ud
a pebs record generated by a wrmsr to ia32_bios_updt_trig msr 79h may have an incorrect value in the eventing eip field if an instruction prefix was used on the wrmsr
when intel pt is enabled and a direct unconditional branch clears ia32_rtit_statusfilteren msr 571h bit 0 due to this erratum the resulting tippgd target ip packet packet generation disable may not have an ip payload with the target ip
execution of a 64 bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
if the wrmsr instruction writes to the ia32_bios_updt_trig msr 79h immediately after an execution of mov ss or pop ss that generated a debug exception the processor may fail to deliver the debug exception or if it does the dr6 register contents may not correctly reflect the causes of the debug exception
a pcie link should retrain when retrain link bit 5 in the link control register bus 0 device 1 functions 012 offset 0xb0 is set due to this erratum if the link is in the l1 state it may ignore the retrain request
some intel processor trace packets should be issued only between tippge target ip packetpacket generation enable and tippgd target ip packetpacket generation disable packets due to this erratum when a tippge packet is generated it may be preceded by a psb packet stream boundary that incorrectly includes fup flow update packet and modeexec packets
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
if an intel pt topa table of physical addresses is not placed in wb writeback memory or is written by software executing within an intel transactional synchronization extension intel tsx transactional region the system may become unstable
if vm entry clears intel pt intel processor trace ia32_rtit_ctltraceen msr 570h bit 0 while packeten is 1 then a fup flow update packet will precede the tippgd target ip packet packet generation disable vm entry can clear traceen if the vmentry msrload area includes an entry for the ia32_rtit_ctl msr
after a warm reset an edram corrected error may not be logged correctly until the associated machine check register is initialized this erratum may affect ia32_mc8_status or ia32_mc10_status
under certain circumstances reading a machine check register using the peci platform environmental control interface rdiamsr command may result in a machine check processor hang or shutdown
the intel software guard extensions intel sgx encluegetkey instruction ignores the miscmask field in keyrequest structure when computing a provisioning key a provisioning seal key or a seal key
popcnt instruction execution with a 32 or 64 bit operand may be delayed until previous nondependent instructions have executed
the intel sgx intel software guard extensions encluereport instruction may cause a gp general protection fault if any bit is set in targetinfo structures miscselect field
a vmx transition may result in a shutdown without generating a machinecheck event if a nonexistent msr is included in the associated msrload area when such a shutdown occurs a machine check error will be logged with ia32_mci_statusmcacod bits 150 of 406h but the processor does not issue the special shutdown cycle a hardware reset must be used to restart the processor
a transition from 64bit mode to compatibility mode may zero bits 6332 of the x87 fpu instruction pointer offset fip and the x87 fpu data pointer offset fdp
some intel pt intel processor trace ovf overflow packets may not be followed by a fup flow update packet or tippge target ip packet packet generation enable
the enclsecreate instruction uses an secs intel sgx enclave control structure referenced by the srcpage pointer in the pageinfo structure which is referenced by the rbx register due to this erratum the instruction causes a gp generalprotection fault if the secs attributes indicate that the enclave should operate in 64bit mode and the enclave base linear address in the secs is not canonical
a rep movs instruction that causes an exception or a vm exit may not detect a data breakpoint that occurred on an earlier memory access of that rep movs instruction
the iommu unit for processor graphics prefetches context or extendedcontext entries to improve performance due to the erratum the iommu unit may report spurious dma remapping faults if prefetching encounters a context or extended context entry which is not marked present
the processors pcie and dmi links may fail after exiting package c7 or deeper if the platform requires the link to utilize lane polarity inversion
after pcie 80 gts link equalization on a root port bus 0 device 1 function 0 1 2 has completed the expansion rom base address register offset 38h may be incorrect
due to this erratum when a processor pcie port operating at 80 gts is directed to redo equalization either via software or from the link partner incorrect coefficients may be conveyed during equalization phase 3
when on a single memory channel with 2133 mhz ddr4 sodimms mixing different vendors or mixing single rank and dual rank dimms may lead to a higher rate of correctable errors or system hangs
when using intel sgx software guard extensions the enclseinit instruction will incorrectly cause a gp general protection fault if the miscselect field of the sigstruct structure is not zero
if an intel pt intel processor trace internal buffer overflow occurs immediately before software executes a taken branch or event that enters an intel pt tracestop region the ovf overflow packet may be lost
while executing within an intel tsx intel transactional synchronization extensions transactional region with intel pt intel processor trace enabled and an event occurs that causes either the error bit bit 4 or stopped bit bit 5 in the ia32_rtit_status msr 0571h to be set then due to this erratum the system may hang
when software loads a microcode update by writing to msr ia32_bios_updt_trig 79h on multiple logical processors in parallel a logical processor may due to this erratum count the wrmsr instruction as multiple instructionretired events
the x87 fpu should update the x87 fip fpu instruction pointer for every noncontrol x87 instruction executed due to this erratum the fip is valid only if the last non control fp instruction had an unmasked exception
depending on the current intel mpx intel memory protection extensions configuration execution of certain branch instructions near call near ret near jmp and jcc instructions without a bnd prefix f2h initialize the intel mpx bound registers due to this erratum execution of such a branch instruction on a usermode page may not use the intel mpx configuration register appropriate to the current privilege level bndcfgu for cpl 3 or bndcfgs otherwise for determining whether to initialize the bound registers it may thus initialize the bound registers when it should not or fail to initialize them when it should
if intel pt intel processor trace is enabled wrmsr will not cause a general protection exception gp on an attempt to write a noncanonical value to any of the following msrs msr_lastbranch_0  31_from_ip 680h  69fh msr_lastbranch 0  31_to_ip 6c0h  6dfh msr_lastbranch_from_ip 1dbh msr_lastbranch_to_ip 1dch msr_lastint_from_ip 1ddh msr_lastint_to_ip 1deh instead the same behavior will occur as if a canonical value had been written specifically the wrmsr will be dropped and the msr value will not be changed
after a c6 state exit the execution rate of intel avx instructions may be reduced
under complex microarchitectural conditions an intel pt processor trace ovf overflow packet may be issued after the first byte of a multibyte cyc cycle count packet instead of any remaining bytes of the cyc
an intel pt processor trace psb packet stream boundary set of packets may not be generated as expected when ia32_rtit_statuspacketbytecnt4832 msr 0x571 reaches the psb threshold and a logical processor c6 entry occurs within the following one kbyte of trace output
a wrmsr that attempts to set trace_topa_pmi bit 55 in the ia32_perf_global_status msr 38eh by writing a 1 to bit 55 in the ia32_perf_global_status_set msr 391h will cause a gp fault
hdc hardware duty cycling will not put the physical package into the forced idle state while any logical processor is in vmx nonroot operation and the activate vmx preemption timer vmexecution control is 1
the encluegetkey instruction always generates seal provision and provision_seal keys as if the miscmask field in the keyrequest structure is 0
certain microarchitectural conditions during an intel tsx intel transactional synchronization extensions abort may result in unpredictable system behavior
under certain micro architectural conditions execution of a prefetchh instruction or a prefetchw instruction may cause a load from the prefetched cache line to appear to execute before an earlier load from another cache line
a cs code segment limit reduction may not be properly applied
the performance monitoring events longest_lat_cachereference event 2eh umask 4fh and longest_lat_cachemiss event 2eh umask 41h count requests that reference or miss in the last level cache however due to this erratum the count may be incorrect
when executing within an intel sgx software guard extensions enclave a gp generalprotection exception may be delivered instead of a db debug exception when an instruction breakpoint is detected this occurs when the instruction to be executed spans two pages the second of which has an entry in the epcm enclave page cache map that is not valid
execution of vaesenclast with vexl 1 should signal a ud invalid opcode exception however due to the erratum a nm device not available exception may be signaled
in vmx nonroot operation intel sgx software guard extensions enclave accesses to the apicaccess page may cause apicaccess vm exits instead of page faults
in pae paging mode the cr3115 are used to locate the pagedirectorypointer table due to this erratum those bits of cr3 are not compared to ia32_rtit_cr3_match msr 572h when ia32_rtit_ctlcr3filter msr 570h bit 7 is set
a tippge target ip packet generation enabled or tippgd target ip packet generation disabled packet may not be generated if intel pt processor trace packeten changes after ia32_rtit_statusfilteren msr 571h bit 0 is reevaluated on wakeup from c6 or deeper sleep state
the processor should ensure internal graphics configuration is restored during a package c8 or deeper exit event due to this erratum some internal graphics configurations may not be correctly restored
execution of the fsave fnsave fstenv or fnstenv instructions in realaddress mode or virtual8086 mode may save an incorrect value for the x87 fdp fpu data pointer this erratum does not apply if the last noncontrol x87 instruction had an unmasked exception
the peci platform environmental control interface 31 specifications operating frequency range is 02 mhz to 2 mhz due to this erratum peci may be unreliable when operated above 1 mhz
intel virtualization technology for directed io specification specifies setting the fpd fault processing disable field in the context or extendedcontext entry of iommu to mask recording of qualified dma remapping faults for dma requests processed through that context entry due to this erratum the iommu unit for processor graphics device may record dma remapping faults from processor graphics device bus 0 device 2 function 0 even when the fpd field is set to 1
processors that support intel sgx intel software guard extensions may experience hangs when waking from s3 standby system sleep state or during a poweron reset this erratum may occur even if the intel sgx feature is not enabled
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
an outstanding read from an ia core to the de display engine that is coincident with an ia core ratio change mayresult in a system hang
the tsc ia32_time_stamp_counter msr 10h should be cleared on reset due to this erratum the tsc is not affected by warm reset
if an intel pt processor trace internal buffer overflow occurs just before software executes a taken branch or event that enters an intel pt tracestop region the ovf overflow packet may be lost
intel pt intel processor trace cyc cycle count threshold is configured through cycthresh field in bits 2219 of ia32_rtit_ctl msr 570h a value of 13 is advertised as supported by cpuid leaf 14h sublead 1h due to this erratum if cycthresh is set to 13 then the cyc threshold will be 0 cycles instead of 4096 2131 cycles
intel pt intel processor trace may temporarily stop sending mtc mini time counter and cyc cycle packets after entering thread c3 state mtc and cyc packets may be missing in up to 1kb of trace output after entering thread c3
a vdpps vector dot product of packed single precision floatingpoint values instruction operating on ymm registers with denormal operands or experiencing an underflow may not produce the expected result if the exception is masked in the mxcsr this may also happen when intermediate multiply results have underflow conditions
when the apic timer is configured to tsc deadline mode a timer interrupt may occur before the expected deadline if any of ia32_tsc_deadline msr 6e0h bits 6356 are set
within platforms that utilize memory that supports address mirroring processors that utilize intel txt intel trusted execution technology measured launch environment may fail to boot and hang
display flickering may occur when both fbc frame buffer compression and intel vtd intel virtualization technology for directed io are enabled and in use by the display controller
certain processors should be configured with a tdp thermal design power limit of 54 or 51 watts due to this erratum these processors may be incorrectly configured at 65 w tdp the following processors are affected by this erratum intel core i3 processor series celeron and pentium dualcore with gt1gt2 a processor that reports a value of 0x208 in tdp_power_of_sku field in msr package_power_sku msr 614h 140 are affected by this erratum
an execution of movntdqa or vmovntdqa that loads from wc write combining memory may appear to pass an earlier execution of the mfence instruction
integrated audio codec may lose power when lpsp lowpower single pipe mode is enabled for an edp embedded display port or hdmi ports platforms with intel smart sound technology intel sst enabled are not affected
under complex microarchitecture conditions processor may hang with an internal timeout error mcacod 0400h logged into ia32_mci_status or cause unpredictable system behavior
execution of rep movs may incorrectly change recx resi andor redi register values during instruction execution this erratum occurs only if the execution would set an accessed or dirty flag in a paging structure to which ept does not allow writes
ring frequency changes may lead to a system hang with the processor logging a machine check in ia32_mci_status where the mcacod bits150 value is 0x0402 and the mscod bits3116 value is 0x77yy yy is any 8bit value
the x87 fpu data pointer points to the data operand for the last x87 noncontrol instruction executed unless cpuideax07hecx0hebxfdp_excptn_onlybit 6 is 1 in which case it points to the operand for the last x87 noncontrol instruction that incurred an unmasked x87 exception due to this erratum x87 fpu data pointer behaves as if the fdp_excptn_only flag is 1 even when that bit is 0
performing wrmsr to ia32_bios_updt_trig msr 79h on a logical processor while another logical processor is executing an smx safer mode extensions sentersexit operation getsecsenter or getsecsexit instruction may cause the processor to hang
bts branch trace store and btm branch trace message send branch records to the debug store management area and system bus respectively the branch predicted bit bit 4 of eighth byte in btsbtm records should report whether the most recent branch was predicted correctly due to this erratum the branch predicted bit may be incorrect
the performance monitoring event machine_clearsmemory_ordering event c3h umask 02h counts the number of machine clears caused by memory ordering conflicts however due to this erratum this event may undercount for vgather vpgather instructions with four or more elements
ia32_perf_global_statusctr_frz msr 38eh bit 59 is set when either 1 ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h bit 12 is set and a pmi is triggered or 2 software sets bit 59 of ia32_perf_global_status_set msr 391h when set ctr_frz should stop all core performance monitoring counters from counting however due to this erratum ia32_pmc47 msr c5c8h may not stop counting ia32_pmc47 are only available when a processor core is not shared by two logical processors
the performance monitoring events inst_retired event c0h any umask value and br_inst_retired event c4h any umask value count instructions retired and branches retired respectively however due to this erratum these events may overcount in certain conditions when executing vmaskmov instructions with at least one masked vector element executing rep movs or rep stos with fast strings enabled ia32_misc_enables msr 1a0h bit 0 set an intel mpx br exception occurs on bndldxbndstx instructions and the br_inst_retired event c4h umask is 00h or 04h is used
the performance monitoring events offcore_response events b7h and bbh should count offcore responses matching the requestresponse configuration specified in msr_offcore_rsp_0 and msr_offcore_rsp_1 1a6h and 1a7h respectively for coreoriginated requests however due to this erratum dmnd_rfo bit 1 dmnd_ifetch bit 2 and other bit 15 request types may overcount
using the bios hardware core disable facility may cause the processor to hang when it attempts to enter or exit package c6
if intel pt is enabled a gp generalprotection exception caused by the instruction fetch immediately following execution of an rsm instruction may push an incorrect value for rflags onto the stack
the processor may incorrectly configure transmitter buffer characteristics if the associated edp panel requests vesa equalization preset 3 5 6 or 8
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
if a page fault results from an attempt to access a page in the intel sgx intel software guard extensions epc enclave page cache that is in the blocked state the processor does not indicate that the page fault was intel sgxinduced by setting bit 15 of the error code pushed on the stack
under a complex set of internal timing conditions and system events software using the intel tsx intel transactional synchronization extensions instructions may behave unpredictably
the dts20 digital thermal sensor version 20 fan control temperature is incorrect
packagec6 exit latency may be higher than expected
the pcie base specification requires every downstream port that supports link speeds greater than 50 gts to support dll data link layer link active reporting however the pcie ports do not support dll link active reporting
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
when edram is enabled and the ddr operating frequency is 1600 mhz a system hang may occur
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
package c3 exit latency may be longer than expected
voltage glitch of up to 200 mv on the vref signal lasting for about 1 ms may be observed when entering system s3 state this violates the jedec ddr specifications
after entering into package c7 the following uncore performance monitoring msrs may be cleared to zero msr_ unc _perf_global_ctrl e01h msr_ unc _perf_global_status e02h msr_ unc _perf_fixed_ctrl 394h msr_ unc _perf_fixed_ctr 395h
under complex conditions associated with the use of internal graphics the processor may exceed the max_lat csr values pci configuration space offset 03fh bits70
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
downstream mctp packets from the processor to the pch will be incorrectly routed during mctp device enumeration if the tag field of the mctp message header has a value of 0x5 and the routing type is route to root complex type0
due to this erratum if ia32_debugctlfreeze_perfmon_on_pmi msr 1d9h bit is set to 1 when intel pt processor trace triggers a topa table of physical addresses pmi perfmon interrupt performance monitoring counters are not frozen as expected
use of vmaskmov instructions to store data that splits over two pages when the instruction resides on the first page may cause a hang if ept extended page tables is in use and the store to the second page requires setting the ad bits in the ept entry
according to hwp hardware pstates specification the reset value of the maximum_performance field bits 158 in ia32_hwp_request msr 774h should be set to the value of ia32_hwp_capabilities msr 771h highest_performance field bits70 after reset due to this erratum the reset value of maximum_performance is always set to 0xff
according to hwp hardware pstates specification the guaranteed_performance field bits158 in the ia32_hwp_capabilities msr 771h should be updated as a result of changes in the configuration of tdp rapl running average power limit ratl and other platform tuning options that may have dynamic effects on the actual guaranteed performance support level due to this erratum the processor will update the guaranteed_performance field only as a result of configurable tdp dynamic changes
according to hwp hardware pstates specification the guaranteed_performance field bits158 in the ia32_hwp_capabilities msr 771h and the guaranteed_performance_change bit 0 bit in ia32_hwp_status msr 777h should not be changed more than once per second nor should the thermal interrupt associated with the change to these fields be signaled more than once per second due to this erratum the processor may change these fields and generate the associated interrupt more than once per second
due to this erratum the core and ring frequencies may be lower than expected for up to several seconds after bios completes
after a fault due to a failed pebs processor event based sampling or bts branch trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
the memory atretirement performance monitoring events listed below may produce incorrect results when a performance counter is configured in osonly or usronly modes bits 17 or 16 in ia32_perfevtselx msr counters with both os and usr bits set are not affected by this erratum the list of affected memory atretirement events is as follows mem_inst_retiredstlb_miss_loads event d0h umask 11h mem_inst_retiredstlb_miss_stores event d0h umask 12h mem_inst_retiredlock_loads event d0h umask 21h mem_inst_retiredsplit_loads event d0h umask 41h mem_inst_retiredsplit_stores event d0h umask 42h mem_load_retiredl2_hit event d1h umask 02h mem_load_retiredl3_hit event d1h umask 04h mem_load_retiredl4_hit event d1h umask 80h mem_load_retiredl1_miss event d1h umask 08h mem_load_retiredl2_miss event d1h umask 10h mem_load_retiredl3_miss event d1h umask 20h mem_load_retiredfb_hit event d1h umask 40h mem_load_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_l3_hit_retiredxsnp_none event d2h umask 08h
under certain conditions ring_perf_limit_reasons msr 6b1h may incorrectly assert the other status bit bit 8 as well as the other log bit bit 24
due to this erratum the conditions for hwp hardware pstates to generate a thermal interrupt on a logical processor may generate thermal interrupts on both logical processors of that core
when both msi message signaled interrupts and legacy intx are enabled by the camera device intx is asserted rather than issuing the msi in violation of the pci local bus specification
intel software guard extensions intel sgx define new accesscontrol requirements on memory accesses a violation of any of these requirements causes a page fault pf that sets bit 15 sgx in the pagefault error code due to this erratum these violations instead cause generalprotection exceptions gp
the pcie and peg pcie express graphics aer advanced error reporting capability is not enabled for serverworkstation skus
performance monitoring counters configured to count only os or only usr events by setting exactly one of bits 16 or 17 in ia32_perfevtselx msrs 186h18dh may not count for a brief period during the transition to a new cpl
if bios uses the rsm instruction to load the smbase register with a value that would cause any part of the smram statesave area to have an address above 4gbytes subsequent transitions into and out of smm systemmanagement mode might save and restore processor state from incorrect addresses
if the vmentry controls load ia32_bndcfgs field bit 16 is 1 vmentry should fail when the value of the guest ia32_bndcfgs field in the vmcs is not canonical that is when bits 6347 are not identical due to this erratum vmentry does not fail if bits 6348 are identical but differ from bit 47 in this case vmentry loads the ia32_bndcfgs msr with a value in which bits 6348 are identical to the value of bit 47 in the vmcs field
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
under complex microarchitectural conditions executing a 256 intel avx bit instruction may result in unpredictable system behavior
an x87 store instruction which causes a pe precision exception to be pended and updates an ept extended page tables ad bit and causes a vm exit such as ept violation or pf vm exit may lead to unexpected behavior
when resuming from s3s4s5 or following a power on peci may fail to function properly
when edram is enabled the processor may experience a hang or a machine check exception with an error reported in ia32_mc10_status
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility pebs extension however due to this erratum load latency facility may stop counting load instructions when intel hyperthreading technology is enabled
bndldx and bndstx instructions access the bounds directory and table to load or store bounds these accesses should signal gp general protection exception when the address is not canonical ie bits 48 to 63 are not the sign extension of bit 47 due to this erratum gp may not be generated by the processor when a noncanonical address is used by bndldx or bndstx for their bound directory memory access
the temperature reported by the dts digital thermal sensor on ddr4 systems may vary from the actual temperature by 5c to 15c rather than the specified 5c
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility an extension of pebs however due to this erratum these events may count incorrectly for vgathervpgather instructions
due to this erratum bits115 in ia32_rtit_cr3_match msr 572h are reserved an msr write that attempts to set that field to a nonzero value will result in a gp fault
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
attempts to write illegal values to msr_misc_pwr_mgmt msr 0x1aa result in gp general protection fault and should not change the msr value due to this erratum some bits in the msr may be updated on writing an illegal value
under complex system conditions system agent enhanced intel speedstep technology may result in unpredictable system behavior
under complex microarchitectural conditions the processor may hang with an internal timeout error mcacod 0400h logged into ia32_mci_status
on a vmresume or vmlaunch with both traceen0 and cr3filter7 in ia32_rtit_ctl msr 0570h set to 1 both before the vm entry and after the new value of cr3 is not compared with ia32_rtit_cr3_match msr 0572h
backtoback accesses to the vga register ports io addresses 0x3c2 0x3ce 0x3cf will experience higher than expected latency
cpuid leaf 2 eax02h tlb information inaccurately reports that the shared 2nd level tlb is 6way set associative value c3h although it is 12way set associative other information reported by cpuid leaf 2 is accurate
under complex microarchitectural conditions short loops of less than 64 instructions that use ah bh ch or dh registers as well as their corresponding wider register for example rax eax or ax for ah may cause unpredictable system behavior this can only happen when both logical processors on the same physical processor are active
processor graphics may not properly restore internal configuration after warm reset when package c8 is disabled
due to incorrect configuration of ddr4 odt by bios it is possible for a multirank system to violate section 427 of the ddr4 jedec spec revision jesed794a
a complex set of architectural and microarchitectural conditions may lead to a processor hang with an internal timeout error mcacod 0400h logged into ia32_mci_status when both logical processors in a core are active this erratum will not occur unless there is no store on one of the logical processors for more than 10 seconds
with high bandwidth multiple display configurations display engine underruns may occur
due to this erratum spurious corrected errors may be logged in the ia32_mc0_status msr 401h register with the valid field bit 63 set the uncorrected error field bit bit 61 not set a model specific error code bits 3116 of 0x0001 and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
vector masked store instructions to wb writeback memorytype that cross cache lines may lead to cpu writing back cached data even for cache lines where all of the bytes are masked
if the prochot pin is configured as an outputonly signal prochot may incorrectly be asserted during pkgc10
a mov sspop ss instruction should inhibit all interrupts including debug breakpoints until after execution of the following instruction this is intended to allow the sequential execution of mov sspop ss and mov resp rebp instructions without having an invalid stack during interrupt handling however an enabled debug breakpoint or single step trap may be taken after mov sspop ss if this instruction is followed by an instruction that signals a floating point exception rather than a mov resp rebp instruction this results in a debug exception being signaled on an unexpected instruction boundary since the mov sspop ss and the following instruction should be executed atomically
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
uncorrectable errors logged in ia32_cr_mc2_status msr 409h may also result in a system hang causing an internal timer error mcacod  0x0400h to be logged in another machine check bank ia32_mci_status
some of the b0b3 bits breakpoint conditions detect flags bits 30 in dr6 may be incorrectly set for nonenabled breakpoints when the following sequence happens mov or pop instruction to ss stack segment selector next instruction is fp floating point that gets fp assist another instruction after the fp instruction completes successfully a breakpoint occurs due to either a data breakpoint on the preceding instruction or a code breakpoint on the next instruction due to this erratum a nonenabled breakpoint triggered on step 1 or step 2 may be reported in b0b3 after the breakpoint occurs in step 4
under complex microarchitectural conditions if software changes the memory type for data being actively used and shared by multiple threads without the use of semaphores or barriers software may see load operations execute out of order
normally when the processor encounters a segment limit or canonical fault due to code execution a gp general protection exception fault is generated after all higher priority interrupts and exceptions are serviced due to this erratum if rsm resume from system management mode returns to execution flow that results in a code segment limit or canonical fault the gp fault may be serviced before a higher priority interrupt or exception for example nmi nonmaskable interrupt debug breakdb machine check mc and so forth if the rsm attempts to return to a noncanonical address the address pushed onto the stack for this gp fault may not match the noncanonical address that caused the fault
during the transition from real mode to protected mode if an smi system management interrupt occurs between the mov to cr0 that sets pe protection enable bit 0 and the first far jmp the subsequent rsm resume from system management mode may cause the lower two bits of cs segment register to be corrupted
when a debug exception is signaled on a load that crosses cache lines with data forwarded from a store and whose corresponding breakpoint enable flags are disabled dr7g0g3 and dr7l0l3 the dr6b0b3 flags may be incorrect
normally each instruction clears the changes in dr6 debug status register caused by the previous instruction however the instruction following a mov ssrm mov to the stack segment selector or pop ss pop stack segment selector instruction will not clear the changes in dr6 because data breakpoints are not taken immediately after a mov ssrm or pop ss instruction due to this erratum any dr6 changes caused by a mov ssrm or pop ss instruction may be cleared if the following instruction is a store
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
the enter instruction is used to create a procedure stack frame due to this erratum if execution of the enter instruction results in a fault the dynamic storage area of the resultant stack frame may contain unexpected values that is residual stack data as a result of processing the fault
under a specific set of conditions mmx stores movd movq movntq maskmovq which cause memory access faults gp ss pf or ac may incorrectly update the x87 fpu tag word register this erratum will occur when the following additional conditions are also met the mmx store instruction must be the first mmx instruction to operate on x87 fpu state that is the x87 fp tag word is not already set to 0x0000 for movd movq movntq stores the instruction must use an addressing mode that uses an index register this condition does not apply to maskmovq
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
when the processor encounters an instruction that is greater than 15 bytes in length a gp is signaled when the instruction is decoded under some circumstances the gp fault may be preempted by another lower priority fault for example page fault pf however if the preempting lower priority faults are resolved by the operating system and the instruction retried a gp fault will occur
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
the io_smi bit in smrams location 7fa4h is set to 1 by the cpu to indicate a system management interrupt smi occurred as the result of executing an instruction that reads from an io port due to this erratum the io_smi bit may be incorrectly set by a nonio instruction smi is pending while a lower priority event interrupts a rep io read a io read that redirects to mwait
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
when in v86 mode if a mov instruction is executed tofrom a debug registers a generalprotection exception gp should be generated however in the case when the general detect enable flag gd bit is set the observed behavior is that a debug exception db is generated instead
when a performance monitoring counter is configured for pebs precise event based sampling overflows of the counter can result in storage of a pebs record in the pebs buffer due to this erratum if the overflow occurs during probe mode it may be ignored and a new pebs record may not be added to the pebs buffer
under certain conditions as described in the software developers manual section out oforder stores for string operations in pentium 4 intel xeon and p6 family processors the processor performs rep movs or rep stos as fast strings due to this erratum fast string rep movsrep stos instructions that cross page boundaries from wbwc memory types to ucwpwt memory types may start using an incorrect data size or may observe memory ordering violations
bits 5350 of the ia32_vmx_basic msr report the memory type that the processor uses to access the vmcs and data structures referenced by pointers in the vmcs due to this erratum a vmx access to the vmcs or referenced data structures will instead use the memory type that the mtrrs memorytype range registers specify for the physical address of the access
in certain circumstances when a floating point exception mf is pending during singlestep execution processing of the singlestep debug exception db may be mishandled
when a performance monitoring counter is configured for pebs precise event based sampling overflow of the counter results in storage of a pebs record in the pebs buffer the information in the pebs record represents the state of the next instruction to be executed following the counter overflow due to this erratum if the counter overflow occurs after execution of either mov ss or sti storage of the pebs record is delayed by one instruction
a jump to a busy tss taskstate segment may cause a ts invalid tss exception instead of a gp fault general protection exception
if vm entry is executed with the nmiwindow exiting vmexecution control set to 1 a vm exit with exit reason nmi window should occur before execution of any instruction if there is no virtualnmi blocking no blocking of events by mov ss and no blocking of events by sti if vm entry is made with no virtualnmi blocking but with blocking of events by either mov ss or sti such a vm exit should occur after execution of one instruction in vmx nonroot operation due to this erratum the vm exit may be delayed by one additional instruction
after a return from smm system management mode the cpu will incorrectly update the lbr last branch record and the bts branch trace store hence rendering their data invalid the corresponding data if sent out as a btm on the system bus will also be incorrect note this issue would only occur when one of the 3 above mentioned debug support facilities are used
processor does not signal ud fault when executing the reserved instruction vphminposuw with vexvvvv1111 the vphminposuw instruction is described in greater detail in the intel advanced vector extensions programming reference
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
the intel 64 and ia32 architectures software developers manual volume 2b states that execution of vmread or vmwrite should fail if the value of the instructions register source operand corresponds to an unsupported field in the vmcs virtual machine control structure the correct operation is that the logical processor will set the zf zero flag write 0ch into the vminstruction error field and for vmread leave the instructions destination operand unmodified due to this erratum the instruction may instead clear the zf leave the vminstruction error field unmodified and for vmread modify the contents of its destination operand
execution of the vzeroall or vzeroupper instructions in 64bit mode with vexw set to 1 may erroneously cause a ud invalidopcode exception
attempt to use opcode 9bh with a vex opcode extension should produce a ud invalidopcode exception due to this erratum if cr0mp and cr0ts are both 1 the processor may produce a nm devicenotavailable exception if one of the following conditions exists 66h f2h f3h or rex as a preceding prefix an illegal map specified in the vexmmmmm field
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so that there is a valid translation for the page for example by setting to 1 the present bit in one of the pagingstructure entries used to translate the page software on another logical processor observes this modification for example by accessing a linear address on the page or by reading the modified pagingstructure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs a store to a linear address on the page in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page intel has not observed this erratum with any commercially available software
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
execution of the vpextrd or vpinsrd instructions outside of 64bit mode with vexw set to 1 may erroneously cause a ud invalidopcode exception
when a 2byte opcode of a conditional branch opcodes 0f8xh for any value of x instruction resides in 16bit codesegment and is associated with invalid vex prefix it may sometimes signal a gp fault illegal instruction length  15bytes instead of a ud illegal opcode fault
the from address associated with the lbr last branch record btm branch trace message or bts branch trace store may be incorrect for the first branch after a transition of enhanced intel speedstep technology tstate thermal monitor states s1state acpi package sleep state c1e enhanced c1 low power state adaptive thermal throttling
under specific internal conditions if software tries to write the ia32_fixed_ctr1 msr 30ah a value that has all bits 311 set while the counter was just about to overflow when the write is attempted that is its value was 0xffff ffff ffff then due to this erratum the new value in the msr may be corrupted
when an l1 data cache error is logged in ia32_mci_status150 which is the mca error code field with a cache error type of the format 0000 0001 rrrr ttll the ll field may be incorrectly encoded as 01b instead of 00b
due to this erratum the pcie poison forwarding enable and intel quickpath interconnect intel qpi poison enable bits are cleared by warm reset but other bits related to the poisoning feature remain set after the warm reset the system may be in an invalid state in regards to the poisoning bits this invalid state may cause the feature to be disabled
successful vm entries using the vmlaunch instruction should set the launch state of the vmcs to launched due to this erratum such a vm entry may not update the launch state of the current vmcs if the vm entry is returning from smm
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
with respect to data poisoning the processor iio module supports forwarding poisoned information between the coherent interface and pcie and viceversa also the processor iio module supports forwarding poisoned data between peer pcie ports when the pcie ports 1a and 1b are configured as x4 the outbound poison error is reported on port 1a when a poison packet is forwarded to port 1b
the instruction fetch machine check error mcacod 0x150 is a srar software recoverable action required error the address of the location with the error is provided in the corresponding ia32_mci_addr msr when multiple instruction fetch errors are logged as part of a single machine check event as indicated by setting of the overflow bit 62 in the ia32_mci_status msr then recovery is not possible due to this erratum when multiple instruction fetch errors are logged in the same bank the ia32_mci_misc msr contains all of the correct information including the proper setting for overflow bit 62 however the ia32_mci_addr msr is overwritten with a value that corresponds to neither the first or second error
according to the intel qpi specification if a target agent receives a packet with a non zero rsvd_chk field it should flag it as an intel qpi link layer detected unsupportedundefined packet due to this erratum the processor does not check the rsvd_chk field nor report the expected error
the intel qpi link control register cpubus1 devices 8 9 function 0 offset 0x44 bits 17 and 16 allow for the control of the link layer initialization by forcing the link to stall the initialization process until cleared the intel qpi link status register cpubus1 device 8 9 function 0 offset 0x48 bits 2724 report the link initialization status linkinitstatus the linkinitstatus incorrectly reports internal stall link initialization 0001b for nonintel qpi link control register bit1716 stall conditions the intel qpi specification does not intend for internal stall conditions to report that status but rather report the normal waiting for physical layer ready 0000b
the intel qpi interface specification requires tx ac common mode accm to be between 50 mv to 50 mv at 80 gts testing across process voltage and temperature showed that the accm exceeded the upper end of the specification on several lanes
frb fault resilient booting is defined as the ability to boot even when one or more processors in the system fail as long as there is one processor functional if a warm reset is asserted during the boot flow before the intel qpi interface is enumerated and while a processor is hot and drives prochot_n the processor that is driving prochot_n will mistakenly observe prochot_n as a signal to transition itself into frb mode
the default current compensation values for pcie buffers may result in nonoptimal performance
the pcie bus uses high speed serial links that must go through a training process to allow both transmitter and receiver to make adjustments in behavior to optimize the signaling between the transmitter and receiver when a pcie compliant device must train or retrain the link training sequences are used the device must allow enough time for the training to complete before transitioning to normal operation in the case of pcie equalization at 80 gts the processor is not allowing enough time to optimize signaling before attempting normal operation
the qpils register cpubus1 devices 89 function 0 offset 0x48 according to the intel quick path interconnect specification at revisions 11 and later should report the vnavn0 credits available for the processor tx transmit port due to this erratum the qpils register reports the vnavn0 credits available for the processor rx receive port
during the intel qpi link layer initialization parameters are exchanged by hardware the parameters that are received are stored by the receiver the information is used to setup link operation one of those parameters that is exchanged is the router value the router value should be one but it is zero in the processor
when a load occurs to a first level data cache line resulting in a parity error in close proximity to other software accesses to the same cache line and other locked accesses the processor may exhibit unexpected behavior
the intel qpi specification defines two methods of computing crc 8bit crc or 16bit rolling crc the processor implements only 8bit crc the crc mode supported bit in the qpilcp registers devices 8 9 function 0 offset 40h bit 11 is set incorrectly indicating that both 8bit crc and 16bit rolling crc are supported
peci 30 introduces a host identification field as a way for the peci host device to identify itself to the peci client this is intended for use in future peci systems that may support more than one peci originator since peci 30 systems do not support the use of multiple originators peci 30 host devices should zero out the unused host id field peci 30 also introduces a retry bit as a way for the peci host to indicate to the client that the current request is a retry of a previous read or write operation unless the peci 30 host device zeroes out the byte containing the host id  retry bit information peci write requests that require a retry will never complete successfully
the pcie specification defines a limit for the vswing voltage swing of the differential lines that make up a lane to be 1200 mv peaktopeak when operating at 25 gts and 5 gts intel has found that the processors pcie transmitter may exceed this specification peaktopeak swings on a limited number of samples have been observed up to 1450 mv
the intel qpi interface physical layer performs calibration across all 20 of the lanes and reports the success or failure of the calibration process due to this erratum the processor may detect spurious errors during the calibration of the intel qpi interface the bus and interconnect errors are reported with the ia32_mci_statusmcacod bits 150 with a value of 0000_1xx0_0000_1111 where x is zero or one
pci express interface incorporates a recovery mechanism when certain link degradation occurs by retraining the link without impacting the pending transactions when a link is degraded on a specific port due to pcie signaling issues it is possible that correctable receiver errors are reported on the neighboring logically adjacent port the correctable receiver errors are indicated by the pcie aer correctable error bit xpglberrsts cpubus0 device 03 function 03 offset 230h bit 2
a cmci corrected machine check error interrupt should be generated when the number of corrected errors for a bank reaches the corrected error threshold programmed into the ia32_mci_ctl2 bits 140 for memory scrubbing errors ia32_mci_statusmcacod bits 150 with value of 000x_0000_1100_xxxx where x stands for zero or one a cmci will not be generated until the number of errors has exceeded the threshold in ia32_mci_ctl2 by 1
when the pcie rx termination is not powered the dc common mode impedance has the following requirement 10 k over 0200 mv range with respect to ground and 20 k for voltages 200 mv with respect to ground the processors pcie rx do not meet this requirement at 85 degrees c or greater in a limited number of samples intel has measured an impedance as low as 985 k at 50 mv
the advanced error interrupt message number field rperrsts devices 03 functions 03 offset 178h bits3127 should be updated when the number of messages allocated to the root port is changed by writing the multiple message enable field msimsgctl device 3 function 0 offset 62h bits64 however writing the multiple message enable in the root port does not update the advanced error interrupt message number field
the processor sends the pcie set_slot_power_limit message on writes to the slot capabilities sltcap devices 03 functions 03 offset a4h register due to this erratum the processor also sends pcie the set_slot_power_limit message on writes to the lnkcon cpubus0 devices 03 functions 03 offset a0h register
enabling intel qpi l0s state in a dual processor system with both processor sockets populated may not allow the intel qpi link between the processors to enter the l1 state
a locked memory access which splits across a cacheline boundary that suffers a master abort on a pci bus may lead to a system hang
the processor is demonstrating link training sensitivities related to clock detection and will indicate the error with an ia32_mci_statusmscod bits2116 of 10011 and with an ia32_mci_statusmcacod bits150 of 0000_1000_0000_1111
the processors may not complete a cold boot that is a boot from a poweroff state due to an internal timer error machine check ia32_mci_statusmcacod of 0000_0100_0000_0000 this will result in the processor asserting ierr internal error
the pcie specification requires that the rx common mode return loss in the range of to 25 ghz must be limited to 6 db the processors pcie rx do not meet this requirement the pcie rx common mode return at 500 mhz has been found to be between 35 and 4 db on a limited number of samples
the most significant bit of the cec corrected error count ia32_mci_status i12 19 bit 52 cannot be cleared once it has been set
an unexpected page fault pf or ept violation may occur for a page under the following conditions the paging structures initially specify no valid translation for the page software on one logical processor modifies the paging structures so that there is a valid translation for the page for example by setting to 1 the present bit in one of the pagingstructure entries used to translate the page software on another logical processor observes this modification for example by accessing a linear address on the page or by reading the modified pagingstructure entry and seeing value 1 for the present bit shortly thereafter software on that other logical processor performs a store to a linear address on the page in this case the store may cause a page fault or ept violation that indicates that there is no translation for the page for example with bit 0 clear in the pagefault error code indicating that the fault was caused by a notpresent page intel has not observed this erratum with any commercially available software
in the case of the pcie equalization procedure for 8 gts the downstream ports for example the processors txeq transmitter equalization settings can be fine tuned for each lane during a process called adaptive equalization phase 3 due to this erratum the processor may not direct the endagent to the optimal txeq settings
when multiple cores have outstanding transactions targeted to a single caching agent and one of the cores enters a core cstate before completing the transaction with the targeted caching agent an internal timer machine check error may occur ia32_mci_statusmcacod of 0000_0100_0000_0000
the tsc time stamp counter msr 10h should be cleared on reset due to this erratum the tsc is not affected by warm reset
when a warm reset is attempted and an ierr internal error happens as indicated by the ia32_mci_statusmcacod of 0000_0100_0000_0000 a poweron reset occurs instead
if both dca direct cache access and dma xor operations are active at the same time then invalid prefetch hints may be generated these prefetch transactions may not complete and could result in a timeout machine check which will cause caterr to become asserted
for mixed channel dma xor and legacy operations active on the same channel completion writes from legacy operations may pass completion writes from xor operations resulting in out of order descriptor updatescompletions
if a galois field generatevalidate base descriptor has either the p operations disable or q operation disable bit set and the corresponding disabled p parity address or q parity address field of the descriptor does not contain a validaligned address the dma channel may halt unexpectedly with destination address errors the destination address errors will be logged in chanerr_int dma transfer destination address error device 4 function 07 offset 180h bit 1
if a parity error occurs of source read completion data while inside the dma for 8k descriptor transfer lengths the dma channel will hang until the next platform resetthis behavior only applies if the data arrived at the dma unit error free from dram and intel qpi but then had a parity error in the completion data fifo inside the dma
pcie flr function level reset of the dma function may result in an incorrect cb_bar device 4 function 07 offset 10h decode when a memory read of the cb_bar occurs around the same time as the flr
incorrect data transfers can occur if more than one dma channel is in operation and 8 kb xor dma transfer sizes are being used xor dma transfer size is set by software in the block size field of the xor with galios field generatevalidate base descriptor
if the chanerr field read data error offset a8h bit 8 is set due to a poisoned completion error during a dma xor operation the dma stays in the halted state and the read data error bit does not clear
when using multiple dma channels all dma channels may hang if a dma channel restart is attempted with a legacy descriptor as the first descriptor following an error halt on an extended descriptor on channel 0 or 1
if dma xor interrupts and completions are enabled on channel 0 or 1 concurrent with operation on channels 27 incorrect data transfers can occur on dma channels 27 dma xor interrupts and completions are enabled by setting bits 0 and 3 of descriptor control field of a dma xor with galios field generatevalidate base descriptor
suspending an active dma xor channel by setting chancmdsuspend dma bit offset 84 bit 2 while xor type dma channels are active may cause incorrect data transfer on the other active legacy channels this erratum may also occur while resetting an active dma xor channel chancmdreset dma bit offset 84 bit 5 chancmd is in the region described by cb_bardevice 4 function 07 offset 10h on the processors internal io bus as defined in the iiobusno register
dma xor descriptors with dword aligned sources and fencing enabled may result in a xor channel hang until the next platform reset xor dma fencing is set by software in descriptor controlfence xor base descriptor bit 4
during the pkg package c3 state entry the processor directs the vr12 ddr3 voltage regulators to shed phases to reduce power consumption due to this erratum the processor may not restore all vr12 ddr3 voltage regulator phases upon pkg c3 state exit the vr12 ddr3 voltage regulators require all phases to keep the ddr3 voltage plane in tolerance for proper memory subsystem functioning during normal system operation
the intel qpi should detect an unsupported or undefined packet drop the offending packet and log a correctable error with an ia32_mci_statusmcacod of 0000_1100_0000_1111 when the intel qpi detects an unsupported or undefined packet it does not drop the offending packet but it does log the error
pcie specification states that if the phase 1 of transmitter equalization completes successfully as indicated by the lnksts2equalization phase 1 successful devices 0 3 functions 03 bit2 bit being set to one and if the phase 2 and 3 link training phases are bypassed the lnksts2equalization phase 3 successful devices 03 functions 03 bit4 and lnksts2equalization phase 2 successful bit3 bits should be set to one due to this erratum the processor will only set the equalization phase 2 or 3 successful bits if the phases are completed successfully
intel virtualization technology for directed io intel vtd queued invalidation operations issue a status write to modify a semaphore due to this erratum the status write may fail
if the processor throttles due to either high temperature thermal conditions or due to an explicit operating system throttling request tt1 while executing getsecsenter or getsecsexit instructions then under certain circumstances the processor may hang intel has not been observed this erratum with any commercially available software
the fp floating point data operand pointer is the effective address of the operand associated with the last noncontrol fp instruction executed by the processor if an 80 bit fp access load or store uses a 32bit address size in 64bit mode and the memory access wraps a 4gbyte boundary and the fp environment is subsequently saved the value contained in the fp data operand pointer may be incorrect
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
when freeze_lbrs_on_pmi is enabled bit 11 of ia32_debugctl msr 1d9h is set and a taken branch retires at the same time that a pmi performance monitor interrupt occurs then under certain internal conditions the record at the top of the lbr stack may contain an incorrect from address
if the debugcontrol register dr7 is configured so that some but not all of the breakpoints in the debugaddress registers dr0dr3 are enabled and one or more of the following performancemonitoring counters are locally enabled via ia32_cr_permon_evntsel_cntr30 br_inst_retired br_misp_retired fp_assist fp_assist inst_retired machine_clears mem_load_uops_llc_hit_retired mem_load_uops_misc_retiredllc_miss mem_load_uops_retiredmem_trans_retiredmem_uops_retired other_assists rob_misc_eventslbr_inserts uops_retired any of the globally enabled via ia32_cr_emon_perf_global_ctrl counters may overcount certain events when a disabled breakpoint condition is met
the hdrlog registers contain the header information of the first pcie packet detected that contains errors because of this erratum the port 1 iou2 hdrlog registers cpubus0 device 1 function 0 offsets 164h 168h 16ch 170h do not reflect the header of a packet with a detected error
the processor peci powerup time line presented in the intel xeon processor e5 1600e52600e54600 product families datasheet  volume one or intel xeon e52400 product family datasheet volume two defines the value returned by the peci gettemp command as 0x0000  the maximum value  during the data not ready dnr phase starting approximately 100 s after pwrgood assertion and lasting until approximately 500 s after reset deassertion due to this erratum the gettemp command returns a small negative number during the dnr phase
the processor may not complete smbus system management bus transactions targeting the tsod temperature sensor on dimm when package cstates are enabled due to this erratum if the processor transitions into a package cstate while an smbus transaction with the tsod is in process the processor will suspend receipt of the transaction the transaction completes while the processor is in a package cstate upon exiting package cstate the processor will attempt to resume the smbus transaction detect a protocol violation and log an error
the lower limit for the dram rapl running average power limit dynamic range is specified to be about 120 of dram minimum power due to this erratum the lower limit is enforced at about 170 of dram minimum power dram minimum power can be found in the minimal dram power field dram_power_info csr at cpubus1 device 10 function 2 offset 90h bits3016
the machine check error code mcacod in the ia32_mc3_status msr 040dh register is intended to report the type of error that has been discovered the 0119h mcacod is correctly logged for mlc midlevel cache generic read errors and due to this erratum also logged for errors detected as a result of monitor instructions
the processor pcie interface incorrectly transitions from the pollingactive link state to the pollingcompliance link state after receiving two ts1 ordered sets with the compliance bit set instead of the eight ts1 ordered sets required by the specification
patrol scrubbing is disabled at entry into package c3 and package c6 states due to this erratum the memory subsystem may not get fully scrubbed in the expected hour timeframe
the processor should be instructing dram to utilize deep selfrefresh at entry into the s3 state due to this erratum the processor is instructing the dram to use shallow selfrefresh upon entry into the s3 state
the processor may not place the associated dram subsystem in the lowest allowed power state during package c3 and package c6 states this may cause the platform idle power to be higher than expected
due to this erratum a peci transaction during an sstate transition may result in an unexpected platform cold reset rather than an sstate transition
due to this erratum the bios sequencing associated with s4 sometimes known as hibernate and s5 also known as soft off when undertaken with certain complex platform conditions can result in an internal timeout error as indicated by ia32_mci_statusmcacod of 0000_0100_0000_0000 and ierr assertion this internal timeout error stops the platform sstate sequencing before platform power down occurs certain platforms may have logic that upon detection of the failure to reach power down initiates a cold reset sequence
a posted write targeting the sdoorbell offset 64h or b2bdoorbell offset 140h mmio registers in the region define by base address register pb01base bus 0 device 3 function 0 offset 10h or sb01base bus m device 0 function 0 offset 10h may hang the system this system hang may occur if the ntb nontransparent bridge is processing a transaction from the secondary side of the ntb that is targeting the ntb shared mmio registers or targeting the secondary side configuration registers when the write arrives
pdir precise distribution for instructions retired mechanism is activated by programming inst_retiredall event c0h umask value 00h on counter 1 when pdir is activated in pebs precise event based sampling mode with an additional precise perfmon event an incorrect pmi or pebs event may occur
when a peci rdiamsr command is issued to the processor near the time that the processor is experiencing an internal timeout error as indicated by ia32_mci_statusmcacod of 0000_0100_0000_0000 and ierr assertion the peci interface may issue an 81h timeout response after a timeout response the processor will ignore future peci commands until it is reset
certain long latency transactions  for example master aborts on inbound traffic locked transactions peertopeer transactions or vendor defined messages  conveyed over the pcie and dmi2 interfaces can block the progress of subsequent transactions for extended periods in certain cases these delays may lead to io device timeout that can result in device error reports andor device offlining
the coherent interface error status registers irpp0errst and irpp1errst at cpubus0 device 5 function 2 offsets 230h and 2b0h respectively indicate that an error has been detected by the coherent interface bit 3 indicates that a write cache uncorrectable ecc c2 error has occurred bit 4 indicates that a csr access crossing 32bit boundary c3 error has occurred bit 13 indicates that a protocol queuetable overflow or underflow da error has occurred bit 14 indicates that a protocol parity error db error has occurred due to this erratum the processor may incorrectly log the c2 c3 da and db error flags
if multiple poison events are detected within two core clocks the error is logged with an ia32_mci_statusmcacod of 0000_0001_0011_0100 but the ia32_mci_statusover bit 60 may not be set
according to the pcie base specification the pci express capability structure is required for all pci express device functions due to this erratum some pci express capabilities fields were not implemented device capability device status and device control for cpubus0 device 5 function 2 reads to these fields will return zero
the processor implements a surge protection circuit on the pcie receiver lanes due to this erratum during platform poweron some pcie devices may trigger the surge protection circuit causing a false receive detect if this unexpected detection occurs before the processors pcie lane termination impedances are enabled and the resulting pcie device link training enters the link training pollingactive state the pcie device may incorrectly transition into the pollingcompliance state
the mmioh is a memorymapped io region relocatable above 4 gb due to this erratum software reads of the lmmioh_limit register local mmio high base device 5 function 0 offset 118h may yield incorrect results although software writes to this register function as expected
the imc integrated memory controller permits independent sparing of one rank on each memory channel due to this erratum patrol scrub operation is impaired when more than one ranking sparing event occurs
due to this erratum a platform warm reset issued while a processor is attempting an authenticated boot on a multisocket intel trusted execution technology intel txt platform may initiate a series of repeating warm resets
the ntb nontransparent bridge may incorrectly set msi message signaled interrupt pending bits in msipending bar pb01basesb01base offset 74h while operating in msix mode or set msix pending bits in pmsixpba bar pb01base sb01base offset 03000h while operating in msi mode
xor dma channels may stop further progress in the presence of lockspholds if the source pointed to by a dma xor descriptor is not cacheline aligned
if two systems are connected via an ntb nontransparent bridge either the internal ntb or an external ntb and both systems attempt to send io peertopeer write traffic across the ntb either to memory or an io device on the remote system it is possible for both systems to deadlock
when the ntb nontransparent bridge is enabled the received pme_to_ack bit in miscctrlsts device 3 function 0 offset 188h bit48 can not be cleared if the timeout for receiving pme_to_ack is enabled device 3 function 0 offset 188h bit5 is 0
the ntb nontransparent bridge does not set pme_to_ack in miscctrlsts device 3 function 0 offset 188h bit 48 after a pme_turn_off request
in 64bit mode using rexw1 with pcmpestri and pcmpestrm or vexw1 with vpcmpestri and vpcmpestrm should support a 64bit length operation with rax rdx due to this erratum the length registers are incorrectly interpreted as 32bit values
due to this erratum the processor interprets any peci read or write command that accesses the processor a downstream pci device or package configuration space and differs from the preceding request only in the length field as a retry request that is a retry will be inferred by the processor even if the read length and write length fields dont match between two consecutive requests regardless of the state of the host retry bit on the succeeding request
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if a machine check is encountered while fetching an instruction and if the resulting machine check exception causes a vm exit the vm exit should save an rflags value in the gueststate area of the vmcs with the rf value that existed at the time of the machine check due to this erratum such vm exits that occur in realaddress mode may save rflagsrf as 1 even if it had been 0
the jedec standard ddr3 sdram specification no 793e requires that the cke signal be held high for txsdll dclks after exiting selfrefresh before issuing commands that require a locked dll delaylocked loop due to this erratum the integrated memory controller may not meet this requirement with 512 mb 1 gb and 2gb devices in single rank per channel configurations
the pcitopci bridge architecture specification defines the default value of the io base address field iobas cpubus0 device 03 function 03 offset 1ch bits 32 to 0 due to this erratum the processors default value is 3
due to this erratum a sustained series of pcie posted upstream writes to the same cache line with no other access of that same cache line may cause a deadlock
the processor brand string is provided by the cpuid instruction for leaf values eax80000002h 80000003h and 80000004h each execution of the three cpuid leaf value returns 16 ascii bytes of the processor brand string in the eax ebx ecx and edx registers due to this erratum an extra zero character 0 30h ascii code and space character   20h ascii code are inserted after the processor number in the brand string output in the following example brand string the extraneous characters are underlined intel xeon cpu e52680 0  270 ghz
drams require a 2x refresh rate when operating above 85c due to this erratum the imc integrated memory controller logic intended to double the refresh rate when dram temperature exceeds 85c can cause dram access failures leading to unpredictable system behavior
when a correctable machine check event with a valid address precedes an uncorrectable machine check event without a valid address the ia32_mci_status over flag bit 62 should be set and addrv flag bit 58 should be cleared due to this erratum both flags may be set
a corrected cache hierarchy data or tag error is reported in ia32_mci_statusmcacod bits 150 with value of 000x_0001_xxxx_xx01 where x stands for zero or one an error status indication bits 5453 value of 10b indicates that the corrected error count has exceeded the yellow threshold due to this erratum subsequent corrections after the yellow indication has been set may change the error status indication to green bits 5453 equal to 00b
due to this erratum if the reset_n signal is asserted while the processor is in a package c state the ia32_mci_status registers may contain undefined data after the processor completes the reset in particular the ia32_mci_statusval bit63 may be set incorrectly indicating a valid machine check has been logged
certain high capacity dimms typically quad rank rdimms and lrdimms may exceed instantaneous and shortterm power limits if refresh cycles are not correctly staggered due to this erratum the integrated memory controller is unable to stagger refresh cycles
due to this erratum a stream of snoop requests to a single cache slice may cause the processor in that slice to livelock resulting in a system hang or internal timer error machine check indicated by ia32_mci_statusmcacod bits 150 0000 0100 0000 0000
due to this erratum ia32_mci_statusen may not be set as expected after the mlc midlevel cache has logged a fatal error with a mcacod value of 000x_0001_xxxx_xx10 where x stands for zero or one and signaled an mce machine check error as a result of encountering poisoned data
a warm reset is defined as a reset that does not involve the shutdown of the power to the system that is only reset_n is asserted while pwrgood remains asserted due to this erratum during warm reset the processor may incorrectly apply commonmode voltage correction on the intel qpi interface resulting in a link training failure
llc cache correctable errors are logged in the corrected_error_count field bits 5338 of the ia32_mc1912_status msr due to this erratum llc cache corrections are not counted and logged
when a pcie link is operating at 25 gts and the processors ltssm link training and status state machine is in recoveryrcvrlock state the processor expects to receive ts1 ordered sets within 24 ms if it does not receive the ts1s in the allotted time the ltssm should transition to the detect state due to this erratum if the processor does not receive ts1s within 24 ms it will transition to configurationlinkwidthstart in that state if it receives no ts1s it will transition to detect if it receives ts1s it will configure the link appropriately and return to l0
writes to the ntb nontransparent bridge b2bspad150 registers bar pb01base sb01base offsets 100h  13fh may result in corrupted data transfer between systems
dram rapl running average power limit is a facility for limiting the maximum power consumption of the memory subsystem dram rapls control mechanism constrains the number of memory transactions during a particular time period due to this erratum a very low power limit can throttle certain memory subsystem configurations to an extent that system failure ranging from permanent loss of usb devices to system hangs may result
the ntb nontransparent bridge operating in ntbrp ntb to root port mode using message signaled interrupts msi or msix in the presence of locks may result in a system hang
the xsaveopt instruction may optimize performance by not saving state that has not been modified since the last execution of xrstor this optimization should occur only if the executions of xsaveopt and xrstor are either both or neither in smm system management mode due to this erratum this optimization may be performed by the first execution of xsaveopt after a transition into or out of the stm smmtransfer monitor if the most recent execution of xrstor occurred before that transition for transitions into the stm the erratum applies only to transitions using the vmcall instruction this erratum can occur only if the two executions are at the same privilege level use the same linear address and are either both or neither in vmx nonroot operation the erratum does not apply if software in smm never uses xrstor or xsaveopt
the integrated memory controller sequencing during a rank sparing copy operation blocks all writes to the memory region associated with the rank being taken out of service due to this erratum this block can result in a system stall that persists until the sparing copy operation completes
due to this erratum enabling opportunistic selfrefresh can lead to the memory controller overaggressively transitioning dram to selfrefresh mode when the processor is in pkg c2 state
in mirrored memory mode each channel manages its memory write bandwidth resources due to this erratum if a channel in mirrored memory mode is heavily utilized it is possible for issued writes to exceed available bandwidth resulting in write failures
pcie agents are required by the pcie base specification to identify and report packet errors due to this erratum certain invalid completion types from the end agent are not correctly handled by the processor
the pcie base specification requires that a downstream device can initiate link retraining due to this erratum link retraining cannot be initiated by the downstream device in a ntbntb nontransparent bridge or a ntbrp root port configuration
the imc integrated memory controller can be programmed to generate an smi system management interrupt on an internal memhot event assertion through the mhot_smi_en field mh_maincntl bus 1 device 15 function 0 offset 104h bit17 or on assertion of the external memhot10pin though the mhot_ext_smi_en field mh_maincntl bus 1 device 15 function 0 offset 104h bit18 due to this erratum a spurious smi may be generated every 500us if both internal and external memhot events are enabled simultaneously
a value of 1 in the link_bandwidth_notification_capability field lkncap bit 21 for a pcie device indicates support for the link bandwidth notification status and interrupt mechanisms due to this erratum this field for ports 2c 2d 3c and 3d lkncap bus 0 device 23 function 23 offset 09ch bit 21 always reads as 0 when it should read as 1
the capability_pointer field capptr bus 0 device 3 function 0 offset 34h bits 70 should have its value based on the configured mode of the port pcie or ntb nontransparent bridge due to this erratum this field reports the ntb value 60h when in pcie mode instead of the pcie value 40h
due to this erratum under a complex set of conditions intel qpi uncorrectable errors may cause a deadlock between the processor and pch platform controller hub the deadlock will cause a processor internal timeout error as indicated by ia32_mci_statusmcacod of 0000_0100_0000_0000 caterr assertion and a shutdown transaction being sent to the pch depending on the platform implementation this will result in reset being asserted to the pch this deadlock persists causing the pch to timeout on the reset request reacting to the reset request timeout the pch powers down the system
pcie configuration retries are allowed for older generation pcipcix bridges that take a long time to respond to configuration cycles after a reset due to this erratum a fifth configuration cycle following the fourth pcie configuration retry may not make progress resulting in a deadlock
configuration reads to nonexistent pci configuration registers should return 0ffff_ffffh due to this erratum when the peci rdpciconfiglocal command references a nonexistent pci configuration register the value 0000_0000h may be returned instead of the expected 0ffff_ffffh
the ccr class code register value for the following devices should be 088000h instead is 000000h bus 0 device 6 function 17 offset 09h bits 230 bus 0 device 7 function 04 offset 09h bits 230
when in dmi mode the device_port_type field pxpcap bus 0 device 0 function 0 offset 92h bits 74 should read as 9h dmi mode but incorrectly reads as 4h pcie mode
tph transactions processing hints are optional aids to optimize internal processing of pcie transactions due to this erratum certain transactions with tph attributes may be misdirected resulting in unpredictable system behavior
the processor is capable of continuous intel qpi retraining due to this erratum the field reporting support for this feature continuous retraining qpireut_ph_cpr bus 1 device 89 function 3 offset 128h bit 18 indicates this feature is not supported although it is enabled and cannot be disabled
under certain conditions the processor may not detect or correct a correctable memory error
the ia32_mci_status msrs addrv bit bit 58 is set upon logging an error in order to indicate that the contents of the ia32_mci_addr msr is valid due to this erratum a cancelled speculative load of poisoned data spanning a cacheline boundary can clear the addrv flag associated with a previously logged error report
the lock quiescent flow is a means for an agent to gain sole ownership of another agents resources by preventing other devices from sending transactions due to this erratum during the lock quiescent flow the intel quickdata technology dma read and write queues are throttled simultaneously this prevents subsequent read completions from draining into the write queue hanging the dma lock state machine
the pcie base specification requires power management messages to use the default traffic class designator tc0 and receivers to check for violations of this rule due to this erratum a tlp using a nondefault traffic class designator will be dropped rather than handled as a malformed tlp
the intel speedstep technology can dynamically adjust the core operating frequency to as low as 1200 mhz due to this erratum under complex conditions and when the cores are operating at or below the dram ddr frequency unpredictable system behavior may result
the integrated memory controller incorporates a power savings mode known as ibt_off input buffer termination disabled due to this erratum quad rank dimms may not be properly refreshed during ibt_off mode
nonpage aligned intel quickdata technology dma next sourcedestination addresses may cause memory readwrite collisions
enabling ro relaxed ordering for intel quickdata technology transactions via the enable relaxed ordering field devcon device 4 function 07 offset 98h bit 4 while inbound ro is disabled for the dma via the disable ro field on writes from intel quickdata dma iiomiscctrl device 5 function 0 offset 1c0h bit 22 creates a conflict the disable inbound ro for intel quickdata dma writes control takes precedence due to this erratum the processor will incorrectly return a strongly ordered completion for the transaction which can then live lock or result in a system hang
the processor autonomously manages intel qpi quickpath interconnect link power state transitions based on link idle intervals due to this erratum crc errors may be detected during intel qpi link power state transitions and may be logged in qpireut_err_ced bus 1 device 89 function 3 offset 120h
peci reports temperatures as an offset from the prochot threshold a negative value when the temperature is below the prochot threshold zero when at or above that threshold if the temperature is below 0c peci responds with an invalid temperature encoding 8002h due to this erratum peci may indicate an invalid temperature when the actual temperature is as high as 7c
the dram power meter uses vr voltage regulator current readings in combination with weighted activity counters to provide a running estimate of dram subsystem power due to this erratum the dram power meter may not be sufficiently accurate for system power management purposes
if pcie port 3 is in ntb nontransparent bridge mode and both the root port and endpoint hardware autonomous speed disable fields lnkcon2 bus 0 device 3 function 0 offset 0c0h bit 5 are set to 0 link training may fail the recoveryrcvrlock state may intermittently timeout and transition to the detect state
violations of pcie electrical specifications listed in the table below have been observed
debug exceptions due to instruction breakpoints take priority over exceptions resulting from fetching an instruction due to this erratum a machine check exception resulting from the fetch of an instruction may take priority over an instruction breakpoint if the instruction crosses a 32byte boundary and the second part of the instruction is in a 32byte poisoned instruction fetch block
an intel qpi quickpath interconnect link reports its link training progress in the intel qpi link status register due to this erratum the link initialization status qpils bus 1 device 89 function 0 offset 48h bits 2724 incorrectly reports a reserved encoding of 1101b while in the initial credit return initializing credits state the correct encoding for the initial credit return initializing credits state is 0101b
enhanced intel speedstep technology dynamically changes core operating frequencies due to this erratum under complex conditions core frequency changes may result in a system hang
the prochot signal is used to indicate elevated processor temperatures during normal operation and is used for frb fault resilient boot actions during the reset sequence due to this erratum the elevated temperature indication usage of prochot can persist into reset and subsequently can cause improper frb actions
the intel qpi link must transition to its l1 power state for the processor to enter package c3state or package c6state due to this erratum the intel qpi link does not transition to l1 as intended restricting the processor from reaching package c3state or package c6state
the processors peci facility can report the current temperature of each of the dimms on a specified channel peci rdpkgconfig command index 14h dimm_temperature_read valid channel numbers range from 0 to 3 channel numbers outside of the valid range should be detected and flagged due to this erratum meaningless values are returned without an error flag when 4 is specified as the channel number
the dram pbm power budget meter manages dram power consumption due to this erratum under complex platform conditions the dram pbm may throttle the memory subsystem to such a great extent that a system hang results
when intel quick data technology dma rol raid on load transactions and non rol transactions are simultaneously active and the nonrol address offsets are not cacheline boundary aligned the nonrol transactions last partial cacheline data write may be lost leading to a system hang in addition when intel quickdata dma rol transactions are active marker skipping operations may lead to a system hang
the lane error status field in bits150 of lnerrsts device 1 function 01 offset 258h and device 23 function 0123 offset 258h is used to monitor errors on the pcie lanes due to this erratum the lnerrsts bits associated with the lanes operating at 8 gts port are spuriously set
during pcie link training the receiver looks at symbols in the ts1 and ts2 ordered sets as indicators of lane polarity inversion if polarity inversion is detected the receiver must invert those lanes due to this erratum the receiver may incorrectly set polarity inversion
the pcie_iltr_ovrd csr device 10 function 1 offset 78h and sw_ltr_ovrd msr 0a02h include fields defined to allow specification of a required maximum snoop latency threshold that maximum latency is intended to be used by the processor to adjust various operational parameters so that the latency requirement can be met due to this erratum the minimum latency value that can be specified via the snoop latency multiplier field bits2826 and the snoop latency value field bits2516 is 64 microseconds
if a rank is detected as failed after completing ddr training then bios will mark it as disabled disabled ranks are omitted from the os memory map due to this erratum a rank disabled after ddr training completes is not skipped by the patrol scrubber patrol scrubbing of the disabled ranks may result in superfluous correctable and uncorrectable memory error reports
patrol scrubbing is a ras facility that scans all physical memory including any spare ranks to find errors and attempts to fix single bit errors patrol scrubbing is suspended when the processor enters a deep package cstate then resumed when that package c state is exited due to this erratum under complex conditions resuming patrol scrubbing from a package cstate after a rank sparing event may cause the patrol scrubber to hang
due to this erratum patrol scrubbing signals an uncorrectable machine check event when it encounters an uncorrectable error while scrubbing a spare rank the error logged in ia32_mc811_status msr 421h 425h 429h 42dh will have the pcc field bit 57 set to 1 and the addrv field bit 58 set to 0 that is there is no address information associated with the error report
with memory mirroring enabled patrol scrub detection of an uncorrectable error on one channel of the mirror should be downgraded to a correctable error when valid data is present on the other channel of the mirror due to this erratum patrol scrub detection of an uncorrectable error always signals an uncorrectable machine check
directory mode is a performance feature used on four socket and scalable platforms to reduce average snoop latency mirror scrubbing attempts to erase uncorrectable errors found in one mirror channel by overwriting them with the correct data from the other channel due to this erratum enabling memory mirroring and directory mode with demand scrubbing andor mirror scrubbing can result in unpredictable system behavior patrol scrubbing with memory mirroring enabled and directory mode enabled is not affected by this erratum
the processor monitors power consumption and uses that information to limit core operating frequency due to this erratum power consumption may be improperly calculated by the processor during package cstates as a result the processor may incorrectly signal a power limit interrupt
due to this erratum under complex conditions an intel vtd translation request that results in a dma remapping fault more commonly called translation fault may be lost
the peci rdpkgconfig command with an index value of 03h is the accumulated energy status read service during platform boot the accumulated energy status read service returns an accumulated energy value of 0 later in the boot flow due to this erratum the accumulated energy status read service returns a value that is large energy values calculated with the first nonzero sample have been observed to be as high as 10kj over a limited number of parts
a peci completion code of 91h indicates the pcu power control unit detected an uncorrectable error that prevented processing of the peci request due to this erratum certain pcu or vrm error conditions may lead to a persistent 91h completion code for subsequent peci request uncorrectable pcu errors are reported with an ia32_mc4_statusmcacod msr 411h bits150 value of 0000_0100_0000_0010 ia32_mc4_statusvalid bit 63 set to 1 and ia32_mc4_statusuc bit 61 set to 1
a machine check signaled during vm exit should cause a vmx abort only if the machine check would prevent successful completion of the vm exit ordinarily the machine check should be delivered after the vm exit completes due to this erratum certain machine checks for example an uncorrectable cache error detected by another logical processor may force a vm exit to result in a vmx abort even when that machine check does not interfere with the vm exit completing correctly
when bit 9 in the iiomiscctrl csr bus 0 device 5 function 0 offset 1c0h is set vcp inbound traffic intel hd audio is routed through vc1 to optimize isochronous traffic performance due to this erratum vc1 may not have sufficient bandwidth for all traffic routed through it overflows may occur
suspending an intel quickdata technology dma channel while in the armed state should transition the channel to the halt state due to this erratum suspending a dma channel while in the armed state does not change the state to halt and will cause the dma engine when subsequently activated to ignore the first descriptors fence control bit and may cause the dma engine to prematurely discard the first descriptor during the copy stage
the processor includes a package_energy_counter register to provide realtime energy consumption information this facility can be accessed by the peci rdpkgconfig command with an index value of 03h the accumulated energy status read service by reading the pkg_energy_status msr 611h or by reading package_energy_status csr bus 1 device 10 function 0 offset 90h due to this erratum the power consumption reported during the execution of intel advanced vector extensions intel avx instructions is inaccurate
suspending an active dma xor channel by setting chancmdsuspend dma bit offset 84 bit 2 while xor type dma channels are active may cause incorrect data transfer on the other active legacy channels this erratum may also occur while resetting an active dma xor channel chancmdreset dma bit offset 84 bit 5 chancmd is in the region described by cb_bar bus 0 device 4 function 07 offset 10h
intel qpi protocol includes a mechanism allowing a link in l0 state to dynamically adjust its electrical characteristics for optimal data transmission quality due to this erratum intel qpi links may remain in l0p or l1 state long enough to prevent dynamic adjustment making the link unreliable
intel qpi links can transition to a lower power state l0s to reduce power consumption during transmitter idle periods due to this erratum when an intel qpi link exits l0s state the resulting retraining may not be successful
the integrated ios coherent interface write cache includes ecc logic to detect errors due to this erratum the write cache can report false ecc errors this error is signaled by asserting bit 1 write cache corrected ecc in the irpp0errst csr bus 0 device 5 function 2 offset 230h or the irpp1errst csr bus 0 device 5 function 2 offset 2b0h
intel quickdata technology utilizes the lower 48 address bits of a 64bit address field detection of accesses to source address destination address descriptor address chain address or completion address outside of this 48bit range are flagged as 64bit addressing errors and should halt dma processing due to this erratum the intel quickdata dma continues to issue requests after detecting certain 64bit addressing errors involving raid operations the failing condition occurs for 64bit addressing errors in either a channel completion upper address register chancmp_0 chancmp_1 bus 0 mmio bar cb_bar 07 offset 98h 9ch or in the source or destination addresses of a raid descriptor
memory mirroring is a ras feature which may allow the memory subsystem to survive an uncorrectable memory error due to this erratum under a complex set of conditions when mirroring and poisoning are both enabled and poison is encountered on one mirror channel an invalid uncorrectable machine check may occur along with the expected corrected error they will be reported as an uncorrectable cache hierarchy error ia32_mci_status with mcacod  0000_0001_0011_0100 and mscod  0000_0000_0001_0000 along with a corrected memory controller error ia32_mci_status with mcacod  0000_0000_1010_cccc and mscod2  1 in combination with ia32_mci_misc32  1
pcie ro relaxed ordering is not supported on this processor due to this erratum enabling ro or equivalently not disabling ro throughout the integrated io logic may lead to unpredictable system behavior or a system hang
intel vtd intel virtualization technology for directed io utilizes itags to identify ats address translation services invalidation requests for invalidating devicetlbs on endpoint devices when an ats invalidation response timeout is detected the corresponding itag is freed and an invalidation timeout error is signaled through the vtd fault status register due to this erratum an ats invalidation response timeout is detected and reported only for the first outstanding itag entry
the ia32_mci_ctl msr comprises enable bits for various machine check events when a particular machine check event occurs but the associated bit in ia32_mci_ctl msr is not set the error is not signaled but is logged with the en flag bit 60 in ia32_mci_status msr set to zero further the logged error report is not protected from being overwritten by succeeding machine check events whether those events have the associated ia32_mci_ctl bit set or cleared due to this erratum it is possible that a ucr uncorrectable recoverable error with the associated bit in ia32_mci_ctl msr set will only set the over flag ia32_mci_status msr bit 62 rather than correctly overwriting the entire previously logged error when that previously logged error does not have ia32_mci_statusen set
the processor should permit hardware coordination of enhanced intel speedstep technology requests to be disabled then use the most recent pstate request from any core or logical processor to set the processorwide pstate target due to this erratum the enhanced intel speedstep technology hardware coordination disable value in bit 0 of the misc_pwr_mgmt msr 1aah is ignored hardware coordination is always enabled
the processor does not allow pcie devices to dynamically change link width but due to this erratum the pcie link upconfigure capability bit is incorrectly advertised as supported
the ia32_mci_mischadbbank field should be ignored
the pcie interface incorporates a recovery mechanism for link degradation by retraining the link without affecting pending transactions when a x4 port detects a lane failure on logical lane 0 the link degrades from x4 to x2 and lane reversal occurs due to this erratum after degrading to x2 and reversing the lanes the link will incorrectly advertise lane numbers as pad 0 1 0 instead of the correct pad pad 1 0
a pcie tlp transaction layer packet header can specify the request alignment via byte enables include tph transaction processing hints and request address translation via the at field due to this erratum a tlp with nonzero byte enables ie not dwordaligned that includes a nonzero tph and with an at field of 01 may be dropped
a machine check exception that is delivered between the execution of an io instruction in ins out or outs and an smi systemmanagement interrupt triggered by that instruction may prevent proper handling of the smi because of this the machine check exception should not be reported as restartable due to this erratum such a machine check exception may be reported as restartable
due to this erratum the processor does not record the temperature of the system agent in the temperature field in bits 70 of the sa_temperature csr device 10 function 2 offset 044h
an intel txt intel trusted executed technology enabled system that detects an acm authenticated code module error should perform a warm reset then startup in non trusted mode due to this erratum an acm error may cause the system to power down
a pcie x16 port operating at 8 gts transmitting 256 byte completion tlps may not replay tlps correctly
under complex conditions a master abort error suffered by an intel quickdata technology dma channel running nonraid operations may be reported for both the failing transfer and a transfer on a different channel actively performing raid operations note that master abort errors on intel quickdata technology dma transfers are unusual generally indicating dma transfer configuration errors
in cases when a wbinvd instruction evicts a line containing an address or data parity error mcacod of 0x124 and mscod of 0x10 the address of this error should be logged in the mci_addr register due to this erratum the logged address may be incorrect even though mci_statusaddrv bit 63 is set
pagetable walks on behalf of instruction fetches may be made speculatively to uncacheable uc memory
when the fence bit in the base descriptor control field is set the dma engine assures all data for that operation and previous operations has been written before considering a transfer complete and beginning to process the next chained base descriptor in addition upon completion of a transfer the dma engine can notify software of the completion via either an interrupt a memory write to a programmed location or both due to this erratum the dma engine while processing chained dma descriptors with fencing or interrupt completion enabled may hang and not enter the halt state as expected if a write error that results in an abort occurs
under complex internal conditions a floatingpoint store used to modify the next sequential instruction may result in the old instruction being executed instead of the new instruction
a debug exception occurring at the same time that getsecsexit is executed or when an sexit doorbell event is serviced may be lost
the integrated io unit uses the vpp virtual pin port to communicate with devices that interface to the switches and leds associated with pcie hotplug sequencing due to this erratum vpp operation stalls when a warm reset occurs and then experiences delayed reset depending on timing alignment with the warm reset event a vpp transaction in progress around the time of a warm reset may suffer an extended stall or an immediate termination
due to this erratum the local memory read  load retired perfmon events listed below may undercount mem_load_uops_retiredllc_hit mem_load_uops_retiredllc_miss mem_load_uops_llc_hit_retiredxsnp_miss mem_load_uops_llc_hit_retiredxsnp_hit mem_load_uops_llc_hit_retiredxsnp_hitm mem_load_uops_llc_hit_retiredxsnp_none mem_load_uops_llc_miss_retiredlocal_dram mem_load_uops_llc_miss_retiredremote_dram mem_trans_retiredload_latency
ia32_mc5_ctl2 msr 285h is documented to be cleared on any reset due to this erratum this msr is only cleared upon a cold reset
when operating with smt enabled a memory atretirement performance monitoring event from the list below may be dropped or may increment an enabled event on the corresponding counter with the same number on the physical cores other thread rather than the thread experiencing the event processors with smt disabled in bios are not affected by this erratum the list of affected memory atretirement events is as follows mem_uop_retiredloads mem_uop_retiredstores mem_uop_retiredlock mem_uop_retiredsplit mem_uop_retiredstlb_miss mem_load_uops_retiredhit_lfb mem_load_uops_retiredl1_hit mem_load_uops_retiredl2_hit mem_load_uops_retiredllc_hit mem_load_uops_llc_hit_retiredxsnp_hit mem_load_uops_llc_hit_retiredxsnp_hitm mem_load_uops_llc_hit_retiredxsnp_miss mem_load_uops_llc_hit_retiredxsnp_none mem_load_uops_retiredllc_miss mem_load_uops_llc_miss_retiredlocal_dram mem_load_uops_llc_miss_retiredremote_dram mem_load_uops_retiredl2_miss
after a uc uncorrected error is logged in the ia32_mc0_status msr 401h corrected errors will continue to be counted in the lower 14 bits bits 5138 of the corrected error count due to this erratum the sticky count overflow bit bit 52 of the corrected error count will not get updated when the uc bit bit 61 is set to 1
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
when 32bit paging is in use the processor should use a page directory located at the 32bit physical address specified in bits 3112 of cr3 the upper 32 bits of cr3 should be ignored due to this erratum the processor will use a page directory located at the 64bit physical address specified in bits 6312 of cr3
if a memory access to a linear address requires the processor to update an accessed or dirty flag in a pagingstructure entry and if that update causes an ept violation the processor should store the linear address into the guest linear address field in the vmcs due to this erratum the processor may store an incorrect value into bits 110 of this field the processor correctly stores the guestphysical address of the paging structure entry into the guestphysical address field in the vmcs
if a logical processor has ept extended page tables enabled is using 32bit pae paging and accesses the virtualapic page then a complex sequence of internal processor microarchitectural events may cause an incorrect address translation or machine check on either logical processor
if a pcie port receives a malformed tlp transaction layer packet an error is logged in the uncerrsts register device 0 function 0 offset 14ch and device 23 function 03 offset 14ch due to this erratum the header of the malformed tlp is logged incorrectly in the hdrlog register device 0 function 0 offset 164h and device 23 function 03 offset 164h
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
while attempting platform recovery after a machine check as indicated by caterr signaled from the legacy socket the original error condition may prevent normal platform recovery which can lead to a second machine check a remote processor detecting a second machine check event will hang immediately
due to this erratum correctable pcie receiver errors may not be logged in the dpe field bit 15 of the pcists csr bus0 device 123 function 010303 offset 6h when operating at 80 gts
configuring pcie port 3a as an ntb nontransparent bridge requires disabling eoi end of interrupt broadcast forwarding to this port by setting bit 26 of miscctrlsts csr bus 0 device 3 function 0 offset 188h to 0 due to this erratum disabling eoi broadcast forwarding to port 3a improperly disables eoi broadcast forwarding to port 2a
if a pcie link autonomously changes width or speed for reasons other than to attempt to correct unreliable link operation the port should set labs bit link autonomous bandwidth status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit 15 due to this erratum the processor will not set this bit and will incorrectly set lbms bit link bandwidth management status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit14 instead
under certain conditions p2p peertopeer traffic between x4 pcie ports on the same processor ie local may cause a system hang
the pcie base specification requires that in the loopbackactive state a loopback slave retransmits the received bit stream bitforbit on the corresponding tx if the link is directed to enter loopback slave mode at 8 gts via ts1 ordered sets with both the loopback and compliance receive bits set the processor may place sync headers in incorrect locations in the loopback bit stream
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
an intel quickdata dma access to intel vtd protected memory that results in a protected memory check error may cause master abort completions on all other intel quickdata dma channels
when a memory ecc error occurs a spurious patrol scrub error may also be logged on another memory channel
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
with affected bios acms scheck may make an unexpected write to the pci f000 segment and bios acm s3 resume may fail
if a tpm error condition such as a missing or nonfunctional tpm occurs the bios acm should hand off to bios with a tpm error code to indicate that intel txt launch is not possible with this erratum a tpm error may result in a bios acm hang instead of handoff to bios with a tpm error code
tpm policy record fit type 8 entry using mmio may not correctly enabledisable intel txt
intel txt policy record fit type 10 entry using mmio may not correctly enable disable intel txt
if a fit table is present and the fit type 10 record is missing intel txt policy may not default to enabled
txte2sts offset 0x8f0 secretssts bit 1  0 and blockmemsts bit 2  1 indicates that the pch cmos memory has been cleared for example coin battery removal at reset if txte2sts indicates that the mle established secrets secretssts  1 or the coin battery has been removed txtests offset 0x08 wakeerrorsts bit 6 will be set to indicate that a reset occurred when secrets may have been present in memory with affected bios acm releases when the coin battery is removed and the tpm is not populated the bios acm will exit with an error condition wakeerrorsts is not cleared and memory remains locked
bios acm errors may result in unexpected tpm locality change command even if intel txt is disabled using the firmware interface table intel txt policy record or the tpm is not populated
with affected bios acms an error condition that invokes bios acm error handling may cause a multiprocessor synchronization issue to be exposed
an intel txt error condition may cause a platform warm reset to occur and expose a multiprocessor synchronization issue during the warm reset latency
when an intel txt error occurs on a multiprocessor system bios acm changes to the pci configuration space may occur before all processors have completed their pcie transactions
if the tpm fails to respond to locality change commands the bios acm may exit leaving processor configuration status registers in a state that could cause a bios hang or unexpected behavior
affected sinit acms do not support the acpi 20 64bit xsdt table
senter may not identify overlap errors between intel io device virtualization base address registers and intel quickdata base technology address registers
enter performs incorrect checks on tpm locality 1 and 4
sinit authenticated code modules acms may be susceptible to a buffer overflow issue
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
intel qpi may report an inband reset with no width change error 0x22 correctable error upon exit from the l1 power state as logged in its ia32_mc5 20 21_status msrs 415h451h455h
the ntb nontransparent bridge may incorrectly set msi message signaled interrupt pending bits in msipending bar pb01basesb01base offset 74h while operating in msix mode or set msix pending bits in pmsixpba bar pb01base sb01base offset 03000h while operating in msi mode
upon exiting the l1 link power state the processors pcie port may unexpectedly issue a nak dllp data link layer packet
when using the peci rdpkgconfig command to read pcs package config space service 14 ddr dimm digital thermal reading the value returned is incorrect
the csr lnkcon2 bus 0 device 0 function 0 offset 0x1c0 field selectable_de_emphasis bit 6 cannot be set for a link when the dmi port is operating at 5 gtsthe documentation has the attribute of rwo read write once but the processor incorrectly operates as readonly this erratum does not occur when link is operating as a pcie port
due to this erratum pcie receivers may not meet the specification for ac common mode voltage 300 mv and jitter 781 ps at high temperatures when operating at 5 gts
the pcie base specification revision 30 defines zrxhighimpdcneg and zrx highimpdcpos for termination impedance of the receiver the specified impedance for a negative voltage 150 mv to 0v is expected to be greater than 1 kohm sampled measurements of this impedance as low as 400 ohms have been seen the specified impedance for a positive voltage  200 mv is greater than 20 kohms sampled measurements of this impedance as low as 146 kohms have been seen
while attempting platform recovery after a machine check as indicated by caterr signaled from the legacy socket the original error condition may prevent normal platform recovery which can lead to a second machine check a remote processor detecting a second machine check event will hang immediately
when the pch xhci extensible host controller interface is configured to use msi interrupts a pcie device number conflict between the processor and xhci controller may cause the interrupts be routed incorrectly
a memory controller channel with more than 4 ranks and with trr targeted row refresh enabled may fail leading to a system hang this erratum only impacts memory channels with three dualrank ddr4 rdimms
due to this erratum attempting to write r3qpi performance monitor registers bus 0 device 11 functions 1256 offset 0xa00xf7 may be unsuccessful
enabling memory ppd precharge power down may cause unpredictable system behavior
the extended topology enumeration leaf of cpuid eax  0xb may return an incorrect value in ebx150 for the core level type ecx158  2 in this instance the number of logical processors at the core level reported in ebx150 should reflect the configuration as shipped by intel
after a warm reset or an l1 exit the intel qpi intel quickpath interconnect links may not train successfully
due to this erratum the processor does not direct the vccin vr voltage regulator to shed phases during low power states
quadrank lrdimms require calibration of all four of their dram ranks due to this erratum only half of the ranks are calibrated
the processor periodically adjusts drive strength for ddr signals to optimize electrical margins due to this erratum the drive strength on the ddr command bus may be incorrectly adjusted
due to this erratum a peci platform environment control interface command other than getdib ping or gettemp received before reset_n is deasserted may result in a timeout 0x81 completion code for all subsequent such commands
when all enabled cores on a socket are simultaneously in core c3 core c6 or package c6 state and a pcie tph transaction layer packet processing hint with the prefetch hint set is received the system may hang
the pcie 31 base specification requires that ts1s sent during recoveryrcvrlock following 80 gts eq adaptive equalization contain the final transmitter preset number and coefficient values that were requested by an endpoint during phase 2 of eq due to this erratum ts1s with incorrect transmitter preset number values may be sent during recoveryrcvrlock following 80 gts adaptive equalization
due to this erratum reading the msr_temperature_target msr 1a2h may incorrectly return 0
reading core machine check bank registers using the peci platform environment control interface rdiamsr command may fail after core c6 state has been entered
due to this erratum the processor may not enter pc3 package c3 or pc6 package c6 state when intel server platform services firmware is in use
if intel qpi l1 state is disabled exiting pc3 package c3 or pc6 package c6 state may signal a machine check with ia32_mc4_status_mscod bits 3116  0x70xx
if cltt closed loop thermal throttling is enabled when a warm reset is requested due to this erratum the processor will resume dimm temperature polling before the memory subsystem has been reinitialized
due to this erratum a memory subsystem with 2133 mhz lrdimms may experience uncorrectable memory errors
the extended tag field in the tlp header will not be zero for tlps issued by pcie ports 1a 1b 2c 2d 3c and 3d even when the extended tag field enable bit in the device control register offset 08h bit 8 is 0
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
due to this erratum detection of a ca commandaddress parity error by the memory controller can lead to a system hang
due to this erratum when ddr4 is operating at 2133 mhz and a ca command address parity error occurs while exiting a package cstate then unpredictable system behavior may occur
enabling isochronous transfers may lead to spurious correctable memory errors uncorrectable memory errors patrol scrub errors and unpredictable system behavior
due to this erratum ntb nontransparent bridge completions may be dropped when secondary to primary snoop overrides are enabled
on single home agent configurations due to this erratum the processor interferes with tsod thermal sensor on dimm usage by incorrectly clearing the tsod_present field bits70 of the smbcntl_1 csr bus 0 device 19 function 0 offset 0x198 after bios writes that field
due to this erratum if the error information in the dram is accessed because of a ca commandaddress parity error ddr4 dimm protocol rules may be violated leading to unpredictable system behavior
when ddr4 is operating at 2133 mhz the processors memory control may violate the jedec tprpden timing specification
with memory lockstep enabled the system may experience correctable memory errors during boot with ia32_mci_statusmcacod 0x009x where x is 012 or 3 and indicates the channel number reporting the error
remote p2p peer to peer mctp management component transport protocol messages may cause timeouts with ia32_mci_statusmscod0x000c
resources in the iio integrated io unit are reserved for isochronous transfers to ensure performance guarantees are met due to this erratum enabling nonposted prefetching in the iio when resources are reserved for isochronous traffic may result in a hang
the bt backup tracker timeout logic in the home agent can trigger spuriously causing false machine checks indicated by ia32_mci_statusmscod0x0200
if two pcie endpoints target traffic to pb23base bus 0 device 3 function 0 offset 0x18 0x1c and pb45base bus 0 device 3 function 0 offset 0x20 0x24 registers at the same time a deadlock can result
the pcie base specification indicates that configuration space headers have a base address register at offset 0x10 due to this erratum the power control units config_tdp_nominal csr bus 1 device 30 function 3 offset 0x10 is located where a base address register is expected
under a complex set of internal timing conditions and system events software using the intel tsx transactional synchronization extensions instructions may result in unpredictable system behavior
debug exceptions due to instruction breakpoints take priority over exceptions resulting from fetching an instruction due to this erratum a machinecheck exception resulting from the fetch of an instruction may take priority over an instruction breakpoint if the instruction crosses a 32byte boundary and the second part of the instruction is in a 32byte poisoned instruction fetch block
due to this erratum spurious corrected errors may be logged in the ia32_mc0_status register with the valid field bit 63 set the uncorrected error field bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
if a pcie link autonomously changes width or speed for reasons other than to attempt to correct unreliable link operation the port should set labs bit link autonomous bandwidth status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit 15 due to this erratum the processor will not set this bit and will incorrectly set lbms bit link bandwidth management status bus 0 device 0 function 0 and device 1 function 01 and device 23 function 03 offset 0x1a2 bit14 instead
due to this erratum the processor power usage may be higher than specified for the vccin andor iio domains while in package c6 state
due to this erratum when c1e is enabled and after the processor has entered package c1e state core clock frequency becomes limited to its minimum value sometimes referred to as pn until the system exits package c3 state or deeper or the system is reset
due to this erratum the processor may violate ddr4 page close protocol at power down entry
sending messages concurrently via the peci platform environment control interface channel and the ibpeci inband peci channel during package cstate transitions may result in a system hang
while attempting platform recovery after a machine check as indicated by caterr signaled from the legacy socket the original error condition may prevent normal platform recovery which can lead to a second machine check a remote processor detecting a second machine check event will hang immediately
due to this erratum the maximum turbo frequency may be incorrectly set to the maximum nonturbo frequency after bios initialization completes
the pcie base specification requires a write to the slot control register offset a8h to generate a hot plug command when the downstream port is hot plug capable due to this erratum a hot plug command is generated only when one or more of the slot control register bits 116 are changed
under certain conditions p2p peertopeer traffic with x4 pcie ports on the same processor ie local may cause a system hang
when the ntb nontransparent bridge is operating in ntbrp ntb root port mode it is possible for transactions to be completed with the incorrect reqid requester id this erratum occurs when an outbound transaction is aborted before a completion for inbound transaction is returned
the avx singlecore turbo ratio limit may not be applied correctly unnecessarily limiting the core frequency
when two llc last level cache errors happen in close proximity a ucna uncorrectable no action required machine check may be dropped or a spurious machine check or cmci corrected machine check interrupt may be issued further when this erratum occurs the merged cbo llc machine check bank ia32_mc17 19_status msrs may be incorrect
if the virtualinterrupt delivery vmexecution control is enabled unexpected system behavior may occur following virtualization of the mov to cr8 instruction memory mapped accesses to the eoi end of interrupt tpr task priority register or the interrupt command register to send an interprocessor interrupt to itself this erratum does not apply to the corresponding wrmsr access
if a memory ca commandaddress parity error occurs while the memory subsystem is configured in lockstep mode then the channel that observed the error will properly log the error but the associated channel in lockstep will incorrectly log an uncorrectable error in its ia32_mci_status msr
the pci capptr capability pointer register is defined to contain the offset to the capabilities list structure when the pci pcists pci status register bit 4 capabilities_list is set to 1 due to this erratum capptr offset 0x34 should hold a value of 0x40 but is instead zero for these imc integrated memory controller and intel qpi intel quickpath interconnect device device 8 functions 356 device 9 functions 356 device 10 functions 356 device 19 functions 05 device 20 functions 03 device 21 functions 03 device 22 functions 03 device 23 functions 03
a pcie memory write tlp transaction layer packet with an at field value of 01b address translation request does not set the ur unsupported request bit uncerrsts csr bus 0 device 0 function 0 offset 0x14c bit 20 as required by the pcie base specification
due to this erratum when per core pstates are enabled the tsc time stamp counter may not be synchronized across the processors cores
a dual ha home agent processor may hang during an attempted warm reset when there is no memory installed on memory channels 0 and 1 and cltt closed loop thermal throttling is enabled
the pcie base specification requires that in the loopbackactive state a loopback slave retransmits the received bit stream bitforbit on the corresponding tx if the link is directed to enter loopback slave mode at 8 gts via ts1 ordered sets with both the loopback and compliance receive bits set the processor may place sync headers in incorrect locations in the loopback bit stream
consecutive peci platform environment control interface rdiamsr commands to access core machine check msrs can result in a system hang when core c6 state is enabled
when data poisoning is enabled poisoned data consumption may not log and signal an uncorrected machine check error
due to this erratum trr targeted row refresh is not compatible with ddr4 lrdimms
the integrated io unit uses the vpp virtual pin port to communicate with power controllers switches and leds associated with pcie hotplug sequencing due to this erratum a warm reset occurring when a vpp transaction is in progress may result in an extended vpp stall termination of the inflight vpp transaction or a transient power down of slots subject to vpp power control
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
when ca command address parity error injections are occurring too frequently the home agent may be prevented from completing memory transactions this may result in an internal timer error indicated by ia32_mci_status mscod0x0080 and ia32_mci_status mcacod0x0400
due to this erratum fan speed control does not correctly account for the thermal profile at elevated operating temperatures
the processors pcie links can be disabled by setting the link disable bit in the link control register lnkconlink_disable bus 0 device 0123 function 0010303 offset 0xa0 bit 4 to 1 due to this erratum configuring one or more pcie ports to be disabled prevents the processor from entering package c6 state
certain complex internal timing conditions present when a warm reset is requested can prevent the orderly completion of inflight transactions it is possible under these conditions that the warm reset will fail and trigger a full system shutdown
while transactions are originating from both sides of the ntb accessing sb01base mmio space may cause the system to hang for example the ntb convention of using sb01base mmio doorbell or scratchpad registers to convey interrupt messages across the ntb may result in a system hang this erratum does not apply if transactions originate from only one side of the ntb
the patrol scrubber when mirroring is enabled may incorrectly identify certain data patterns as poison data or as memory errors
setting the turbo_activation_ratio_lock field bit 31 of the msr_turbo_activation_ratio msr 64ch has no effect it does not block future writes to the msr_turbo_activation_ratio msr
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
the processor may not drive the ddr4 clock signal during warm reset or during s3 state rather than driving the signal low as required by the jedec ddr4 specification
the processor may violate the jedec power down timing tcpded parameter specification associated with ddr4 selfrefresh entry
an intel quickdata technology dma access to intel vtd protected memory that results in a protected memory check error may cause master abort completions on all other intel quickdata technology dma channels
due to this erratum partial writes to some registers write the full register the affected registers are saddbgmm2_cfg device 12 function 07 offset 0xa8 and device 13 function 06 offset 0xa8 and llcerrinj_cfg device 12 function 07 offset 0xfc and device 13 function 06
intel quickdata technology that is crystal beach dma v32 does not correctly halt and report aborts on illegal source addresses placed in a cbdma descriptor regardless of type legacy or pq this abort condition may cause unpredictable system behavior
the integrated io unit uses the vpp virtual pin port to communicate with power controllers switches and leds associated with pcie hotplug sequencing due to this erratum a warm reset occurring when a vpp transaction is in progress may result in an extended vpp stall termination of the inflight vpp transaction or a transient power down of slots subject to vpp power control
assertion of prochot after reset deassertion but before bios has completed reset initialization indicated by cpl3 may result in persistent processor throttling asserting prochot during and after reset assertion for frb fault resilient boot tristating of the processor is not affected by this erratum
execution of a 64bit operand movbe instruction with an operandsize override instruction prefix 66h may incorrectly cause an invalidopcode exception ud
the processor may hang when peci rdiamsr accesses occur soon after processor poweron or warm reset
under complex conditions ddr4 rank aliasing during extended periods of heavy memory traffic may lead to a system hang with ia32_mc1719_statusmscod  0x000c
systems engineered to published thermal specifications and requirements may throttle early due to insufficient thermal margin on the processor
after a warm reset or an l1 exit the intel qpi links may not train successfully
if a pcie port receives a malformed tlp transaction layer packet an error is logged in the uncerrsts register device 0 function 0 offset 14ch and device 23 function 03 offset 14ch due to this erratum the header of the malformed tlp is logged incorrectly in the hdrlog register device 0 function 0 offset 164h and device 23 function 03 offset 164h
due to this erratum an attempt to transition the memory subsystem to adr asynchronous dram self refresh mode may fail
after a warm reset request is made generally by bios or in response to a processor error the processor is not able to accept peci commands until the subsequent reset signal assertion ends a peci command during this interval will log an undefined model specific error code of 0x26 in bits3124 of the ia32_mci_status msr 411h
due this erratum spurious corrected errors may be logged in the ia32_mc0_status register with the valid field bit 63 set the uncorrected error field bit 61 not set a model specific error code bits 3116 of 0x000f and an mca error code bits 150 of 0x0005 if cmci is enabled these spurious corrected errors also signal interrupts
smbus activity during warm reset may lead to a system hang
the max thread id value returned via peci pcs package config space command package identifier service index 00 parameter value 0x0003 may be incorrect on e52643v3 and e52637v3 skus
intel txt trusted execution technology uses tpm trusted platform module 20 draft specification handles indices aux 01800003 ps 01800001 and po 01400003 those handles conflict with the released tcg trusted computing group registry of reserved tpm 20 handles and localities version 10 revision 1
due to this erratum the surprise_down_error_status uncerrsts device 0 function 0 offset 0x14c bit 5 is not set to 1 when dmi port detects a surprise down error
when a performance monitoring counter is configured to count off_core_response_12 events b7h and b8h data obtained for remote dram may be attributed to l3_miss_remote_hop0 as programmed by msr_offcore_rsp_12 msrs 1a6h 1a7h bit 27 instead of l3_miss_remote_hop1 bit 28 or l3_miss_remote_hop2p bit 29 data provided from remote caching agent associated with remote dram is unaffected
when a single vr voltage regulator is used by more than one populated memory channel power readings of these memory channels may not be accurate
for a small subset of parts under elevated die temperature conditions a pstate or c state transition may result in a system timeout or system shutdown
an iret instruction that results in a task switch by returning from a nested task does not serialize the processor contrary to the software developers manual vol 3 section titled serializing instructions
a microcode update loaded by the operating system or virtual machine monitor may change the power management configuration previously established by the bios
when a memory ecc error occurs a spurious patrol scrub error may also be logged on another memory channel
the performance monitoring events offcore_response events b7h and bbh should count uncore responses matching the requestresponse configuration specified in msr_offcore_rsps 1a6h and 1a7h respectively for coreoriginated requests however due to this erratum corewb bit 3 pf_l3_data_rd bit 7 pf_l3_rfo bit 8 pr_l3_code_rd bit 9 split_lock_uc_lock bit 10 and streaming_stores bit 11 request types may undercount
when adr asynchronous dimm selfrefresh is enabled during an s3 resume the processor may cause the udimm to prematurely exit self refresh
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
due to this erratum the supplier may be misattributed to unknown and the following events may undercount mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h
the execution of an x87 store instruction which causes a pe precision exception to be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod  0150h and ia32_mci_statusmscod  000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
under complex microarchitectural conditions backtoback interrupt requests when interrupt remapping is enabled may lead to a system hang
due to this erratum on processors that do not support intel tsx intel transactional synchronization extensions cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
boundary scan testing of the intel qpi and pcie interfaces may incorrectly report a recurring stuck at 1 failure on intel qpi and pcie receiver lanes this erratum only affects boundary scan testing and does not affect functional operation of the intel qpi and pcie interfaces
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
when isoch isochronous operation is enabled within bios the system may hang and fail to boot
during system initialization the operating system may access the standard pci bars base address registers due to this erratum accesses to the home agent bar registers bus 1 device 18 function 04 offsets 0x140x24 will return nonzero values
if a pcie port receives a malformed tlp transaction layer packet an error is logged in the uncerrsts register device 0 function 0 offset 14ch and device 23 function 03 offset 14ch due to this erratum the header of the malformed tlp is logged incorrectly in the hdrlog register device 0 function 0 offset 164h and device 23 function 03 offset 164h
if a pcie port receives a malformed tlp that also would generate an ecrc check failed error it should report a malformed tlp error when malformed tlp errors are masked the processor should report the lowerprecedence ecrc check failed error but due to this erratum it does not
during an intel qpi slow mode to fast mode transition the ll_status field of the qpipcsts register bus 0 device 8910 function 0 offset 0xc0 may not be correctly updated to reflect link readiness
when intel turbo boost technology is disabled by ia32_misc_enables msr 416h turbo_mode_disable bit 38 the ring operating frequency may be below p1 operating frequency
due to this erratum an attempt to transition the memory subsystem to adr asynchronous dram self refresh mode may fail
due to this erratum with ddr42133 memory exiting from pc3 package c3 or pc6 package c6 state may lead to unpredictable system behavior
certain complex internal timing conditions present when a warm reset is requested can prevent the orderly completion of inflight transactions it is possible under these conditions that the warm reset will fail and trigger a full system shutdown
due to this erratum cat cache allocation technology way enforcement may not behave as configured
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
this erratum may cause a machinecheck error ia32_mci_statusmcacod0150h on the fetch of an instruction that crosses a 4kbyte address boundary it applies only if 1 the 4kbyte linear region on which the instruction begins is originally translated using a 4kbyte page with the wb memory type 2 the paging structures are later modified so that linear region is translated using a large page 2mbyte 4mbyte or 1 gbyte with the uc memory type and 3 the instruction fetch occurs after the paging structure modification but before software invalidates any tlb entries for the linear region
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
the performance monitor events other_assistsavx_to_sse event c1h umask 08h and other_assistssse_to_avx event c1h umask 10h incorrectly increment and over count when an hle hardware lock elision abort occurs
the performance monitor event dsb2mite_switchescount event abh umask 01h should count the number of dsb decode stream buffer to mite macro instruction translation engine switches due to this erratum the dsb2mite_switchescount event will count speculative switches and cause the count to be higher than expected
a timed mwait instruction specifies a tsc deadline for execution resumption if a wake event causes execution to resume before the deadline is reached a subsequent timed mwait instruction may incorrectly use the deadline of the previous timed mwait when that previous deadline is earlier than the new one
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
the performance monitoring events mem_trans_retiredload_latency event cdh umask 01h mem_load_retiredl2_hit event d1h umask 02h and mem_uops_retiredlocked event doh umask 20h should count the number of locked loads due to this erratum these events may under count for locked transactions that hit the l2 cache
if an intel transactional synchronization extensions intel tsx transactional abort event occurs during a string instruction the fromip in the lbr last branch record is not correctly reported
due to this erratum pmi performance monitoring interrupt may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
setting the stop bit bit 4 in a table of physical addresses entry directs the processor to stop intel pt processor trace packet generation when the associated output region is filled the processor indicates this has occurred by setting the stopped bit bit 5 of ia32_rtit_status msr 571h due to this erratum packet generation may stop earlier than expected
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
an hle hardware lock elision transactional region begins with an instruction with the xacquire prefix due to this erratum reads from within the transactional region of the memory destination of that instruction may return the value that was in memory before the transactional region began
due to this erratum the performance monitoring feature pdir precise distribution of instructions retired for instr_retiredall event c0h umask 01h will generate redundant pebs precise event based sample records for a counter overflow this can occur if the lower 6 bits of the performance monitoring counter are not initialized or reset to 0 in the pebs counter reset field of the ds buffer management area
if a peci transaction is interrupted by a warm reset it may result in a machine check exception with mcacod of 0x402
the intel pt modeexec mode packet  execution mode leaf pip paging information packet and cbr core bus ratio packets are generated at the following psb packet stream boundary event rather than at the time of the originating event as expected
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
the ia32_pmcx msr c1h  c8h generalpurpose performance counters may report inaccurate counts when the associated event selection ia32_perfevtselx msrs 186h  18dh anythread field bit 21 is set and either
use of intel transactional synchronization extensions may result in a transactional abort if an abort occurs immediately following a branch instruction an invalid lbr last branch record may be recorded before the lbr produced by the abort
when intel processor trace is enabled psb packet stream boundary packets may include a pip paging information packet even though the os field bit 2 of ia32_rtit_ctl msr 570h is 0
as per the intel virtualization technology for directed io intel vtd specification bits 63haw host address width of the posted interrupt descriptor upper address field in the irte interrupt remapping table entry must be checked for a value of 0 violations must be reported as an interruptremapping fault due to this erratum hardware does not perform this check and does not signal an interruptremapping fault on violations
the tph transaction layer packet processing hints requester capability structure pci express extended capability id type 0017h incorrectly reports that device specific mode is supported in its tph requester capability register bit 2 at offset 04h in the capability structure
due to this erratum the processor may reset and signal a machine check error with a ia32_mci_statusmcacod value of 0400h when in package c3 state or deeper
when the msr_pkg_cst_config_controlacc_enable bit msr e2h bit 16 is set the vmxpreemption timer is not decremented in the hlt state
intel avx workloads require a reduced maximum turbo ratio due to this erratum the intel avx turbo ratio is higher than expected which may cause the processor to exceed iccmax limits and lead to unpredictable system behavior
a wrmsr that attempts to set mode1_memerror_report field bit 1 andor mem_correrr_logging_disable field bit 5 of the msr_error_control msr 17fh may incorrectly cause a gp general protection exception
acc autonomous cstate control is enabled by setting acc_enable bit 16 of msr_pkg_cst_config_control e2h to 1 if acc is enabled while the processor is in vmx nonroot operation an unexpected vm exit a machine check or unpredictable system behavior may result
when a memory ecc error occurs a spurious patrol scrub error may also be logged on another memory channel
performance monitoring event br_inst_retired c4h counts retired branch instructions due to this erratum when operating on logical processor 1 of any core br_inst_retiredfar_branch event c4h umask 40h and br_inst_retired all_branches event c4h umask 04h may count incorrectly logical processor 0 of all cores and cores with smt disabled are not affected by this erratum
under certain circumstances reading a machine check register using the peci platform environmental control interface rdiamsr command may result in a machine check processor hang or shutdown
an ept extended page table violation that causes a ve virtualization exception may not invalidate the guestphysical mappings that were used to translate the guest physical address that caused the ept violation
when a package cstate transition occurs at the same time an inband peci transaction occurs prochot may be incorrectly asserted
if lbr last branch records bts branch trace store or btm branch trace messages are enabled in the ia32_debugctl msr 1d9h an attempt to enable intel pt intel processor trace in ia32_rtit_ctl msr 570h results in a gp general protection exception note that the btm enable bit in ia32_debugctl msr is named tr correspondingly if intel pt was previously enabled when an attempt is made to enable lbr bts or btm a gp will occur
if a memory ca commandaddress parity error occurs while the memory subsystem is configured in lockstep mode then the channel that observed the error will properly log the error but the associated channel in lockstep will incorrectly log an uncorrectable error in its ia32_mci_status msr
due to this erratum processors with more than ten cores may be limited to less than the specified maximum turbo frequency
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
under a complex set of internal timing conditions and system events software using the intel tsx transactional synchronization extensions instructions may behave unpredictably
some e51607v4 and e51603v4 parts will incorrectly report that they support ddr4 2400 using ddr42400 dimms may result in unpredictable system behavior
assertion of prochot after reset deassertion but before bios has completed reset initialization indicated by cpl3 may result in persistent processor throttling asserting prochot during and after reset assertion for frb fault resilient boot tristating of the processor is not affected by this erratum
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
due to this erratum an uncorrectable internal parity error with an ia32_mc0_statusmcacod bits 150 value of 0005h may incorrectly set the ia32_mc0_statusover flag bit 62 indicating an overflow when a single error has been observed
the pml page modification log index field is saved to an incorrect vmcs on an smm vm exit vm entries that return from smm restore the pmlindex field from that same incorrect vmcs
microcode updates with signature less than 0b000017 loaded by the operating system may result in excessive and persistent throttling that significantly reduces system performance
under a complex series of microarchitectural events while running intel hyper threading technology a correctable internal parity error or unpredictable system behavior may occur
microcode updates loaded by the operating system may result in excessive and persistent throttling that significantly reduces system performance
writing the iio_llc_ways msr c8bh always sets bits 10 regardless of the value written
due to this erratum enabling hwp hardwarecontrolled performance states by setting bit 0 of ia32_pm_enable msr 770h may lead to an unexpected delay in reaching turbo frequencies after a core exits c6 sleep state this erratum does not occur when hwp is not enabled
due to this erratum the ia32_mc4_status val msr 411h bit 63 may be incorrectly cleared by a warm reset
under complex microarchitectural conditions backtoback interrupt requests when interrupt remapping is enabled may lead to a system hang
on single ha home agent systems the mem_hot_c23_n signal can be configured as an output signal that is asserted when a dimm temperature exceeds the throttle threshold cf dimm_temp_th csrs at bus 1 device 20 function 01 offset 120h 124h due to this erratum mem_hot_c23_n is not asserted when it should be
certain bidirectional pcie posted traffic patterns between cpu nodes may lead to a loss of flow control credits resulting in a link hang
following s3 resume or warm reset uncorrected and corrected memory errors may occur
due to this erratum on processors that do not support intel tsx intel transactional synchronization extensions cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
intel qpi may report an inband reset with no width change error 0x22 correctable error upon exit from the l1 power state as logged in its ia32_mc5 20 21_status msrs 415h451h455h
when using the peci rdpkgconfig command to read pcs package config space service 14 ddr dimm digital thermal reading the value returned is incorrect
the csr lnkcon2 bus 0 device 0 function 0 offset 0x1c0 field selectable_de_emphasis bit 6 cannot be set for a link when the dmi port is operating at 5 gtsthe documentation has the attribute of rwo read write once but the processor incorrectly operates as readonly this erratum does not occur when link is operating as a pcie port
due to this erratum pcie receivers may not meet the specification for ac common mode voltage 300 mv and jitter 781 ps at high temperatures when operating at 5 gts
the pcie base specification revision 30 defines zrxhighimpdcneg and zrx highimpdcpos for termination impedance of the receiver the specified impedance for a negative voltage 150 mv to 0v is expected to be greater than 1 kohm sampled measurements of this impedance as low as 400 ohms have been seen the specified impedance for a positive voltage  200 mv is greater than 20 kohms sampled measurements of this impedance as low as 146 kohms have been seen
a memory controller channel with more than 4 ranks and with trr targeted row refresh enabled may fail leading to a system hang this erratum only impacts memory channels with three dualrank ddr4 rdimms
due to this erratum attempting to write r3qpi performance monitor registers bus 0 device 11 functions 1256 offset 0xa00xf7 may be unsuccessful
after a warm reset or an l1 exit the intel qpi intel quickpath interconnect links may not train successfully
due to this erratum the processor does not direct the vccin vr voltage regulator to shed phases during low power states
due to this erratum a peci platform environment control interface command other than getdib ping or gettemp received before reset_n is deasserted may result in a timeout 0x81 completion code for all subsequent such commands
when all enabled cores on a socket are simultaneously in core c3 core c6 or package c6 state and a pcie tph transaction layer packet processing hint with the prefetch hint set is received the system may hang
the pcie 31 base specification requires that ts1s sent during recoveryrcvrlock following 80 gts eq adaptive equalization contain the final transmitter preset number and coefficient values that were requested by an endpoint during phase 2 of eq due to this erratum ts1s with incorrect transmitter preset number values may be sent during recoveryrcvrlock following 80 gts adaptive equalization
due to this erratum reading the msr_temperature_target msr 1a2h may incorrectly return 0
reading core machine check bank registers using the peci platform environment control interface rdiamsr command may fail after core c6 state has been entered
if cltt closed loop thermal throttling is enabled when a warm reset is requested due to this erratum the processor will resume dimm temperature polling before the memory subsystem has been reinitialized
the extended tag field in the tlp header will not be zero for tlps issued by pcie ports 1a 1b 2c 2d 3c and 3d even when the extended tag field enable bit in the device control register offset 08h bit 8 is 0
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
on single home agent configurations due to this erratum the processor interferes with tsod thermal sensor on dimm usage by incorrectly clearing the tsod_present field bits70 of the smbcntl_1 csr bus 0 device 19 function 0 offset 0x198 after bios writes that field
when ddr4 is operating at 2133 mhz the processors memory control may violate the jedec tprpden timing specification
with memory lockstep enabled the system may experience correctable memory errors during boot with ia32_mci_statusmcacod 0x009x where x is 012 or 3 and indicates the channel number reporting the error
the bt backup tracker timeout logic in the home agent can trigger spuriously causing false machine checks indicated by ia32_mci_statusmscod0x0200
due to this erratum a pcie type 1 vdms vendor defined message is silently dropped unless the vendor id is the mctp management component transport protocol value of 0x1ab4
the pcie base specification indicates that configuration space headers have a base address register at offset 0x10 due to this erratum the power control units config_tdp_nominal csr bus 1 device 30 function 3 offset 0x10 is located where a base address register is expected
debug exceptions due to instruction breakpoints take priority over exceptions resulting from fetching an instruction due to this erratum a machinecheck exception resulting from the fetch of an instruction may take priority over an instruction breakpoint if the instruction crosses a 32byte boundary and the second part of the instruction is in a 32byte poisoned instruction fetch block
due to this erratum the processor power usage may be higher than specified for the vccin andor iio domains while in package c6 state
due to this erratum when c1e is enabled and after the processor has entered package c1e state core clock frequency becomes limited to its minimum value sometimes referred to as pn until the system exits package c3 state or deeper or the system is reset
due to this erratum correctable pcie receiver errors may not be logged in the dpe field bit 15 of the pcists csr bus 0 device 123 function 01 03 03 offset 6h when operating at 80 gts
the pcie base specification requires a write to the slot control register offset a8h to generate a hot plug command when the downstream port is hot plug capable due to this erratum a hot plug command is generated only when one or more of the slot control register bits 116 are changed
under certain conditions p2p peertopeer traffic with x4 pcie ports on the same processor ie local may cause a system hang
when two llc last level cache errors happen in close proximity a ucna uncorrectable no action required machine check may be dropped or a spurious machine check or cmci corrected machine check interrupt may be issued further when this erratum occurs the merged cbo llc machine check bank ia32_mc17 19_status msrs may be incorrect
if a memory ca commandaddress parity error occurs while the memory subsystem is configured in lockstep mode then the channel that observed the error will properly log the error but the associated channel in lockstep will incorrectly log an uncorrectable error in its ia32_mci_status msr
the pci capptr capability pointer register is defined to contain the offset to the capabilities list structure when the pci pcists pci status register bit 4 capabilities_list is set to 1 due to this erratum capptr offset 0x34 should hold a value of 0x40 but is instead zero for these imc integrated memory controller and intel qpi quickpath interconnect device device 8 functions 356 device 9 functions 356 device 10 functions 356 device 19 functions 05 device 20 functions 03 device 21 functions 03 device 22 functions 03 device 23 functions 03
a pcie memory write tlp transaction layer packet with an at field value of 01b address translation request does not set the ur unsupported request bit uncerrsts csr bus 0 device 0 function 0 offset 0x14c bit 20 as required by the pcie base specification
consecutive peci platform environment control interface rdiamsr commands to access core machine check msrs can result in a system hang when core c6 state is enabled
due to this erratum trr targeted row refresh is not compatible with ddr4 lrdimms
when ca command address parity error injections are occurring too frequently the home agent may be prevented from completing memory transactions this may result in an internal timer error indicated by ia32_mci_status mscod0x0080 and ia32_mci_status mcacod0x0400
certain complex internal timing conditions present when a warm reset is requested can prevent the orderly completion of inflight transactions it is possible under these conditions that the warm reset will fail and trigger a full system shutdown
the patrol scrubber when mirroring is enabled may incorrectly identify certain data patterns as poison data or as memory errors
setting the turbo_activation_ratio_lock field bit 31 of the msr_turbo_activation_ratio msr 64ch has no effect it does not block future writes to the msr_turbo_activation_ratio msr
certain complex internal timing conditions present when a warm reset is requested can prevent the orderly completion of inflight transactions it is possible under these conditions that the warm reset will fail and trigger a full system shutdown
intel quickdata technology ie crystal beach dma v32 does not correctly halt and report aborts on illegal source addresses placed in a cbdma descriptor regardless of type legacy or pq this abort condition may cause unpredictable system behavior
the integrated io unit uses the vpp virtual pin port to communicate with power controllers switches and leds associated with pcie hotplug sequencing due to this erratum a warm reset occurring when a vpp transaction is in progress may result in an extended vpp stall termination of the inflight vpp transaction or a transient power down of slots subject to vpp power control
completions with ur uncorrectable response and ca completer abort status should trigger ler live error recovery further these packets should be dropped upon entering ler due to this erratum these completions may not be dropped when ler is triggered
due to this erratum the surprise_down_error_status uncerrsts device0 function offset 0x14c bit5 is not set to 1 when dmi port detects a surprise down error
when a rdecc error occurs on an intel smi2 channel operating at a 11 ratio halfwidth mode and dddc dual device data correction enabled the error logging in the intel c102104112114 scalable memory buffer and the processor is not properly coordinated
the pci express base specification rev 31 requires that the sltcon bus 0device 3 0function 30offset 0xa8 csrs electromechanical_interlock_control bit 11 always returns aa 0 when read due to this erratum a read of this bit returns the last value written
an intel smi2 ddr3 cap command address parity error rather than initiating a mirroring event as expected is ignored leading to unpredictable system behavior
the peci platform environment control interface rdpkgconfig command may return incorrect results when accessing the dram thermal interface indices 14 and 22
the performance monitoring events offcore_response events b7h and bbh should count uncore responses matching the requestresponse configuration specified in msr_offcore_rsps 1a6h and 1a7h respectively for coreoriginated requests however due to this erratum corewb bit 3 pf_l3_data_rd bit 7 pf_l3_rfo bit 8 pr_l3_code_rd bit 9 split_lock_uc_lock bit 10 and streaming_stores bit 11 request types may undercount
when a performance monitoring counter is configured to count off_core_response_12 events b7h and b8h data obtained for remote dram may be attributed to l3_miss_remote_hop0 as programmed by msr_offcore_rsp_12 msrs 1a6h 1a7h bit 27 instead of l3_miss_remote_hop1 bit 28 or l3_miss_remote_hop2p bit 29 data provided from remote caching agent associated with remote dram is unaffected
due to this erratum the supplier information may become stale and the following events may count incorrectly mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h page_walker_loadsdtlb_l3 event bch umask 14h page_walker_loadsitlb_l3 event bch umask 24h page_walker_loadsdtlb_memory event bch umask 18h page_walker_loadsitlb_memory event bch umask 28h
if vm exit occurs from a guest with primary processorbased vmexecution control activate secondary controls set to 0 and the secondary processorbased vm execution control enable vpid set to 1 then after a later vm entry with vpid fully enabled activate secondary controls and enable vpid set to 1 the processor may use stale linear address translations
an iret instruction that results in a task switch by returning from a nested task does not serialize the processor contrary to the software developers manual vol 3 section titled serializing instructions
for a small subset of parts under elevated die temperature conditions a pstate or c state transition may result in a system timeout or system shutdown
the peci platform environmental control interface 31 specifications operating frequency range is 02 mhz to 2 mhz due to this erratum peci may be unreliable when operated above 1 mhz
if the virtualize apic accesses vmexecution control is 1 a 256bit vgatherqps with an element that maps to the apicaccess page may use incorrect addresses to load other elements
when a memory ecc error occurs a spurious patrol scrub error may also be logged on another memory channel
during a high rate of correctable dram error events a ddr4 cap commandaddress parity error may result in an unrecoverable machine check with an ia32_mci_statusmcacod bits 150 value of 0000 0000 100x xxxx where x can be 0 or 1 and an ia32_mci_statusmscod bits 3116 value of 0x0200 or with an ia32_mci_statusmcacod value of 0000 0001 xxxx xxxx and an ia32_mci_statusmscod value of 0x000c
execution of an xbegin instruction while the monitor trap flag vmexecution control is 1 will be immediately followed by an mtf vm exit if advanced debugging of rtm transactional regions has been enabled the vm exit will erroneously save the address of the xbegin instruction as the instruction pointer instead of the fallback instruction address specified by the xbegin instruction in addition it will erroneously set bit 16 of the pendingdebugexceptions field in the vmcs indicating that a debug exception or a breakpoint exception occurred
a performance monitoring counter may generate a pebs precise event based sampling record after disabling pebs or the performance monitoring counter by clearing the corresponding enable bit in ia32_pebs_enable msr 3f1h or ia32_perf_global_ctrl msr 38fh
the pcie base specification requires every downstream port that supports link speeds greater than 50 gts to support dll data link layer link active reporting however the pcie ports do not support dll link active reporting
if a pcie link is established then disabled and the link partners advertised speeds are changed while the link is disabled the link may fail to correctly negotiate link speed when it is reenabled
assertion of prochot after reset deassertion but before bios has completed reset initialization indicated by cpl3 may result in persistent processor throttling asserting prochot during and after reset assertion for frb fault resilient boot tristating of the processor is not affected by this erratum
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
a corrected internal parity error ia32_mc0_statusmcacod0005h and ia32_mc0_statusmscod000fh msr 401h bits 150 and bits 3116 respectively may cause a system hang
when an srar software recoverable action required error is logged in ia32_mc0_status msr 401h a subsequent fatal error will correctly set the pcc bit 57 and over bit 62 flags but may fail to update other fields in ia32_mc0_status
if software writes machine check bank 1 to contain a valid uc error with ia32_mc1_statusmiscv cleared another uc machine check may set ia32_mc1_statusmiscv in violation of the overwrite rules
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
after a fault due to a failed pebs processor event based sampling or bts branch trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
the execution of an x87 store instruction which causes a pe precision exception to be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod  0150h and ia32_mci_statusmscod  000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility pebs extension however due to this erratum load latency facility may stop counting load instructions when intel hyperthreading technology intel ht technology is enabled
due to this erratum the perfmon events listed below may be counted when the logical processor is not in c0 state idqempty event 79h umask 02h idq_uops_not_deliveredcore event 9ch umask 01h resource_stallsany event a2h umask 01h adding the following 3 events to existing erratum cycle_activitycycles_ldm_pending event a3h umask 02h cmask 02h cycle_activitycycles_no_execute event a3h umask 04h cmask 04h cycle_activitystalls_ldm_pending event a3h umask 06h cmask 06h
due to this erratum on processors that do not support intel tsx cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
boundary scan testing of the intel qpi and pcie interfaces may incorrectly report a recurring stuck at 1 failure on intel qpi and pcie receiver lanes this erratum only affects boundary scan testing and does not affect functional operation of the intel qpi and pcie interfaces
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
when isoch isochronous operation is enabled within bios the system may hang and fail to boot
during system initialization the operating system may access the standard pci bars base address registers due to this erratum accesses to the home agent bar registers bus 1 device 18 function 04 offsets 0x140x24 will return nonzero values
if a pcie port receives a malformed tlp transaction layer packet an error is logged in the uncerrsts register device 0 function 0 offset 14ch and device 23 function 03 offset 14ch due to this erratum the header of the malformed tlp is logged incorrectly in the hdrlog register device 0 function 0 offset 164h and device 23 function 03 offset 164h
if a pcie port receives a malformed tlp that also would generate an ecrc check failed error it should report a malformed tlp error when malformed tlp errors are masked the processor should report the lowerprecedence ecrc check failed error but due to this erratum it does not
during an intel qpi slow mode to fast mode transition the ll_status field of the qpipcsts register bus 0 device 8910 function 0 offset 0xc0 may not be correctly updated to reflect link readiness
when intel turbo boost technology is disabled by ia32_misc_enables msr 416h turbo_mode_disable bit 38 the ring operating frequency may be below p1 operating frequency
due to this erratum with ddr42133 memory exiting from pc3 package c3 or pc6 package c6 state may lead to unpredictable system behavior
certain complex internal timing conditions present when a warm reset is requested can prevent the orderly completion of inflight transactions it is possible under these conditions that the warm reset will fail and trigger a full system shutdown
due to this erratum cat cache allocation technology way enforcement may not behave as configured
an exceptioninterrupt event should be transparent to the lbr last branch record bts branch trace store and btm branch trace message mechanisms however during a specific boundary condition where the exceptioninterrupt occurs right after the execution of an instruction at the lower canonical boundary 0x00007fffffffffff in 64bit mode the lbr return registers will save a wrong return address with bits 63 to 48 incorrectly sign extended to all 1s subsequent bts and btm operations which report the lbr will also be incorrect
eflags discrepancy on page faults and on eptinduced vm exits after a translation change this erratum is regarding the case where paging structures are modified to change a linear address from writable to nonwritable without software performing an appropriate tlb invalidation when a subsequent access to that address by a specific instruction add and btc btr bts cmpxchg dec inc neg not or rolror salsarshlshr shld shrd sub xor and xadd causes a page fault or an ept induced vm exit the value saved for eflags may incorrectly contain the arithmetic flag values that the eflags register would have held had the instruction completed without fault or vm exit for page faults this can occur even if the fault causes a vm exit or if its delivery causes a nested fault
a single data translation look aside buffer dtlb error can incorrectly set the overflow bit 62 in the mci_status register a dtlb error is indicated by mca error code bits 150 appearing as binary value 000x 0000 0001 0100 in the mci_status register
due to certain internal processor events updates to the ler last exception record msrs msr_ler_from_lip 1ddh and msr_ler_to_lip 1deh may happen when no update was expected
if the target linear address range for a monitor or clflush is mapped to the local xapics address space the processor will hang
during a gp general protection exception the processor pushes an error code on to the exception handlers stack if the segment selector descriptor straddles the canonical boundary the error code pushed onto the stack may be incorrect
in general a pebs record should be generated on the first count of the event after the counter has overflowed however ia32_debugctl_msrfreeze_while_smm msr 1d9h bit 14 prevents performance counters from counting during smm system management mode due to this erratum if a performance counter overflowed before an smi a pebs record has not yet been generated because another count of the event has not occurred the monitored event occurs during smm then a pebs record will be saved after the next rsm instruction when freeze_while_smm is set a pebs should not be generated until the event occurs outside of smm
apic advanced programmable interrupt controller may not update the esr error status register flag received illegal vector bit 6 properly when an illegal vector error is received on the same internal clock that the esr is being written as part of the writeread esr access flow the corresponding error interrupt will also not be generated for this case
when the pdir precise distribution for instructions retired mechanism is activated inst_retiredall event c0h umask value 00h on counter 1 programmed in pebs mode the processor may return wrong pebspmi interrupts andor incorrect counter values if the counter is reset with a sav below 100 sampleaftervalue is the counter reset value software programs in msr ia32_pmc1470 in order to control interrupt frequency
if cr0cd1 the mtrrs and pat should be ignored and the uc memory type should be used for all memory accesses due to this erratum a logical processor in vmx operation will operate as if cr0cd0 even if that bit is set to 1
this erratum may cause a machinecheck error ia32_mci_statusmcacod0150h on the fetch of an instruction that crosses a 4kbyte address boundary it applies only if 1 the 4kbyte linear region on which the instruction begins is originally translated using a 4kbyte page with the wb memory type 2 the paging structures are later modified so that linear region is translated using a large page 2mbyte 4mbyte or 1 gbyte with the uc memory type and 3 the instruction fetch occurs after the paging structure modification but before software invalidates any tlb entries for the linear region
the vaesimc and vaeskeygenassist instructions should produce a ud invalid opcode exception if the value of the vvvv field in the vex prefix is not 1111b due to this erratum if cr0ts is 1 the processor may instead produce a nm devicenot available exception
if the localapic timers ccr currentcount register is 0 software should be able to determine whether a previously generated timer interrupt is being delivered by first reading the deliverystatus bit in the lvt timer register and then reading the bit in the irr interruptrequest register corresponding to the vector in the lvt timer register if both values are read as 0 no timer interrupt should be in the process of being delivered due to this erratum a timer interrupt may be delivered even if the ccr is 0 and the lvt and irr bits are read as 0 this can occur only if the dcr divide configuration register is greater than or equal to 4 the erratum does not occur if software writes zero to the initial count register before reading the lvt and irr bits
x87 instructions that trigger mf normally service interrupts before the mf due to this erratum if an instruction that triggers mf is executed while enhanced intel speedstep technology transitions intel turbo boost technology transitions or thermal monitor events occur the pending mf may be signaled before pending interrupts are serviced
normally data breakpoints matches that occur on a mov ss rm or pop ss will not cause a debug exception immediately after movpop ss but will be delayed until the instruction boundary following the next instruction is reached after the debug exception occurs dr6b0b3 bits will contain information about data breakpoints matched during the movpop ss as well as breakpoints detected by the following instruction due to this erratum dr6b0b3 bits may not contain information about data breakpoints matched during the movpop ss when the following instruction is either an mmx instruction that uses a memory addressing mode with an index or a store instruction
the vexl bit should be ignored for the vcvtss2si vcvtsd2si vcvttss2si and vcvttsd2si instructions however due to this erratum the vexl bit is not ignored and will cause a ud
the performance monitor events other_assistsavx_to_sse event c1h umask 08h and other_assistssse_to_avx event c1h umask 10h incorrectly increment and over count when an hle hardware lock elision abort occurs
the performance monitor event dsb2mite_switchescount event abh umask 01h should count the number of dsb decode stream buffer to mite macro instruction translation engine switches due to this erratum the dsb2mite_switchescount event will count speculative switches and cause the count to be higher than expected
a timed mwait instruction specifies a tsc deadline for execution resumption if a wake event causes execution to resume before the deadline is reached a subsequent timed mwait instruction may incorrectly use the deadline of the previous timed mwait when that previous deadline is earlier than the new one
ia32_vmx_vmcs_enum msr 48ah bits 91 report the highest index value used for any vmcs encoding due to this erratum the value 21 is returned in bits 91 although there is a vmcs field whose encoding uses the index value 23
during rtm restricted transactional memory operation when branch tracing is enabled using btm branch trace message or bts branch trace store the incorrect eip value from_ip pointer may be observed for an rtm abort
the performance monitoring events mem_trans_retiredload_latency event cdh umask 01h mem_load_retiredl2_hit event d1h umask 02h and mem_uops_retiredlocked event doh umask 20h should count the number of locked loads due to this erratum these events may under count for locked transactions that hit the l2 cache
if an intel transactional synchronization extensions intel tsx transactional abort event occurs during a string instruction the fromip in the lbr last branch record is not correctly reported
due to this erratum pmi performance monitoring interrupt may be repeatedly issued until the counter overflow bit is cleared in the overflowing counter
attempt to use fxsave or fxrstor with a vex prefix should produce a ud invalid opcode exception if either the ts or em flag bits in cr0 are set a nm devicenot available exception will be raised instead of ud exception
when xd bit disable in the ia32_misc_enable msr 1a0h bit 34 is set to 1 it should not be possible to enable the execute disable feature by setting ia32_efernxe due to this erratum a vm exit that occurs with the 1setting of the load ia32_efer vmexit control may set ia32_efernxe even if ia32_misc_enable bit 34 is set to 1 this erratum can occur only if ia32_misc_enable bit 34 was set by guest software in vmx nonroot operation
if ept extended page tables is enabled a mov to cr3 or vmfunc may be followed by an unexpected page fault or the use of an incorrect page translation
setting the stop bit bit 4 in a table of physical addresses entry directs the processor to stop intel pt processor trace packet generation when the associated output region is filled the processor indicates this has occurred by setting the stopped bit bit 5 of ia32_rtit_status msr 571h due to this erratum packet generation may stop earlier than expected
when a pebs preciseeventbasedsampling record is logged immediately after a nottaken conditional branch jcc instruction the eventing ip field should contain the address of the first byte of the jcc instruction due to this erratum it may instead contain the address of the instruction preceding the jcc instruction
an hle hardware lock elision transactional region begins with an instruction with the xacquire prefix due to this erratum reads from within the transactional region of the memory destination of that instruction may return the value that was in memory before the transactional region began
due to this erratum the performance monitoring feature pdir precise distribution of instructions retired for instr_retiredall event c0h umask 01h will generate redundant pebs precise event based sample records for a counter overflow this can occur if the lower 6 bits of the performance monitoring counter are not initialized or reset to 0 in the pebs counter reset field of the ds buffer management area
if a peci transaction is interrupted by a warm reset it may result in a machine check exception with mcacod of 0x402
the intel pt modeexec mode packet  execution mode leaf pip paging information packet and cbr core bus ratio packets are generated at the following psb packet stream boundary event rather than at the time of the originating event as expected
the performance monitor instructions retired event event c0h umask 00h and the instruction retired fixed counter ia32_fixed_ctr0 msr 309h are used to count the number of instructions retired due to this erratum certain internal conditions may cause the counters to increment when no instruction has retired or to intermittently not increment when instructions have retired
the ia32_pmcx msr c1h  c8h generalpurpose performance counters may report inaccurate counts when the associated event selection ia32_perfevtselx msrs 186h  18dh anythread field bit 21 is set and either
use of intel transactional synchronization extensions may result in a transactional abort if an abort occurs immediately following a branch instruction an invalid lbr last branch record may be recorded before the lbr produced by the abort
when intel processor trace is enabled psb packet stream boundary packets may include a pip paging information packet even though the os field bit 2 of ia32_rtit_ctl msr 570h is 0
if a processor core ratio change occurs while the processor is in probe mode the system may hang
as per the intel virtualization technology for directed io intel vtd specification bits 63haw host address width of the posted interrupt descriptor upper address field in the irte interrupt remapping table entry must be checked for a value of 0 violations must be reported as an interruptremapping fault due to this erratum hardware does not perform this check and does not signal an interruptremapping fault on violations
the tph transaction layer packet processing hints requester capability structure pci express extended capability id type 0017h incorrectly reports that device specific mode is supported in its tph requester capability register bit 2 at offset 04h in the capability structure
due to this erratum the processor may reset and signal a machine check error with a ia32_mci_statusmcacod value of 0400h when in package c3 state or deeper
when the msr_pkg_cst_config_controlacc_enable bit msr e2h bit 16 is set the vmxpreemption timer is not decremented in the hlt state
intel avx workloads require a reduced maximum turbo ratio due to this erratum the intel avx turbo ratio is higher than expected which may cause the processor to exceed iccmax limits and lead to unpredictable system behavior
a wrmsr that attempts to set mode1_memerror_report field bit 1 andor mem_correrr_logging_disable field bit 5 of the msr_error_control msr 17fh may incorrectly cause a gp general protection exception
acc autonomous cstate control is enabled by setting acc_enable bit 16 of msr_pkg_cst_config_control e2h to 1 if acc is enabled while the processor is in vmx nonroot operation an unexpected vm exit a machine check or unpredictable system behavior may result
when a memory ecc error occurs a spurious patrol scrub error may also be logged on another memory channel
performance monitoring event br_inst_retired c4h counts retired branch instructions due to this erratum when operating on logical processor 1 of any core br_inst_retiredfar_branch event c4h umask 40h and br_inst_retired all_branches event c4h umask 04h may count incorrectly logical processor 0 of all cores and cores with smt disabled are not affected by this erratum
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
under certain circumstances reading a machine check register using the peci platform environmental control interface rdiamsr command may result in a machine check processor hang or shutdown
an ept extended page table violation that causes a ve virtualization exception may not invalidate the guestphysical mappings that were used to translate the guest physical address that caused the ept violation
when a package cstate transition occurs at the same time an inband peci transaction occurs prochot may be incorrectly asserted
if lbr last branch records bts branch trace store or btm branch trace messages are enabled in the ia32_debugctl msr 1d9h an attempt to enable intel pt intel processor trace in ia32_rtit_ctl msr 570h results in a gp general protection exception note that the btm enable bit in ia32_debugctl msr is named tr correspondingly if intel pt was previously enabled when an attempt is made to enable lbr bts or btm a gp will occur
if a memory ca commandaddress parity error occurs while the memory subsystem is configured in lockstep mode then the channel that observed the error will properly log the error but the associated channel in lockstep will incorrectly log an uncorrectable error in its ia32_mci_status msr
due to this erratum processors with more than ten cores may be limited to less than the specified maximum turbo frequency
the eventingip field in the pebs processor eventbased sampling record reports the address of the instruction that triggered the pebs event under certain complex microarchitectural conditions the eventingip field may be incorrect
due to this erratum enabling hwp hardwarecontrolled performance states by setting bit 0 of ia32_pm_enable msr 770h may lead to an unexpected delay in reaching turbo frequencies after a core exits c6 sleep state this erratum does not occur when hwp is not enabled
writing the iio_llc_ways msr c8bh always sets bits 10 regardless of the value written
after a fault due to a failed pebs processor event based sampling or bts branch trace store address translation the rf resume flag may be incorrectly set in the eflags image that is saved
under certain internal timing conditions while executing a complex sequence of locked instructions the system may hang
under a complex set of internal timing conditions and system events software using the intel tsx transactional synchronization extensions instructions may behave unpredictably
if a data breakpoint occurs coincident with a machine check exception then the data breakpoint may be lost
due to this erratum an uncorrectable internal parity error with an ia32_mc0_statusmcacod bits 150 value of 0005h may incorrectly set the ia32_mc0_statusover flag bit 62 indicating an overflow when a single error has been observed
the pml page modification log index field is saved to an incorrect vmcs on an smm vm exit vm entries that return from smm restore the pmlindex field from that same incorrect vmcs
due to this erratum an apic timer interrupt coincident with the core entering c6 state may be lost rather than held for servicing later
microcode updates loaded by the operating system may result in excessive and persistent throttling that significantly reduces system performance
under a complex series of microarchitectural events while running intel hyper threading technology a correctable internal parity error or unpredictable system behavior may occur
due to this erratum the ia32_mc4_status val msr 411h bit 63 may be incorrectly cleared by a warm reset
due to this erratum the supplier may be misattributed to unknown and the following events may undercount mem_load_uops_retiredl3_hit event d1h umask 04h mem_load_uops_retiredl3_miss event d1h umask 20h mem_load_uops_l3_hit_retiredxsnp_miss event d2h umask 01h mem_load_uops_l3_hit_retiredxsnp_hit event d2h umask 02h mem_load_uops_l3_hit_retiredxsnp_hitm event d2h umask 04h mem_load_uops_l3_hit_retiredxsnp_none event d2h umask 08h mem_load_uops_l3_miss_retiredlocal_dram event d3h umask 01h mem_trans_retiredload_latency event cdh umask 01h
the execution of an x87 store instruction which causes a pe precision exception to be pended and also causes a vmexit due to an ept violation or misconfiguration may lead the vmm logging a machine check exception with a cache hierarchy error ia32_mci_statusmcacod  0150h and ia32_mci_statusmscod  000fh additionally fswpe and fswes bits 5 and 7 of the fpu status word may be incorrectly set to 1 and the x87 last instruction opcode fop may be incorrect
the performance monitoring events mem_trans_retiredload_latency_ event cdh umask 01h any latency count load instructions whose latency exceed a predefined threshold where the loads are randomly selected using the load latency facility pebs extension however due to this erratum load latency facility may stop counting load instructions when intel hyperthreading technology intel ht technology is enabled
the ia32_pmc47 msr c5hc8h generalpurpose performance monitoring counters will not count when the associated cpl filter selection in ia32_perfevtselx msrs 18ah18dh usr field bit 16 is set while os field bit 17 is not set
due to this erratum on processors that do not support intel tsx cpuid07hebx bits 4 and 11 are both zero writes to msr_lastbranch_x_from_ip msr 680h to 68fh may gp unless bits6261 are equal to bit47
after writing to the ia32_tsc_adjust msr 3bh any subsequent write to the ia32_tsc_deadline msr 6e0h may incorrectly process the desired deadline when this erratum occurs the resulting timer interrupt may be generated at the incorrect time
an uncorrectable error ia32_mc3_statusmcacod0400 and ia32_mc3_statusmscod0080 may be logged for processors that have more than 25mb lastlevelcache per core on attempting to load a microcode update or execute an authenticated code module this issue does not occur with microcode updates with a signature of 0x0b000021 and greater
when entering adr asynchronous dram selfrefresh whether through power loss or a specific adr command concurrent reads to the nvdimm may prevent the data from being properly preserved
when a downstream switch connected to a cpu root port experiences a link down it may cause a back pressure event that prevents other cpu root ports from completing transaction for 50ms but less than 100ms
completions with ur uncorrectable response and ca completer abort status should trigger ler live error recovery further these packets should be dropped upon entering ler due to this erratum these completions may not be dropped when ler is triggered
due to a logic issue ddr4 command address parity cap feature can correct a cap error but will not be able to determine the dimm which failedformaly ex2 ex24 and ex28
the root port does not log the error source id when performing an aligned write to mmio address within root port aperture but outside the bars of downstream device
in some cases dimmtempstat_20 and alldimmtempstat and peci service 1422 may return data for opposite intel c102c104  c112c114 scalable memory buffer channel this only applies to channel 0 and 1 of the respective imc and channel 2 and 3 are not impacted by this issue
a clear write of 1 to this rw1c field to a respective dimmtempstat_20 and mxbtempstat csr ev_asrt_temp field clears all ev_asrt_temp fields in the respective csr
multiple code fetches in quick succession that generate page walks may result in a system hang causing an internal timer error an mcacod value of 0400h logged into ia32_mci_status bits 150
an execution of vmovntdqa streaming load instruction that loads from wc write combining memory may appear to pass an earlier locked instruction that accesses a different cache line
boundary scan testing of the intel qpi and pcie interfaces may incorrectly report a recurring stuck at 1 failure on intel qpi and pcie receiver lanes this erratum only affects boundary scan testing and does not affect functional operation of the intel qpi and pcie interfaces
when operating in smm mode cacheable mmio requests may prevent pcie memory requests from completing
due to this erratum two fields in ddrcrclktraining csr bus 2 device17 function 5 offset a1ch that should have been readwrite vmselogicdelay0 bit 29 and vmselogicdelay2 bit 30 are writeonly reading the csr always returns 0s for these fields
due to this erratum all subevents of performance monitoring event no_alloc_cycles event cah will be incorrect on logical processors 2 and 3 logical processors 0 and 1 are not affected by this erratum
the a accessed bit 5 andor d dirty bit 6 bits in a pagingstructure entry eg a pagetable entry may be set to 1 even when that entry has its present bit cleared or has a reserved bit set this can only occur when one logical processor has cleared the present bit or set a reserved bit in a pagingstructure entry while at the same time another logical processor accesses the contents of a linear address mapped by that entry
inbound memory writes with the ro relaxed ordering and ns no snoop attributes set in the tlp will cause the processor to hang
when cltt closed loop thermal throttling peci passthrough mode is enabled peci thermal update messages are dropped
when an uncorrectable memory error follows a correctable memory error the error logged may not set the en field bit 60 in the ia32_mc3_status msr 40ch
the apic timer ccr current count register may be too high after waking from package c6 the next timer interrupt will be delivered at the correct time however in periodic mode the reload of the apic timer may be delayed
the act of one processor or system bus master writing data into a currently executing code segment of a second processor with the intent of having the second processor execute that data as code is called crossmodifying code xmc xmc that does not force the second processor to execute a synchronizing instruction prior to execution of the new code is called unsynchronized xmc software using unsynchronized xmc to modify the instruction byte stream of a processor can see unexpected or unpredictable execution behavior from the processor that is executing the modified code
when one element of a scatter or gather instruction faults the upper 48 bits of the mask register will be cleared ideally only bits corresponding to completed operations should be cleared
if gather scatter or vrsqrt14 instructions trigger a data breakpoint the debug status register dr6 may be cleared
due to this erratum gp generalpurpose counter 1 may overcount cpu_clk_unhaltedthread_p event 3ch umask 00h if ia32_perfevtsel0anythread msr 186h bit 21 is set
an instruction with 7 or more prefixes can result in a spurious code fetch that may signal a pf page fault or read uc uncacheable memory
when poisoned data is received at the edc mscod should be logged as a data error encoding  0x2 instead the encoding is set for an uncorrectable error 0x40 the effected machine check bank registers are ia32_mc7_status through ia32_mc14_status
the poc_reset_straps csr bus 1 device 30 function 1 offset a0h does not correctly report the strap settings
due to this erratum ia32_perf_global_statusovfuncore msr 38eh bit61 is always 0 and writing 1 to ia32_perf_global_ovf_ctrlclrovfuncore msr 390h bit61 signals gp
the peci command rdpkgconfig index 0 with data max thread id always returns a value of 0x12f regardless of the number of tiles enabled
bist results in bist_results_cfg_2 bus 0 device 8 function1 offset 0xb8 bits 50 returns 0 regardless of actual bist status
under complex microarchitectural conditions when mt is active operations which should invalidate instruction tlb entries may fail to do so this may lead a later instruction fetch using a stale linear address translation
a cpu access to addresses at or above tohm top of high memory as configured in the tohm csr bus 0 device 5 function 0 offset d8h and below 245 may lead to unpredictable system behavior when the l1 data prefetcher is enabled
system may hang during warm reset with a pcu_mc_statusmccod  0x0402 and pcu_mc_status msec_fw  0x9c or 0x9e
when bios locks access to smbcntl_0 bus 1 device 30 function 0 offset 108h and smbcntl_1 bus 1 device 30 function offset 108h programmatic access outside smm and peci access may not be able to select their intended smbus devices
system may hang during warm reset with a pcu_mc_statusmccod  0x0402 and pcu_mc_status msec_fw  0x9c or 0x9e
operating the processor with ddr4 memory configured to operate at 2400 mts may cause unpredictable system behavior
correctable and uncorrectable memory errors may occur when ddr opportunistic self refresh is enabled
uncorrectable errors logged into the ia32_mci_status registers for bank 7 to bank 16 do not signal a machine check exception if the error cause was ca parity data parity or byte en parity mscod value of 0001h 0002h or 0004h respectively
pcc field bit57 of ia32_mci_status registers for bank 7 to bank 16 is not set as expected for a ca parity error mscod value of 0001h when poison is enabled
uc uncorrectable errors logged into the ia32_mci_status registers for bank 7 to bank 16 will not indicate pcc1 processor context corrupt bit 57 and over1 bit 62 if the error is overwriting a previous ucna uncorrected no action required error
a complex set of microarchitectural conditions may result in unpredictable system behavior
under complex microarchitectural conditions the processor may hang resulting in an internal timer error machine check ia32_mci_statusmcacod400h bits 150
when the mcdram controller is configured in a cache or hybrid mode and error scrubbing is enabled a complex set of microarchitectural conditions may lead to unpredictable system behavior
